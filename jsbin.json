

{bebekid:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <buttons-sns></buttons-sns>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  template: \`
    <button>いいね！</button>
  \`,
}

const ButtonEmpathy = {
  template: \`
    <button>そだねー</button>
  \`,
}

const ButtonsSns = {
  components: {
    'button-preference': ButtonPreference,
    'button-empathy': ButtonEmpathy,
  },
  template: \`
    <div>
      <button-preference></button-preference>
      <button-empathy></button-empathy>
    </div>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'buttons-sns': ButtonsSns,
  },
})

`,
},
becugen:{html:`
<h2>floatを使用した場合</h2>
<div class="float-box">
  <div>
    <p>つれづれなるまゝに、日暮らし、硯にむかひて、心にうつりゆくよしなし事を、そこはかとなく書きつくれば、あやしうこそものぐるほしけれ。（Wikipediaより）</p>
  </div>
  <div>
    <p>この文章はダミーです。文字の大きさ、量、字間、行間等を確認するために入れています。</p>
  </div>
</div>

<h2>Flexboxを使用した場合</h2>
<div class="flex-box">
  <div>
    <p>つれづれなるまゝに、日暮らし、硯にむかひて、心にうつりゆくよしなし事を、そこはかとなく書きつくれば、あやしうこそものぐるほしけれ。（Wikipediaより）</p>
  </div>
  <div>
    <p>この文章はダミーです。文字の大きさ、量、字間、行間等を確認するために入れています。</p>
  </div>
</div>
`,
css:`
.float-box::after {
  content: '';
  display: block;
  clear: both;
}
.float-box div, .flex-box div {
  width: 200px;
  margin-right: 20px;
  padding: 10px;
}
.float-box div {
  float: left;
  background-color: #bce2e8;
}

.flex-box {
  display: -webkit-flex;
  display:         flex;
}
.flex-box div {
  background-color: #bce2e8;
}
`,
},
bewudox:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="ib1">div1</div>
        <div class="ib2">div2</div>
        <div class="ib3">div3</div>
    </body>
</html>
`,
css:`
.ib1 {
    background-color: pink;
    display: inline-block;
    width: 60px;
    text-align: center;
}

.ib2 {
    background-color: palegreen;
    display: inline-block;
    width: 60px;
    text-align: center;
}

.ib3 {
    background-color: skyblue;
    display: inline-block;
    width: 60px;
    text-align: center;
}
`,
},
beyeweh:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>
  <p class="pm">おはよう</p>
  <p class="pm">おはよう</p>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.pm').text('こんにちは！');
`,
},
bihayuw:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <nav>
            <ul>
                <li><a href="#">TOP</a></li>
                <li><a href="#">ABOUT</a></li>
                <li><a href="#">MAP</a></li>
                <li><a href="#">BLOG</a></li>
                <li><a href="#">CONTACT</a></li>
            </ul>
        </nav>
    </body>
</html>
`,
css:`
nav ul li {
    display: inline-block;
    width: 100px;
    background-color: #dddddd;
    text-align: center;
    padding: 5px;
}
`,
},
biqupox:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a href="one.html">ワン</a>
  <a href="two.html">ツー</a>
  <a href="three.html">スリー</a>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('a').attr('href', 'new.html');
`,
},
biwufu:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Animate.cssのテスト</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <h1 class="animate__animated animate__bounce">テスト</h1>
</body>

</html>
`,
},
bixixuf:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>パンくずリスト - スラッシュ区切り</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- コンテナ -->
    <div class="container">

      <!-- パンくずリスト -->
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">TOP</a></li>
          <li class="breadcrumb-item"><a href="#">ABOUT</a></li>
          <li class="breadcrumb-item"><a href="#">NEWS</a></li>
          <li class="breadcrumb-item"><a href="#">CONTACT</a></li>
        </ol>
      </nav>

    </div>


  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #2f92dd;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* パンくずリスト */
.breadcrumb {
  display: flex;
  column-gap: .75rem;
  list-style: none;
}

.breadcrumb-item + .breadcrumb-item::before {
  padding-right: .75rem;
  content: "/";
}

`,
},
botacuw:{html:`
<ul>
    <li>飲料水</li>
    <li>パン</li>
    <li>牛乳</li>
    <li>鶏肉</li>
</ul>
`,
},
boyejec:{html:`
<picture>
  <source media="(max-width:639px)" srcset="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/mobile-design/639.jpg">
  <source media="(min-width:640px)" srcset="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/mobile-design/640.jpg">
  <img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/mobile-design/640.jpg" alt="">
</picture>
`,
css:`
img {
    width: 100%;
}
`,
},
bukibew:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
}
#main {
    float: left;
    width: 60%;
    height: 100px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 100px;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
busozan:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference></button-preference>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.component('button-preference', {
  data() {
    return { count: 0 };
  },
  methods: {
    countUp() {
      this.count += 1;
    },
  },
  template: \`
    <button v-on:click="countUp">
      {{ count }} いいね！
    </button>
  \`,
});

new Vue({
  el: '#example',
});
`,
},
butohus:{html:`
<h1>自己紹介</h1>
<h2>氏名</h2>
煌木　太郎
<h2>職業</h2>
Webデザイナー
<h2>スキル</h2>
<ul>
  <li>Web</li>
  <li>イラスト</li>
  <li>英語</li>
</ul>
`,
},
cacapac:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body>
    <nav class="navbar bg-base-200">
        <!-- ホームへ戻るリンク。ブランドロゴなどを置く。 -->
        <a class="btn btn-ghost normal-case text-xl">P&amp;K</a>
    </nav>
</body>

</html>
`,
},
cahunev:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウトパターン - 中央寄せ</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- About -->
    <section class="about">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <a href="#" class="about-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/headphone.jpg"
               alt="ヘッドフォン" width="160" height="160" class="about-item-image">
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
        </a>
        <!-- アイテム -->
        <a href="#" class="about-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/headphone.jpg"
               alt="ヘッドフォン" width="160" height="160" class="about-item-image">
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
        </a>
        <!-- アイテム -->
        <a href="#" class="about-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/headphone.jpg"
               alt="ヘッドフォン" width="160" height="160" class="about-item-image">
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
        </a>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* 画像 */
img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

/* コンテナ */
.container {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  column-gap: 1rem;
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* アイテム */
.about-item {
  width: calc((100% - 1rem) /2);
}

.about-item:last-child {
  margin-top: 2rem;
}

/* 画像 */
.about-item-image {
  display: block;
  margin-right: auto;
  margin-bottom: 1.5rem;
  margin-left: auto;
  border-radius: 50%;
}

/* テキスト */
.about-item-text {
  font-size: .875rem;
}

`,
},
cayeqil:{html:`
<p>上下左右に内側の余白を一括指定</p>
<div class="padding-same-size"></div>
<hr>
<p>上下左右に内側の余白を指定</p>
<div class="padding-different-size"></div>
<hr>
<p>上下と左右に内側の余白を一括指定</p>
<div class="padding-different-size-updown-rightleft"></div>
<hr>
<p>上に内側の余白を指定</p>
<div class="padding-top"></div>
<hr>
<p>右に内側の余白を指定</p>
<div class="padding-right"></div>
<hr>
<p>下に内側の余白を指定</p>
<div class="padding-bottom"></div>
<hr>
<p>左に内側の余白を指定</p>
<div class="padding-left"></div>

`,
css:`
div {
  width: 100px;
  height: 100px;
  border: 2px solid #000;
}

.padding-same-size {
  padding: 10px;  
}

.padding-different-size {
  padding: 10px 30px 10px 20px;    
}

.padding-different-size-updown-rightleft {
  padding: 10px 30px;      
}

.padding-top {
  padding-top: 20px;
}

.padding-right {
  padding-right: 20px;
}

.padding-bottom {
  padding-bottom: 20px;
}

.padding-left {
  padding-left: 20px;
}
`,
},
cemomon:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    clear: both;
    margin-top: 50px;
    height: 50px;
    background-color: #ddddff;
}
`,
},
cibadoq:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <form>
            <h2>性別</h2>
            <label for="male">男性</label>
            <input type="radio" id="male" name="gender" value="male">
            <br>
            <label for="female">女性</label>
            <input type="radio" id="female" name="gender" value="female">
            <br>
            <label for="none">未回答</label>
            <input type="radio" id="none" name="gender" value="none">
            
            <h2>好きなスポーツ</h2>
            <label for="baseball">野球</label>
            <input type="checkbox" id="baseball" name="sports" value="baseball">
            <br>
            <label for="soccer">サッカー</label>
            <input type="checkbox" id="soccer" name="sports" value="soccer">
            <br>
            <label for="basketball">バスケットボール</label>
            <input type="checkbox" id="basketball" name="sports" value="basketball">
            <br>
            <label for="golf">ゴルフ</label>
            <input type="checkbox" id="golf" name="sports" value="golf">
            <br>
            <h2>都道府県</h2>
            <select name="prefecture">
                <option value="tokyo">東京都</option>
                <option value="kanagawa">神奈川県</option>
                <option value="saitama">埼玉県</option>
                <option value="chiba">千葉県</option>
                <option value="etc">その他</option>
            </select>
            
            <h2>問い合わせ内容</h2>
            <textarea name="content"></textarea>
        </form>
    </body>
</html>
`,
},
cikagir:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="wrapper">
    wrapper-header
    <div id="box">
      box-header
      <div id="inner">
        inner-header
        <div id="inside">inside</div>
        inner-footer
      </div>
      box-footer
    </div>
    wrarpper-footer
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#box,
#inner,
#inside {
  margin: 20px;
}
`,
javascript:`
\$('#inside').css({
  'background-color': 'yellow',
});

\$('#inside')
  .parent()
  .css({
    'background-color': 'purple',
  });

\$('#inside')
  .parent()
  .parent()
  .css({
    'background-color': 'tomato',
  });

\$('#inside')
  .parent()
  .parent()
  .parent()
  .css({
    'background-color': 'skyblue',
  });
`,
},
cikobac:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ハンバーガーメニュー</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <!-- ロゴ -->
      <a href="#" class="logo">
        <img src="./image/logo.png" alt="">
      </a>
      <!-- ハンバーガーボタン -->
      <button type="button" class="hamburger-button">
        <i class="bi bi-list"></i>
      </button>
    </header>

    <!-- ハンバーガーメニュー -->
    <div class="hamburger-menu">

      <!-- ナビゲーション -->
      <nav class="hamburger-menu-nav">
        <ul class="hamburger-menu-nav-list">
          <li class="hamburger-menu-nav-list-item"><a href="#">メニュー</a></li>
          <li class="hamburger-menu-nav-list-item"><a href="#">メニュー</a></li>
          <li class="hamburger-menu-nav-list-item"><a href="#">メニュー</a></li>
          <li class="hamburger-menu-nav-list-item"><a href="#">メニュー</a></li>
        </ul>

        <!-- ボタン -->
        <ul class="hamburger-menu-link">
          <li class="hamburger-menu-link-item"><a href="#" class="hamburger-menu-link-button white">ボタン</a></li>
          <li class="hamburger-menu-link-item"><a href="#" class="hamburger-menu-link-button light-red">ボタン</a></li>
        </ul>
      </nav>
    </div>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* リスト */
li {
  list-style: none;
}

/* ヘッダー
------------------------------------------ */

.header {
  position: sticky;
  top: 0;
  z-index: 100;
  display: flex;
  align-items: center;
  width: 100%;
  height: 3.125rem;
  padding-left: 1.25rem;
  background-color: #EF476F;
}

/* ハンバーガーボタン */
.hamburger-button {
  position: fixed;
  right: 0;
  width: 3.125rem;
  height: 3.125rem;
  font-size: 1.75rem;
  color: #fff;
}


/* ハンバーガーメニュー
------------------------------------------ */

.hamburger-menu {
  background-color: #EF476F;
}

.hamburger-menu-nav {
  padding: 1.25rem;
}

/* ナビゲーション */
.hamburger-menu-nav-list {
  margin-bottom: 2rem;
}

.hamburger-menu-nav-list-item:not(:last-child) {
  margin-bottom: 1rem;
}

.hamburger-menu-nav-list-item a {
  color: #fff;
  font-weight: bold;
}

/* ボタン */
.hamburger-menu-link a {
  color: #eee;
}

.hamburger-menu-link-item:not(:last-child) {
  margin-bottom: 1rem;
}

.hamburger-menu-link-button {
  display: block;
  text-align: center;
  padding: 0.75rem;
  border-radius: 0.25rem;
}

.hamburger-menu-link-button.light-red {
  color: #fff;
  background-color: #e47292;
}

.hamburger-menu-link-button.white {
  color: #040000;
  background-color: #fff;
}

`,
},
cimerot:{html:`
<p class="gothic">これはゴシック体でのfont-family指定です。</p>
<p class="mincho">これは明朝体でのfont-family指定です。</p>
`,
css:`
.gothic {
    font-family: "Noto Sans JP", "游ゴシック", YuGothic, "メイリオ", Verdana, "Hiragino Kaku Gothic ProN", Meiryo, sans-serif;
}
.mincho {
    font-family: "游明朝体", "Yu Mincho", "ヒラギノ明朝 Pro W3", "Hiragino Mincho Pro", "メイリオ", Meiryo, serif;
}
`,
},
cipovah:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - アイコン付き横並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- About -->
    <section class="about">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-info"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-item-button">ボタン</a>
        </div>
        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-question-lg"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-item-button">ボタン</a>
        </div>
        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-check-lg"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-item-button">ボタン</a>
        </div>

      </div>
    </section>


  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* コンテナ */
.container {
  display: flex;
  column-gap: 2.5rem;
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* About
------------------------------------------ */

/* アイテム */
.about-item {
  padding: 1.5rem 1.75rem 2.5rem;
  text-align: center;
}

/* 円形 */
.about-item-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 5rem;
  height: 5rem;
  margin-right: auto;
  margin-bottom: 1.5rem;
  margin-left: auto;
  background-color: #84ceef;
  border-radius: 50%;
}

/* アイコン */
.about-item-circle-icon {
  font-size: 2.75rem;
  color: #fff;
}

/* タイトル */
.about-item-title {
  margin-bottom: .75rem;
}

/* テキスト */
.about-item-text {
  margin-bottom: 1.5rem;
  text-align: left;
}

/* ボタン */
.about-item-button {
  display: inline-block;
  width: 12.5rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  color: #fff;
  font-weight: 700;
  background-color: #26547c;
  border-radius: 1.5rem;
}

`,
},
ciwanuy:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="parent1">
            <div class="child1">
                子要素1
            </div>
        </div>
        <div class="parent2">
            <div class="child2">
                子要素2
            </div>
        </div>
    </body>
</html>
`,
css:`
body {
    margin: 0;   /* ブラウザのデフォルト値の打ち消し */
}

.parent1 {
    width: 150px;
    height: 150px;
    background-color: pink;
    position: static;  /* デフォルト値のため省略可 */
}
.parent2 {
    width: 150px;
    height: 150px;
    background-color: skyblue;
    position: static;  /* デフォルト値のため省略可 */
}

.child1 {
    width: 70px;
    height: 70px;
    background-color: palegreen;
}
.child2 {
    width: 70px;
    height: 70px;
    background-color: orange;
}
`,
},
cofubul:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a class="mylink" href="https://www.google.co.jp/" target="_blank">ページ2</a>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.mylink').on('click', function(e) {
  // hrefのリンク先に飛ばないようにする
  e.preventDefault();

  alert('どろん！');
});
`,
},
cozuzux:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>

  <div class="container">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
  </div>
  
</body>
</html>
`,
css:`
.container {
  display: flex;
  justify-content: center;
  align-items: center;
  column-gap: 32px;
  padding: 20px;
  background: #CCCCCC;
}

.item {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100px;
  height: 100px;
  background-color: #FFE966;
}

`,
},
cugazoj:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <nav>
            <ul>
                <li><a href="#">TOP</a></li>
                <li><a href="#">ABOUT</a></li>
                <li><a href="#">MAP</a></li>
                <li><a href="#">BLOG</a></li>
                <li><a href="#">CONTACT</a></li>
            </ul>
        </nav>
    </body>
</html>
`,
css:`
nav ul li {
    display: inline-block;
}
`,
},
culixiz:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div class="alert mb-2">
        <div class="w-full">
            3件の新着情報があります
        </div>
    </div>
    <div class="alert alert-info mb-2">
        <div class="w-full">
            最新版のソフトウェアが公開されました
        </div>
    </div>
    <div class="alert alert-success mb-2">
        <div class="w-full">
            登録が完了しました！
        </div>
    </div>
    <div class="alert alert-warning mb-2">
        <div class="w-full">
            安全のためパスワードを変更してください
        </div>
    </div>
    <div class="alert alert-error mb-2">
        <div class="w-full">
            ユーザ名かパスワードが間違っています
        </div>
    </div>
</body>

</html>
`,
},
cuvaqeh:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <ul class="tabs-menu">
    <li><a href="#tabs-1">タブ1</a></li>
    <li><a href="#tabs-2">タブ2</a></li>
    <li><a href="#tabs-3">タブ3</a></li>
  </ul>
  <section class="tabs-content">
    <section id="tabs-1">
      <p>タブ1の内容が入ります。</p>
    </section>
    <section id="tabs-2">
      <p>タブ2の内容が入ります。</p>
    </section>
    <section id="tabs-3">
      <p>タブ3の内容が入ります。</p>
    </section>
  </section>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* ulのデフォルトスタイルを消去 */
.tabs-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* タブの基本スタイル */
.tabs-menu li {
  float: left;
  margin-right: 8px;
  margin-bottom: -1px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  border-radius: 4px 4px 0 0;

  /* 各プロパティをふわっと変える演出 */
  transition: all 0.15s;
}
.tabs-menu a {
  display: block;
  padding: 10px 20px;
  color: #557f95;
  text-decoration: none;
}

/* 非選択のタブにマウスを乗せたら色を変える */
.tabs-menu li:not(.active):hover {
  border-color: #f0f0f0 #f0f0f0 #999;
  background-color: #f0f0f0;
}

/* 選択中のタブ */
.tabs-menu .active {
  border-color: #999 #999 transparent #999;
  background-color: #fff;
}
.tabs-menu .active a {
  color: #3f4548;
}

/* タブコンテンツ表示エリア */
.tabs-content {
  clear: both;
  border: 1px solid #999;
  border-radius: 0 4px 4px 4px;
  padding: 10px;
}

/* 各タブのコンテンツはデフォルトで非表示 */
.tabs-content section {
  display: none;
}
`,
javascript:`
/**
 * selectorに該当するタブを表示する
 */
const showTab = (selector) => {
  // 引数selectorの中身をコンソールで確認する
  console.log(selector);

  /* 1. タブの選択状態のリセット */

  // いったん、すべての.tabs-menu > liからactiveクラスを削除する
  \$('.tabs-menu > li').removeClass('active');

  // いったん、すべての.tabs-content > sectionを非表示にする
  \$('.tabs-content > section').hide();

  /* 2. 選択されたタブの表示 */

  // a要素のhref属性がselectorと一致するものの親要素にだけactiveクラスを付ける
  \$(\`.tabs-menu a[href="\${selector}"]\`)
    .parent()
    .addClass('active');
  
  // .tabs-content > sectionのうち、selectorに該当するものだけを表示する
  \$(selector).show();
};

// タブがクリックされたらコンテンツを表示
\$('.tabs-menu a').on('click', (e) => {
  // hrefへのページ遷移を止める
  e.preventDefault();

  // hrefの値を受け取ってshowTab()関数に渡す。e.targetはクリックされたタブ（.tabs-menu a）を表す
  const selector = \$(e.target).attr('href');
  showTab(selector);
});

// 初期状態として1番目のタブを表示
showTab('#tabs-1');
`,
},
cuviyup:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <input
      v-bind:value="name"
      v-on:input="name = $event.target.value"
    >
    <p>{{ name }}</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    name: '太郎',
  },
});
`,
},
dafudip:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="ib1">div1</div>
        <div class="ib2">div2</div>
        <div class="ib3">div3</div>
        <div class="ib4">div4</div>
    </body>
</html>
`,
css:`
.ib1 {
    background-color: pink;
    display: inline-block;
    width: 60px;
    text-align: center;
}

.ib2 {
    background-color: palegreen;
    display: inline-block;
    width: 60px;
    text-align: center;
}

.ib3 {
    background-color: orange;
    display: none;
    width: 60px;
    text-align: center;
}

.ib4 {
    background-color: skyblue;
    display: inline-block;
    width: 60px;
    text-align: center;
}
`,
},
dajujut:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div><span class="badge">未確認</span></div>
    <div><span class="badge badge-primary">最優先</span></div>
    <div><span class="badge badge-secondary">重要</span></div>
    <div><span class="badge badge-info">新着</span></div>
    <div><span class="badge badge-success">100%</span></div>
    <div><span class="badge badge-warning">警告</span></div>
    <div><span class="badge badge-error">危険</span></div>
    <div><span class="badge badge-outline">お知らせ</span></div>
    <div><span class="badge badge-ghost">保留</span></div>
</body>

</html>
`,
},
dawucis:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper" class="clearfix">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
.clearfix::after {
    content: 'ここに .clearfix::after が入っている';
    display: block;
    clear: both;
}
`,
},
depeden:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>WaypointsとAnimate.cssのテスト</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="boxes">
    <div class="box animate__animated">box0</div>
    <div class="box animate__animated">box1</div>
    <div class="box animate__animated">box2</div>
    <div class="box animate__animated">box3</div>
    <div class="box animate__animated">box4</div>
    <div class="box animate__animated">box5</div>
    <div class="box animate__animated">box6</div>
    <div class="box animate__animated">box7</div>
    <div class="box animate__animated">box8</div>
    <div class="box animate__animated">box9</div>
  </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="https://code.jquery.com/jquery-migrate-3.3.2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/3.0.0/jquery.waypoints.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  background: repeating-linear-gradient(0deg,
    #ffffff,
    #ffffff 40px,
    #dedede 40px,
    #dedede 80px);
 }

 .boxes {
   margin: 80vh auto;
 }

 .box {
   border: 1px solid #000;
   width: 10em;
   padding: 10px;
   margin: 2em auto;
   text-align: center;
 }

.animate__animated {
   /* 最初から非表示 */
   opacity: 0;
}
`,
javascript:`
// animate__animatedクラスの付いた要素にwaypointを登録
\$('.animate__animated').waypoint({
  handler: function(direction) {
    // 要素が画面中央に来るとここが実行される
    if (direction === 'down') {
      /**
       * 下方向のスクロール
       * イベント発生元の要素にfadeInUpアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element).addClass('animate__fadeInUp');

      /**
       * waypointを削除することで、この要素に対しては
       * これ以降handlerが呼ばれなくなる
       */
      this.destroy();
    }
  },

  // 要素が画面中央に来たらhandlerを実行
  offset: '50%',
});
`,
},
deqaxen:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/triangle.png");
    background-repeat: no-repeat;
}
`,
},
detadoq:{html:`
<table class="separate">
  <tr>
    <th>A</th>
    <th>B</th>
    <th>C</th>
  </tr>
  <tr>
    <td>D</td>
    <td>E</td>
    <td>F</td>
  </tr>
  <tr>
    <td>G</td>
    <td>H</td>
    <td>I</td>
  </tr>
</table>

<table class="collapse">
  <tr>
    <th>A</th>
    <th>B</th>
    <th>C</th>
   </tr>
  <tr>
    <td>D</td>
    <td>E</td>
    <td>F</td>
  </tr>
  <tr>
    <td>G</td>
    <td>H</td>
    <td>I</td>
  </tr>
</table>

`,
css:`
table{
  border: 2px solid #ccc;
  width: 100%;
  margin-bottom: 20px;
}
table th,
table td{
  border: 2px solid #ccc;
  padding: 8px;
}
.separate{
  border-collapse: separate;
}
.collapse{
  border-collapse: collapse;
}

`,
},
dewivak:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <a href="https://www.yahoo.co.jp">Yahoo! JAPAN</a><br>
        <a href="https://www.google.co.jp">Google</a><br>
        <a href="https://www.bing.com">Bing</a><br>
        <a href="https://techacademy.jp">TechAcademy</a><br>
    </body>
</html>
`,
css:`
a[href="https://techacademy.jp"] {
  color: green;
}
`,
},
dodiwod:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference initial-count="0"></button-preference>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  props: ['initialCount'],
  template: \`
    <button>
      {{ initialCount }} いいね！
    </button>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'button-preference': ButtonPreference,
  },
})
`,
},
dubomav:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference>すごいね！</button-preference>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  data() {
    return { count: 0 }
  },
  methods: {
    countUp() {
      this.count += 1
    },
  },
  template: \`
    <button v-on:click="countUp">
      {{ count }} いいね！
    </button>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'button-preference': ButtonPreference,
  },
})
`,
},
dupetan:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference v-bind:initial-count="0"></button-preference>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const buttonPreference = {
  props: {
    initialCount: {
      type: Number,
      required: true,
    },
  },
  template: \`
    <button>
      {{ initialCount }} いいね！
    </button>
  \`,
};

new Vue({
  el: '#example',
  components: {
    'button-preference': buttonPreference,
  },
});
`,
},
durokew:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper" class="clearfix">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    margin-top: 50px;
    height: 50px;
    background-color: #ddddff;
}
.clearfix::after {
    content: '';
    display: block;
    clear: both;
}
`,
},
duvuvax:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
          <p class="long">すごく横に長い要素</p>
        </div>
    </body>
</html>
`,
css:`
.long {
    width: 200%;
    background: skyblue;
}

.box {
    overflow: hidden;
}
`,
},
fafaza:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ヘッダー - ハンバーガーボタン付き</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <a href="#"><img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/logo-white.png" alt="Kiramekicafe"></a>
      <i class="hamburger-button bi bi-list"></i>
    </header>

  </body>
</html>
`,
css:`
/* ヘッダー
------------------------------------------ */

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 3.75rem;
  padding-right: 1rem;
  padding-left: 1.25rem;
  color: #fff;
  background-color: #040000;
}

/* ハンバーガーボタン */
.hamburger-button {
  font-size: 2rem;
}
`,
},
falovan:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  width: 200px;
  height: 200px;
  background-color: #ddd;
}
`,
javascript:`
var onMouseenter = function(e) {
  // マウスが乗った時の処理
  \$(e.target).css({
    'background-color': '#ff9999',
  });
};
var onMouseleave = function(e) {
  // マウスが外れた時の処理
  \$(e.target).css({
    'background-color': '#dddddd',
  });
};

\$('.box')
  .on('mouseenter', onMouseenter)
  .on('mouseleave', onMouseleave);
`,
},
fanosox:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>重要な文章</p>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('p').css('color', 'red');
`,
},
fazihus:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-in">スライドダウン</button>
  <button type="button" class="my-button-out">スライドアップ</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  display: none;
  width: 200px;
  height: 200px;
  background-color: #666;
}
`,
javascript:`
var box = \$('.box');

\$('.my-button-in').on('click', function() {
  box.slideDown();
});

\$('.my-button-out').on('click', function() {
  box.slideUp();
});
`,
},
fefiyu:{html:`
<p>
  このレッスンではWebアプリケーションを作成する上で必要な知識のうち、
  <br>ブラウザに表示される内容を作成するための言語であるHTMLとCSSを学びます。
</p>

<p>
  Webブラウザとは、Webサイトを閲覧するためのアプリケーションです。
  
  
  通常は単にブラウザと呼ばれています。
</p>
`,
},
fegacar:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
document.getElementById('box').textContent = 'こんにちは！';
`,
},
fenesir:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スライダー（カルーセル）</title>
  
  <!-- SlickのCSS -->
  <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>
  <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css"/>
  <link rel="stylesheet" href="style.css">
  
</head>
<body>
  
  <!-- カルーセル -->
  <div class="carousel">
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_1.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_2.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_3.png" alt=""></div>
  </div>  

  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- SlickのJS -->
  <script src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
  

</body>
</html>
`,
css:`
img {
  max-width: 100%;
  height: auto;
}
`,
javascript:`
\$('.carousel').slick({
  autoplay: true, // 自動再生
  autoplaySpeed: 5000, // 自動再生の速さ、単位はミリ秒
  arrows: false, // 左右のナビゲーションを無効にする
  fade: true,
  dots: true,
});
`,
},
fiwazoz:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <a id="my-link" href="https://techacademy.jp/">
      TechAcademy [テックアカデミー] | オンラインのプログラミングスクール
    </a>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const link = document.getElementById('my-link');

link.addEventListener('click', (e) => {
  e.preventDefault();
});
`,
},
fiyogeb:{html:`
<p class="line-height-onepointfive">
  行間1.5のテキスト<br>行間1.5のテキスト<br>行間1.5のテキスト
</p>
<p class="line-height-onepointsevenfive">
  行間1.75のテキスト<br>行間1.75のテキスト<br>行間1.75のテキスト
</p>
<p class="line-height-two">
  行間2のテキスト<br>行間2のテキスト<br>行間2のテキスト
</p>

`,
css:`
.line-height-onepointfive {
  line-height: 1.5;
}

.line-height-onepointsevenfive {
  line-height: 1.75;
}

.line-height-two {
  line-height: 2;
}
`,
},
fizapev:{html:`
<dl>
  <dt>HTML</dt>
  <dd>Webページにおける文書（情報のまとめ役）を担当します。</dd>

  <dt>CSS</dt>
  <dd>Webページにおけるデザイン（見た目を整える役）を担当します。</dd>

  <dt>JavaScript</dt>
  <dd>HTMLやCSSへ動的な操作をするために使います。</dd>
</dl>

`,
},
foboben:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <title>HTML/CSS</title>
</head>

<body>
  <div class="box1">
    div要素1
  </div>
  <div class="box2">
    div要素2
  </div>
</body>

</html>
`,
css:`
body {
  margin: 0;
  background-color: skyblue;
}

.box1 {
  width: min(80vw, 150px);
  height: 150px;
  background-color: pink;
}

.box2 {
  width: max(80vw, 150px);
  height: 150px;
  background-color: palegreen;
}
`,
},
fohadab:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
          <p class="long">すごく横に長い要素</p>
        </div>
    </body>
</html>
`,
css:`
.long {
    width: 200%;
    background: skyblue;
}
`,
},
fohawiy:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p class="w-bold">boldの文章</p>
        <p class="w-normal">normalの文章</p>

        <p class="w-100">100の文章</p>
        <p class="w-200">200の文章</p>
        <p class="w-300">300の文章</p>
        <p class="w-400">400の文章</p>
        <p class="w-500">500の文章</p>
        <p class="w-600">600の文章</p>
        <p class="w-700">700の文章</p>
        <p class="w-800">800の文章</p>
        <p class="w-900">900の文章</p>
    </body>
</html>
`,
css:`
.w-bold {
    font-weight: bold;
}
.w-normal {
    font-weight: normal;
}

.w-100 {
    font-weight: 100;
}
.w-200 {
    font-weight: 200;
}
.w-300 {
    font-weight: 300;
}
.w-400 {
    font-weight: 400;
}
.w-500 {
    font-weight: 500;
}
.w-600 {
    font-weight: 600;
}
.w-700 {
    font-weight: 700;
}
.w-800 {
    font-weight: 800;
}
.w-900 {
    font-weight: 900;
}
`,
},
fohexis:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ページトップへ戻る</title>

  <!-- リセットCSS -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">

</head>

<body>
  <main>
    <p class="border"></p>
    <p class="border">1000px</p>
    <p class="border">2000px</p>
  </main>

  <!-- ページトップへ戻るボタン -->
  <a href="#" id="button-to-top" class="button-to-top"><i class="bi bi-chevron-double-up"></i></a>

  <!-- jQuery-->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</body>

</html>

`,
css:`
/* ページトップへ戻るボタン */
.button-to-top {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  bottom: 16rem; /* 位置を調整 */
  right: 1.25rem; /* 位置を調整 */
  width: 3rem;
  height: 3rem;
  color: #fff;
  background-color: #040000;
  border-radius: 0.25rem;
}

/* 区切り線 */
.border {
  height: 1000px;
  padding-top: 1rem;
  padding-left: .5rem;
  border-bottom: 1px solid #040000;
}


`,
javascript:`
var buttonToTop = \$('#button-to-top');
var position = 0;
var speed = 600;

// ページトップへ戻るボタンをクリックしたら
buttonToTop.on('click', function() {
  // console.log('click');
  console.log(position);

  // アニメーションをしながらページトップに移動
  \$("html, body").animate({
    scrollTop: position
  }, speed, "swing");
  return false;

});

`,
},
fojuvag:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <title>HTML/CSS</title>
</head>

<body>
  <div class="outer">
    <div class="inner">
      div要素
    </div>
  </div>
</body>

</html>
`,
css:`
body {
  margin: 0;
}

.outer {
  width: 150px;
  height: 150px;
  background-color: skyblue;
}

.inner {
  width: 80%;
  height: 80%;
  background-color: pink;
}
`,
},
fomapuk:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>横並びのテスト（Flexbox）</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="box">
    <div class="box-item bg1">1番目</div>
    <div class="box-item bg2">2番目</div>
    <div class="box-item bg3">3番目</div>
    <div class="box-item bg4">4番目</div>
    <div class="box-item bg5">5番目</div>
    <div class="box-item bg6">6番目</div>
  </div>

  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#box {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}

.box-item {
  min-width: 100px;
  margin: 5px;
}

.bg1 {
  background-color: #f00;
  height: 30px;
}

.bg2 {
  background-color: #0f0;
  height: 50px;
}

.bg3 {
  background-color: #00f;
  height: 150px;
}

.bg4 {
  background-color: #ff0;
  height: 100px;
}

.bg5 {
  background-color: #0ff;
  height: 50px;
}

.bg6 {
  background-color: #f0f;
  height: 100px;
}
`,
},
fomutuk:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <div class="container"><!-- flexコンテナ -->
    <div class="item">1</div><!-- flexアイテム -->
    <div class="item">2</div><!-- flexアイテム -->
    <div class="item">3</div><!-- flexアイテム -->
    <div class="item">4</div><!-- flexアイテム -->
  </div>

  <div class="container"><!-- flexコンテナ -->
    <div class="item">1</div><!-- flexアイテム -->
    <div class="item">2</div><!-- flexアイテム -->
    <div class="item">3</div><!-- flexアイテム -->
    <div class="item">4</div><!-- flexアイテム -->
  </div>
    

</body>
</html>
`,
css:`
.container {
    display: inline-flex;
}
.item {
  padding: 15px 20px;
  margin: 10px;
  background: #FFE966;
}
`,
},
foxerel:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="parent">
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#parent > div').prepend('子要素');
`,
},
foxipij:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="parent">
    <p class="child">もともとの要素</p>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.child {
  cursor: pointer;
}
`,
javascript:`
\$('#parent').on('click', '.child', () => {
  console.log('.childのイベントハンドラ');
});

\$('#parent').append('<p class="child">追加した要素</p>');
`,
},
fozakif:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>width、height</title>
</head>
<body>
  
  <div class="box1"></div>
  <div class="box2"></div>

</body>
</html>
`,
css:`
div {
  margin-bottom: 10px;
  background-color: gray;
}

.box1 {
  width: 100px;
  height: 100px;

}

.box2 {
  width: 50%;
  height: 100px;

}

`,
},
fuhifej:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body>
    <nav class="navbar bg-base-200">
        <div class="flex-1">
            <!-- ホームへ戻るリンク。ブランドロゴなどを置く。 -->
            <a class="btn btn-ghost normal-case text-xl">P&amp;K</a>

            <!-- メニュー項目 -->
            <ul class="menu menu-horizontal p-0 hidden sm:inline-flex">
                <li><a href="#" class="active">子犬</a></li>
                <li><a href="#">子猫</a></li>
                <li tabindex="0">
                    <a href="#">
                        会社情報
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                        </svg>
                    </a>
                    <ul class="p-2 bg-base-100 shadow">
                        <li><a href="#">ビジョン</a></li>
                        <li><a href="#">会社概要</a></li>
                        <li><a href="#">地図</a></li>
                        <li><a href="#">沿革</a></li>
                    </ul>
                </li>
                <li><a href="#">お問い合わせ</a></li>
            </ul>
        </div>
        <div class="flex-none">
            <div class="dropdown dropdown-end">
                <button class="btn btn-ghost sm:hidden">
                    <span>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                        </svg>
                    </span>
                </button>
                <ul tabindex="0" class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52">
                    <li><a href="#">子犬</a></li>
                    <li><a href="#">子猫</a></li>
                    <li class="menu-title"><span>会社概要</span></li>
                    <ul class="p-2">
                        <li><a href="#">ビジョン</a></li>
                        <li><a href="#">会社概要</a></li>
                        <li><a href="#">地図</a></li>
                        <li><a href="#">沿革</a></li>
                    </ul>
                    <li><a href="#">お問い合わせ</a></li>
                </ul>
            </div>
        </div>
    </nav>
</body>

</html>
`,
},
fujoxix:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <form class="my-form" action="" method="post">
    同じテキストを入力してください。
    <p>
      <input type="text" name="text1" class="text1">
    </p>
    <p>
      <input type="text" name="text2" class="text2">
    </p>
    <p>
      <input type="submit" value="送信">
    </p>
    <p class="error"></p>
  </form>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.error {
  color: #f00;
}
`,
javascript:`
\$('.my-form').on('submit', (e) => {
  // フォームが送信された時に実行される
  const text1 = \$('.text1').val();
  const text2 = \$('.text2').val();

  if (text1 !== text2) {
    // ページ遷移を止める
    e.preventDefault();

    \$('.error').html('テキストが一致しません');
  }
});
`,
},
furoyem:{html:`
<ul>
  <li>順序なしリスト1</li>
  <li>順序なしリスト2</li>
  <li>順序なしリスト3</li>
  <li>順序なしリスト4</li>
</ul>

`,
},
fuvupu:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Media Query Test</title>
    </head>
    <body>
        ブラウザの画面幅に応じて背景色が変わります。
    </body>
</html>
`,
css:`
/* デフォルトのスタイル */
body {
    background-color: #666;
}

@media (min-width: 500px) {
  /* ウインドウ幅500px以上の時に適用されるスタイル */
  body {
    background-color: #f00;
  }
}

@media (min-width: 750px) {
  /* ウインドウ幅750px以上の時に適用されるスタイル */
  body {
    background-color: #0f0;
  }
}

@media (min-width: 1000px) {
  /* ウインドウ幅1000px以上の時に適用されるスタイル */
  body {
    background-color: #00f;
  }
}
`,
},
gadilim:{html:`
<h1>自己紹介</h1>
<h2>氏名</h2>
<font color="red">煌木　太郎</font>
<h2>職業</h2>
Webデザイナー
<h2>スキル</h2>
<ul>
  <li>Web</li>
  <li>イラスト</li>
  <li>英語</li>
</ul>
`,
},
gafuyil:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
document.getElementById('box').textContent = 1 + 2;
`,
},
gasivam:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <aside class="left">
                サイドバー（左）
            </aside>
            <div id="main">
                メイン
            </div>
            <aside class="right">
                サイドバー（右）
            </aside>
        </div>
        <footer>
          フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
    display: flex;
    justify-content: space-between;
}
#main {
    width: 34%;
    background-color: #ddffdd;
}
aside {
    width: 33%;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
gedociz:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>アコーディオン</title>

  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  </head>
<body>
  
  <div class="accordion">
    <section>
      <h2 class="accordion-title">タイトル1</h2>
      <!-- コンテンツを最初から表示する場合はaccordion-content-activeクラスを付ける -->
      <div class="accordion-content accordion-content-active">コンテンツ1</div>
    </section>

    <section>
      <h2 class="accordion-title">タイトル2</h2>
      <div class="accordion-content">コンテンツ2</div>
    </section>

    <section>
      <h2 class="accordion-title">タイトル3</h2>
      <div class="accordion-content">コンテンツ3</div>
    </section>
  </div>

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  

</body>
</html>
`,
css:`
/* アコーディオンのタイトル部分 */
.accordion-title {
  padding: 6px;
  margin: 0;
  font-size: 1rem;
  color: #fff;
  background-color: #040000;
  border-bottom: 1px solid #fff;
  cursor: pointer;
}

/* アコーディオンのコンテンツ部分 */
.accordion-content {
  display: none; /* 初期状態は非表示 */
  padding: 12px 6px;
  background-color: #fff;
  border-bottom: 1px solid #040000;
}

/* 初期状態を表示するとき用のクラス */
.accordion-content-active {
  display: block;
}
`,
javascript:`
// アコーディオンのタイトルがクリックされたら
\$('.accordion-title').on('click', function(e) {

  // .accordion-contentを選択
  var content = \$(this).next();

  // .accordion-contentを表示・非表示
  content.slideToggle();
  
});
`,
},
gefuyof:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - アイコン付き縦並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- About -->
    <section class="about">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-info"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-button">ボタン</a>
        </div>
        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-question-lg"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-button">ボタン</a>
        </div>
        <!-- アイテム -->
        <div class="about-item">
          <div class="about-item-circle"><i class="about-item-circle-icon bi bi-check-lg"></i></div>
          <h2 class="about-item-title">タイトルが入ります</h2>
          <p class="about-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          <a href="#" class="about-button">ボタン</a>
        </div>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* コンテナ */
.container {
  display: flex;
  row-gap: 2.5rem;
  flex-direction: column;
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* About
------------------------------------------ */

/* アイテム */
.about-item {
  padding: 1.5rem 1.75rem 2.5rem;
  text-align: center;
}

/* 円形 */
.about-item-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 5rem;
  height: 5rem;
  margin-right: auto;
  margin-bottom: 1.5rem;
  margin-left: auto;
  background-color: #84ceef;
  border-radius: 50%;
}

/* アイコン */
.about-item-circle-icon {
  font-size: 2.75rem;
  color: #fff;
}

/* タイトル */
.about-item-title {
  margin-bottom: .75rem;
}

/* テキスト */
.about-item-text {
  margin-bottom: 1.5rem;
}

/* ボタン */
.about-button {
  display: inline-block;
  width: 12.5rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  color: #fff;
  font-weight: 700;
  background-color: #26547c;
  border-radius: 1.5rem;
}

`,
},
geheroj:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <p>横並び※初期値</p>
  <div class="container-one">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
  
  <p>逆向きの横並び</p>
  <div class="container-two">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
  
  <p>縦並び</p>
  <div class="container-three">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
  
  <p>逆向きの縦並び</p>
  <div class="container-four">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>

</body>
</html>
`,
css:`
.item {
  width: 10%;
  height: 50px;
  padding: 10px;
  margin: 10px;
  background: #FFE966;
  box-sizing: border-box;
}

.container-one {
  display: flex;
  flex-direction: row;
}

.container-two {
  display: flex;
  flex-direction: row-reverse;
}

.container-three {
  display: flex;
  flex-direction: column;
}

.container-four {
  display: flex;
  flex-direction: column-reverse;
}
`,
},
gejeyuf:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>カバー - 左寄せ配置</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- カバー -->
    <section class="cover">
      <div class="cover-container">
        <h1 class="cover-catch">キャッチコピー</h1>
        <a href="#" class="cover-button">ボタン</a>
      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}


/* カバー
------------------------------------------ */

.cover {
  height: 31.25rem;
  background-image: url("https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/cover.jpg");
  background-position: center;
  background-size: cover;
}

/* コンテナ */
.cover-container {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-direction: column;
  max-width: 70rem;
  height: 100%;
  padding: 0 1.25rem;
  margin: auto;
}

/* キャッチコピー */
.cover-catch {
  margin-bottom: 1.5rem;
  font-size: 1.5rem;
}

/* ボタン */
.cover-button {
  padding: .5rem 3.75rem;
  font-weight: 700;
  color: #fff;
  background-color: #26547c;
}

`,
},
gesixeb:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>デベロッパーツール操作用デモページ</title>
</head>
<body>
  
  
  <header>ヘッダー</header>

  <main>
    <div class="container">
      <div class="box1">メインコンテンツ</div>
      <div class="box2">メインコンテンツ</div>
      <div class="box3">メインコンテンツ</div>
    </div>
  </main>

  <footer>フッター</footer>

</body>
</html>
`,
css:`
body {
    color: #fff;
    font-weight: bold;
}

header {
    padding: 30px;
    background-color: #a8a698;
}

.container {
    display: flex;
}

.box1 {
    width: 33%;
    padding: 30px;
    background-color:#4b20da;
}

.box2 {
    width: 33%;
    padding: 30px;
    background-color:#15c3d3;
}

.box3 {
    width: 33%;
    padding: 30px;
    background-color:#d94665;
}

footer {
    padding: 30px;
    background-color: #071e3d;
}
`,
},
ginuhey:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p class="text-left">左寄せの文章</p>
        <p class="text-center">中央寄せの文章</p>
        <p class="text-right">右寄せの文章</p>
    </body>
</html>
`,
css:`
.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}
`,
},
godasox:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <!-- フォームの基本 -->
    <form>
        <div class="form-control w-full my-4">
            <label for="test1" class="label">
                <span class="label-text">お名前</span>
            </label>
            <input type="text" name="test1" placeholder="お名前を入力してください" class="input input-bordered w-full">
        </div>
    </form>

    <hr>

    <!-- ラベルを横に並べる -->
    <form>
        <div class="form-control w-full my-4">
            <label for="test2" class="label">
                <span class="label-text w-1/6">姓</span>
                <input type="text" name="test2" placeholder="姓を入力してください" class="input input-bordered w-5/6">
            </label>
        </div>

        <div class="form-control w-full my-4">
            <label for="test3" class="label">
                <span class="label-text w-1/6">名</span>
                <input type="text" name="test3" placeholder="名を入力してください" class="input input-bordered w-5/6">
            </label>
        </div>

        <div class="form-control w-full my-4">
            <div>
                <button class="btn btn-primary">登録</button>
            </div>
        </div>
    </form>
    <hr>

    <!-- アクセサリをつける -->
    <form>
        <div class="form-control w-full my-4">
            <label for="test4" class="label">
                <span class="label-text">郵便番号</span>
            </label>
            <label class="input-group">
                <span>〒</span>
                <input type="text" name="test4" placeholder="000-0000" class="input input-bordered w-full">
            </label>
        </div>
    </form>
</body>

</html>
`,
},
goloniw:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <a href="https://techacademy.jp">techacademy</a><br>
        <a href="https://techacademy.jp/blog">blog</a><br>
        <a href="https://techacademy.jp/magazine">magazine</a><br>
        <a href="https://techacademy.jp/foo">存在しないページ</a><br>
    </body>
</html>
`,
css:`
a:link {
    color: #0000ff;
}
a:hover {
    color: #ff0000;
}
a:visited {
    color: #999999;
}
`,
},
gosodix:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ハンバーガーメニュー フェード</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <a href="#">ロゴ</a>

      <!-- ハンバーガーボタン -->
      <button type="button" class="hamburger-button">
        <i class="bi bi-list"></i>
      </button>

      <!-- ハンバーガーメニュー -->
      <nav class="hamburger-menu">
        <ul class="hamburger-menu-list">
          <li><a href="#">メニュー</a></li>
          <li><a href="#">メニュー</a></li>
          <li><a href="#">メニュー</a></li>
          <li><a href="#">メニュー</a></li>
        </ul>
      </nav>
    </header>

    <main class="main"></main>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  </body>
</html>
`,
css:`
/**
* ハンバーガーメニュー用のCSS
*/

/* ハンバーガーボタン */
.hamburger-button {
  position: fixed;
  right: 0;
  z-index: 999;
  width: 3.125rem;
  height: 3.125rem;
  font-size: 1.75rem;
  color: #fff;
}

/* ハンバーガーメニュー */
.hamburger-menu {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(4, 0, 0, 0.9);
  transition: all .6s;
  opacity: 0;
  visibility: hidden;
}

/* スライドイン後の位置の指定 */
.hamburger-menu-active {
  visibility: visible;
  opacity: 1;
}

.hamburger-menu-list {
  padding: 5rem 1.25rem;
  list-style: none;
}


/**
* ヘッダー用のCSS
*/

.header {
  position: sticky;
  top: 0;
  z-index: 100;
  display: flex;
  align-items: center;
  width: 100%;
  height: 3.125rem;
  padding-left: 1.25rem;
  background-color: #040000;
}

/**
* main用のCSS
*/

.main {
  height: 2000px;
  /* ヘッダー上部固定確認用に高さを指定しています */
}


/**
* aタグ用のCSS
*/

a {
  color: #fff;
  text-decoration: none;
}

`,
javascript:`
var hamburger = \$('.hamburger-menu');

// OPEN/CLOSEボタンをクリックしたら
\$('.hamburger-button').on('click', function () {
  // console.log('click');

  // .hamburger-menuの表示・非表示を繰り返す
  hamburger.toggleClass('hamburger-menu-active');

});

// 画面幅のサイズが変わったら
\$(window).on('resize', function () {
  // console.log('resize');

  // ハンバーガーメニューを閉じる
  hamburger.removeClass('hamburger-menu-active');
});

`,
},
gumoney:{html:`
<div class="solid box">&nbsp;</div>
<div class="dotted box">&nbsp;</div>
<div class="dashed box">&nbsp;</div>
`,
css:`
.box {
  width: 100px;
  height: 100px;
  float: left;
  margin-right: 10px
}
.solid {
  border: 1px solid #333;
}
.dotted {
  border: 1px dotted #333;
}
.dashed {
  border: 1px dashed #333;
}
`,
},
gunerif:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box"></div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').text('ABC').text('DEF').text('GHI');
`,
},
guqewir:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box"></div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
var box = \$('#box');
box.text('Hello jQuery!');
`,
},
gurite:{html:`
<h1>自己紹介</h1>
<h2>氏名</h2>
<font color="red">煌木　太郎</font>
<h2>職業</h2>
Webデザイナー
<h2>スキル</h2>
<ul>
  <li>Web</li>
  <li>イラスト</li>
  <li>英語</li>
</ul>
`,
},
guzoqip:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    お名前 <input type="text" id="name">
    <div>
      <button type="button" id="button-greeting">あいさつ</button>
      <button type="button" id="button-cheerful">元気にあいさつ</button>
    </div>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const buttonGreeting = document.getElementById('button-greeting');
const buttonCheerful = document.getElementById('button-cheerful');
const input = document.getElementById('name');
const box = document.getElementById('box');

buttonGreeting.addEventListener('click', () => {
  const name = input.value;
  const hour = new Date().getHours();
  let greeting;

  // 確認のため、コンソールに表示
  console.log(\`現在の時間：\${hour}時\`);

  if (hour >= 6 && hour < 12) {
    greeting = 'おはよう';
  } else if (hour >= 12 && hour < 18) {
    greeting = 'こんにちは';
  } else {
    greeting = 'こんばんは';
  }

  box.textContent = \`\${greeting}、\${name}さん\`;
});

buttonCheerful.addEventListener('click', () => {
  const name = input.value;
  const hour = new Date().getHours();
  let greeting;

  // 確認のため、コンソールに表示
  console.log(\`現在の時間：\${hour}時\`);

  if (hour >= 6 && hour < 12) {
    greeting = 'おはよう';
  } else if (hour >= 12 && hour < 18) {
    greeting = 'こんにちは';
  } else {
    greeting = 'こんばんは';
  }

  box.textContent = \`\${greeting}！、\${name}さん！！！\`;
});
`,
},
hanilac:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <div>
      <p>
        身長： <input v-model="height" type="text"> cm
      </p>
      <p>
        体重： <input v-model="weight" type="text"> kg
      </p>
    </div>
    <div>
      BMI: {{ weight / ((height / 100) * (height / 100)) || '' }}
    </div>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    height: '',
    weight: '',
  },
});
`,
},
hapejac:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    overflow: hidden;
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
hememaq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="parent">
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#parent div').prepend('子孫要素');
`,
},
hemovec:{html:`
自己紹介
氏名
煌木　太郎
職業
Webデザイナー
スキル
Web
イラスト
英語
`,
},
hiduqum:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    お名前 <input type="text" id="name">
    <button type="button" id="button-greeting">あいさつ</button>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('button-greeting');
const input = document.getElementById('name');
const box = document.getElementById('box');

button.addEventListener('click', () => {
  const name = input.value;
  box.textContent = \`こんにちは、\${name}さん\`;
});
`,
},
hijivan:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box"></div>
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').text('Hello jQuery!');
`,
},
hobibap:{html:`
<span class="vertical-align-baseline">
  ベースラインのテキスト
</span>
<img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-webpage/css-basic/circle.png" alt="">
<hr>
<span class="vertical-align-top">
  上端揃えのテキスト
</span>
<img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-webpage/css-basic/circle.png" alt="">
<hr>
<span class="vertical-align-middle">
  中央揃えのテキスト
</span>
<img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-webpage/css-basic/circle.png" alt="">    
<hr>
<span class="vertical-align-bottom">
  下端揃えのテキスト
</span>
<img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-webpage/css-basic/circle.png" alt="">

`,
css:`
span {
  line-height: 3;
  text-decoration: underline overline;
}

.vertical-align-baseline {
  vertical-align: baseline;
}

.vertical-align-top {
  vertical-align: top;  
}

.vertical-align-middle {
  vertical-align: middle;
}

.vertical-align-bottom {
  vertical-align: bottom;
}

`,
},
hohiniw:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>3カラムレイアウト（Flexbox）</title>
  </head>
  <body>

    <header>ヘッダー</header>

    <main>
      <nav>ナビゲーション</nav>
      <article>記事コンテンツ</article>
      <aside>サイドバー</aside>
    </main>

    <footer>footer</footer>

  </body>
</html>
`,
css:`
header {
    padding-bottom: 40px;
    background-color: #F4769A;
    border: 2px solid #000;
}

main {
    display: flex;
    padding: 20px;
    background-color: #EAEAEA;    
    border: 2px solid #000;    
}

nav {
    width: 20%;
    padding-bottom: 40px;
    background-color: #FFD166;
    border: 2px solid #000;    
}

article {
    width: 60%;
    margin-right: 10px;
    margin-left: 10px;
    background-color: #FFE966;    
    border: 2px solid #000;
}

aside {
    width: 20%;
    background-color: #6DF2C9;
    border: 2px solid #000;
}

footer {
    padding-bottom: 40px;
    background-color: #2F92DD;
    border: 2px solid #000;
}
`,
},
honoced:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>
            これは <div>ブロックレベル要素</div> です。
        </p>
        <p>
            これは <span>インラインレベル要素</span> です。
        </p>
    </body>
</html>
`,
css:`
div { background-color: pink; }
span { background-color: palegreen; }
`,
},
howufoz:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <form id="my-form">
      <input type="text" id="num1">
      <input type="text" id="num2">
      <button type="button" id="button-add">+</button>
    </form>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const buttonAdd = document.getElementById('button-add');
const box = document.getElementById('box');
const num1 = document.getElementById('num1');
const num2 = document.getElementById('num2');

buttonAdd.addEventListener('click', () => {
  const result = num1.value + num2.value;
  box.textContent = result;
});
`,
},
hubupeb:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スクロールに付随して下方向からフェードイン</title>

  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  <!-- Animate.css -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

</head>
<body>

  <main class="main">
    <section class="section">
      <p>ページを下方向にスクロールするとアニメーションが確認できます</p>
    </section>
    <section class="section">
      <div class="box animate__animated"></div>
    </section>
    <section class="section">
      <div class="box animate__animated"></div>
    </section>
    <section class="section">
      <div class="box animate__animated"></div>
    </section>
  </main>

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- waypoints -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.min.js" integrity="sha512-CEiA+78TpP9KAIPzqBvxUv8hy41jyI3f2uHi7DGp/Y/Ka973qgSdybNegWFciqh6GrN2UePx2KkflnQUbUhNIA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

</body>
</html>

`,
css:`
/* セクションのCSS */
.section {
  height: 100vh;
  border-top: 1px solid #040000;
}

/* ボックスのCSS */
.box {
  width: 25rem;
  height: 12.5rem;
  background-color: #040000;
}

/* ページ読み込み直後にフェードイン要素を非表示にする */
.animate__animated {
  opacity: 0;
}

`,
javascript:`
\$('.animate__animated').waypoint({
  handler: function(direction) {
    // 要素が画面中央に来るとここが実行される
    if (direction === 'down') {
      /**
       * 下方向のスクロール
       * イベント発生元の要素に
       * fadeOutUpを削除して
       * fadeInUpアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element)
        .removeClass('animate__fadeOutUp')
        .addClass('animate__fadeInUp');
    } else if (direction === 'up') {
      /**
       * 上方向のスクロール
       * イベント発生元の要素に
       * fadeInUpを削除して
       * fadeOutUpアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element)
        .removeClass('animate__fadeInUp')
        .addClass('animate__fadeOutUp');
    }
  },

  // 要素が画面中央に来たらhandlerを実行
  offset: '50%',
});

`,
},
hufubot:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <div class="clear"></div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
.clear {
    clear: both;
}
footer {
    margin-top: 50px;
    height: 50px;
    background-color: #ddddff;
}
`,
},
huhonul:{html:`
<p>テキストです（この要素にはcolor: pink;は指定されません）</p>

<h2>h2タイトルです</h2>
<p>テキストです</p>
<p>テキストです（この要素にはcolor: pink;は指定されません）</p>

`,
css:`
h2 + p {
  color: pink;
}

`,
},
huwozon:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-anim">アニメーション</button>
  <button type="button" class="my-button-re">元に戻す</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  position: relative;
  top: 0;
  left: 0;
  width: 60px;
  height: 60px;
  background-color: #f66;
}
`,
javascript:`
var box = \$('.box');
var duration = 1000;

\$('.my-button-anim').on('click', function() {
  box.animate({
      width: '200px',
      left: '200px',
    },
    duration
  );
});

\$('.my-button-re').on('click', function() {
  box.animate(
    {
      width: '60px',
      left: '0px',
    },
    duration
  );
});
`,
},
jaqatod:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">{{ greeting }}</div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    greeting: 'Hello Vue.js!',
  },
});
`,
},
jasorob:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box"></div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').text('Hello jQuery!');
`,
},
javonah:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="flex-start">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>

        <div class="flex-center">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>

        <div class="flex-end">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>

        <div class="flex-between">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>

        <div class="flex-around">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>

        <div class="flex-evenly">
            <div class="fb1">div1</div>
            <div class="fb2">div2</div>
            <div class="fb3">div3</div>
        </div>
    </body>
</html>
`,
css:`
.fb1 {
    background-color: pink;
    width: 60px;
    text-align: center;
}
.fb2 {
    background-color: palegreen;
    width: 60px;
    text-align: center;
}
.fb3 {
    background-color: skyblue;
    width: 60px;
    text-align: center;
}

.flex-start {
    margin-bottom: 10px;
    display: flex;
    justify-content: flex-start;
}
.flex-center {
    margin-bottom: 10px;
    display: flex;
    justify-content: center;
}
.flex-end {
    margin-bottom: 10px;
    display: flex;
    justify-content: flex-end;
}
.flex-between {
    margin-bottom: 10px;
    display: flex;
    justify-content: space-between;
}
.flex-around {
    margin-bottom: 10px;
    display: flex;
    justify-content: space-around;
}
.flex-evenly {
    margin-bottom: 10px;
    display: flex;
    justify-content: space-evenly;
}
`,
},
jepodas:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    clear: both;
    height: 50px;
    background-color: #ddddff;
}
`,
},
jevavuv:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a class="mylink" href="https://www.google.co.jp/" target="_blank">ページ2</a>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.mylink').on('click', (e) => {
  // hrefのリンク先に飛ばないようにする
  e.preventDefault();

  alert('どろん！');
});
`,
},
jeyidag:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>デベロッパーツールボックスモデル操作用デモページ</title>
  </head>
  <body>

    <div class="box1">青色のボックス</div>
    <div class="box2">ピンク色のボックス</div>


  </body>
</html>
`,
css:`
.box1 {
  width: 200px;
  margin-top: 40px;
  padding: 60px;  
  text-align: center;
  background-color:#84ceef;  
}

.box2 {
  width: 200px;
  padding: 60px;  
  margin-top: 40px;
  text-align: center;
  background-color:#e47292;
}
`,
},
jibamin:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <input v-model="name">
    <p>{{ name }}</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    name: '太郎',
  },
});
`,
},
jinefe:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <ol>
            <li>飲料水</li>
            <li>パン</li>
            <li>牛乳</li>
            <li>鶏肉</li>
        </ol>
    </body>
</html>
`,
},
jizowec:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <input type="text" v-bind:value="name">
    <p>{{ name }}</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    name: '太郎',
  },
});
`,
},
jocukow:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <a href="https://techacademy.jp/" target="_blank">TechAcademy [テックアカデミー] | オンラインブートキャンプ</a>
        <a href="https://techacademy.jp/magazine/"><img src="http://static.techacademy.jp/magazine/wp-content/themes/ta-magazine/images/logo-magazine.png" alt="techacademy magazine logo"></a>
    </body>
</html>
`,
},
jomesoj:{html:`
<div class="top">topで位置を指定した要素</div>
<div class="right">rightで位置を指定した要素</div>
<div class="bottom">bottomで位置を指定した要素</div>
<div class="left">leftで位置を指定した要素</div>

`,
css:`
div {
  position: absolute;
  width: 100px;
  height: 100px;
  color: #fff;
}

.top {
  top: 200px;
  background-color: #000;
}

.right {
  right: 100px;
  background-color: #333;
}

.bottom {
  bottom: 200px;
  background-color: #666;  
}

.left {
  left: 100px;
  background-color: #999;  
}
`,
},
jozenap:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 300px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
}
`,
},
jusuzom:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <h1>h1要素</h1>
        <p>p要素</p>
    </body>
</html>
`,
css:`
/* p要素の文字色(color)を赤(red)にする */
p {
    color: red;
}

/* h1要素のマージン(margin)を40pxにする */
h1 {
    margin: 40px;
}
`,
},
juwaxaq:{html:`
<div class="box1">
  <p>BOX1</p>
</div>
<div class="container">
    <p>BOX2</p>
</div>

`,
css:`
.box1 {
  width: 90%;
  border: solid 1px skyblue;
  margin: 10px;
}
.container {
  max-width: 1000px;
  margin: 10px;
  padding: 10px;
  border: solid 1px green;
}

`,
},
kadevun:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>デベロッパーツール警告確認用デモページ</title>
</head>
<body>
  
  <p class="text">テキスト</p>
    
</body>
</html>
`,
css:`
.text {
  color: #26547c /* ;が抜けているので警告が出ます */
  text-align: center;
}


`,
},
kahiwer:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <p>
      <button v-on:click="countUp()">{{ count }} 回</button>
    </p>
    <p>現在時刻（メソッド）： {{ getDate() }}</p>
    <p>現在時刻（算出プロパティ）： {{ date }}</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    count: 0,
  },
  computed: {
    date() {
      return new Date().toLocaleString();
    },
  },
  methods: {
    countUp() {
      this.count += 1;
    },
    getDate() {
      return new Date().toLocaleString();
    },
  },
});
`,
},
kawidob:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8">
  <title>クリックイベントを書いてみよう</title>
</head>
<body>

  <button id="button">ボタン</button>
  <p class="text">テキスト</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="main.js"></script>

</body>
</html>
`,
javascript:`
// #buttonをクリックしたら
\$('#button').on('click', function() {

  // 文字色を赤色に変更
  \$('.text').css('color', 'red');

  // クリックイベントが反応しているか確認する用のコード
  console.log('ボタンをクリックしました');

})
`,
},
kegujah:{html:`
<div>ボックス</div>
`,
css:`
div {
  max-width: 1080px;
  margin: auto;
  border: 2px solid #000;
}

`,
},
kifidit:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <ul id="example">
    <li
      v-for="(member, index) in members"
      v-bind:key="member"
    >
      {{ index }}：{{ member }}
    </li>
  </ul>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    members: ['桃太郎', 'イヌ', 'サル', 'キジ'],
  },
});
`,
},
kipedex:{html:`
<div class="wrapper">
    <div class="absolute">
      <p>position: absolute;<br>
       top: 30px;<br>
       left: 40px;
     </p>
    </div>
    <div class="fixed">
      <p>position: fixed;<br>
       top: 30px;<br>
       left: 220px;
     </p>
    </div>
</div>
`,
css:`
.wrapper {
  height: 1000px;
}
.absolute, .fixed {
  width: 150px;
  height: 150px;
}
.absolute p, .fixed p {
  padding: 10px;
  color: #FFF;
}
.absolute {
  position: absolute;
  top: 30px;
  left: 40px;
  background-color: #ba2636;
}
.fixed {
  position: fixed;
  top: 30px;
  left: 220px;
  background-color: #1e50a2;
}
`,
},
kipogof:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    お名前 <input type="text" id="name">
    <div>
      <button type="button" id="button-greeting">あいさつ</button>
      <button type="button" id="button-cheerful">元気にあいさつ</button>
    </div>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const buttonGreeting = document.getElementById('button-greeting');
const buttonCheerful = document.getElementById('button-cheerful');
const input = document.getElementById('name');
const box = document.getElementById('box');

const greet = () => {
  let greeting;
  const hour = new Date().getHours();

  if (hour >= 6 && hour < 12) {
    greeting = 'おはよう';
  } else if (hour >= 12 && hour < 18) {
    greeting = 'こんにちは';
  } else {
    greeting = 'こんばんは';
  }

  return greeting;
};

buttonGreeting.addEventListener('click', () => {
  const name = input.value;
  const greeting = greet();

  box.textContent = \`\${greeting}、\${name}さん\`;
});

buttonCheerful.addEventListener('click', () => {
  const name = input.value;
  const greeting = greet();

  box.textContent = \`\${greeting}！、\${name}さん！！！\`;
});
`,
},
kitewon:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <img src="https://demo.techacademy.jp/html-css/images/logo-techacademy.png" alt="ロゴ画像" />
    </body>
</html>
`,
},
kiwasaz:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>
  <p class="pm">おはよう</p>
  <p class="pm">おはよう</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.pm').text('こんにちは！');
`,
},
kiyorez:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const element = 'p';
\$(element).text('こんにちは！');
`,
},
kizexod:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>HTML/CSS基礎</title>
    <meta name="description" content="HTML/CSS基礎のページです">
  </head>
  <body>
    <header class="header">
      ここはヘッダーです
      <nav class="nav">
        <ul>
          <li>メニュー</li>
          <li>メニュー</li>
          <li>メニュー</li>
          <li>メニュー</li>
        </ul>
      </nav>
    </header>
    <main class="main">
      <h1>ページのタイトルです</h1>
      <h2>ボックスのタイトルです</h2>
      <p>ボックスの説明です</p>
      <h2>ボックスのタイトルです</h2>
      <p>ボックスの説明です</p>
      <h2>ボックスのタイトルです</h2>
      <p>ボックスの説明です</p>
    </main>
    <footer class="footer">ここはフッターです</footer>
  </body>
</html>
`,
},
kobekeh:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <buttons-preference></buttons-preference>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.component('buttons-preference', {
  template: \`
    <div>
      <button>いいね！</button>
      <button>そだねー</button>
    </div>
  \`,
});

new Vue({
  el: '#example',
});
`,
},
kogulaf:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
            div要素内
        </div>
    </body>
</html>
`,
css:`
.box {
    margin: 50px;
    border: 5px solid pink;
    padding: 50px;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}
`,
},
kubulip:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a href="pm.html">おはよう</a>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const url = 'pm.html';
\$(\`[href="\${url}"]\`).text('こんにちは！');
`,
},
kufoxat:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference v-bind:initial-count="0"></button-preference>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  props: ['initialCount'],
  data() {
    return { count: this.initialCount }
  },
  methods: {
    countUp() {
      this.count += 1
    },
  },
  template: \`
    <button v-on:click="countUp">
      {{ count }} いいね！
    </button>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'button-preference': ButtonPreference,
  },
})
`,
},
kugoxof:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>画像の上に文字を載せるテスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <!-- visual01.pngおよびvisual02.pngは幅800px,高さ300px -->
  <div class="visual">
    <div id="logo1"></div>
    <div id="text">Technology</div>
    <div id="logo2"></div>
  </div>

  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.visual {
  position: relative;
  width: 100vw;
}

#logo1 {
  background-image: url("https://demo.techacademy.jp/website-creation/gakko/images/visual01.png");
  width: 100vw;
  height: 37.5vw;  /* 800(px):300(px)=100(vw):[height(vw)] を計算 */
  background-size: cover;
}

#logo2 {
  background-image: url("https://demo.techacademy.jp/website-creation/gakko/images/visual02.png");
  width: 100vw;
  height: 37.5vw;  /* 800(px):300(px)=100(vw):[height(vw)] を計算 */
  background-size: cover;
}

#text {
  color: #fff;
  background-color: #f0f;
  position: absolute;
  bottom: 34vw;
  left: 35vw;
  font-size: 5vw;
}
`,
},
kujozox:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <button type="button" id="my-button">押して！</button>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('my-button');

// イベントリスナーが実行されるとき、イベントオブジェクトを渡される
button.addEventListener('click', (e) => {
  console.log('イベントの種類：', e.type);
});
`,
},
kuzafus:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ヘッダー - ロゴ左配置</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <a href="#"><img
                       src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/logo-white.png"
                       alt="Kiramekicafe">
      </a>
      <nav class="header-nav">
        <ul class="header-nav-list-group">
          <li>
            <a href="#">メニュー</a>
          </li>
          <li>
            <a href="#">メニュー</a>
          </li>
          <li>
            <a href="#">メニュー</a>
          </li>
        </ul>
      </nav>
      <ul class="header-button-group">
        <li>
          <a href="#" class="header-button">ボタン</a>
        </li>
        <li>
          <a href="#" class="header-button">ボタン</a>
        </li>
      </ul>
    </header>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* リスト */
li {
  list-style-type: none;
}


/* ヘッダー
------------------------------------------ */

.header {
  display: flex;
  align-items: center;
  height: 3.75rem;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  background-color: #84ceef;
}

.header a {
  color: #fff;
}

/* ナビゲーション、ボタン */
.header-nav {
  margin-right: auto;
  margin-left: 2rem;
}

.header-nav-list-group,
.header-button-group {
  display: flex;
}

.header-nav li:not(:last-child),
.header-button-group li:not(:last-child) {
  margin-right: 1.5rem;
}

.header-button {
  background-color: #2f92dd;
  padding: .5rem 1rem;
  border-radius: .25rem;
}

`,
},
legetac:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
}
#main {
    float: left;
    width: 60%;
    height: 130px;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    height: 130px;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
lewuwut:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
var element = 'p';
\$(element).text('こんにちは！');
`,
},
lifohus:{html:`
<h1>自己紹介</h1>
<h2>氏名</h2>
<font color="red">煌木　太郎</font>
<h2>職業</h2>
Webデザイナー
<h2>スキル</h2>
<ul>
  <li>Web</li>
  <li>イラスト</li>
  <li>英語</li>
</ul>
`,
css:`
ul {
  color: blue;
}
`,
},
lilafup:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="parent">
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#parent > div').prepend('子要素');
`,
},
lipini:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="parent">
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
    <div class="children">
      <div class="grand_children"></div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#parent div').prepend('子孫要素');
`,
},
litotux:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きリストピル型横並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Voice-->
    <section class="voice">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* 画像の円形 */
.img-circle {
  border-radius: 50%;;
}

/* コンテナ */
.container {
  display: flex;
  flex-wrap: wrap;
  column-gap: 2.5rem;
  row-gap: 1.25rem;
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Voice
------------------------------------------ */

/* アイテム */
.voice-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: calc((100% - 2.5rem) / 2);
  padding: .75rem 1.75rem .75rem 1rem;
  color: #fff;
  background-color: #54bbef;
  border-radius: 3.75rem;
}

.voice-item:hover {
  background-color: #26547c;
  transition: all 0.3s ease;
}

/* ボディ */
.voice-item-body {
  display: flex;
  align-items: center;
}

/* テキスト */
.voice-item-body-text {
  margin-left: 1.25rem;
}

/* タイトル */
.voice-item-title {
  margin-bottom: .5rem;
  font-size: 1.25rem;
}

/* 説明文 */
.voice-item-description {
  font-size: .875rem;
}

/* 矢印アイコン */
.voice-item-icon {
  font-size: 1.75rem;
}

`,
},
locokic:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <div>
      <p>身長： <input v-model="height" type="text"> cm</p>
      <p>体重： <input v-model="weight" type="text"> kg</p>
    </div>
    <div>
      BMI: {{ bmi }}
    </div>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    height: '',
    weight: '',
  },
  computed: {
    bmi() {
      if (this.height && this.weight) {
        // センチメートルをメートルに変換する
        const meterHeight = this.height / 100;

        // BMIを計算する
        const bmi = this.weight / (meterHeight * meterHeight);

        // 小数点以下の桁数を、２桁にして返す
        return bmi.toFixed(2);
      }

      return '';
    },
  },
});
`,
},
lokehep:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>デベロッパーツール擬似状態操作用デモページ</title>
</head>
<body>
    <a href="#" class="link">ボタン</a>

</body>
</html>
`,
css:`
.link {
  padding: 0.5rem 1.5rem;
  text-decoration: none;
  color: #fff;
  background-color: #84ceef;
}

.link:hover {
  background-color: #2f92dd;
}
`,
},
lorowit:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
    display: flex;
}
#main {
    width: 60%;
    background-color: #ddffdd;
}
aside {
    width: 30%;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
lukorat:{html:`
<ul>
    <li>飲料水</li>
    <li>パン</li>
    <li>牛乳</li>
    <li>鶏肉</li>
</ul>
`,
css:`
ul {
    color: blue;
    float: right;
}
`,
},
luleqew:{html:`
<h1>メディアクエリについて</h1>
<div class="container">
  <div class="box">
    <p>BOX 1</p>
  </div>
  <div class="box">
    <p>BOX 2</p>
    <p>767px以下で下に落ちる</p>
  </div>
</div>
`,
css:`
.container {
  display: flex;
  flex-direction: row;
}
.box {
  border: solid 1px skyblue;
  margin: 10px;
  flex: 1;
}
@media (max-width: 767px) {
  .container {
    flex-direction: column;
  }
}
`,
},
lurapic:{html:`
<!DOCTYPE html>
<html>

  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウトパターン - 順逆</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>

  <body>

    <!-- Feature-->
    <section class="feature">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg" alt="ドリンク" width="340" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item feature-item-reverse">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg" alt="ドリンク" width="340" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg" alt="ドリンク" width="340" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
          </div>
        </div>

      </div>
    </section>

  </body>

</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* 画像 */
img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Feature
------------------------------------------ */

/* アイテム */
.feature-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 2.5rem;
}

.feature-item:not(:last-child) {
  margin-bottom: 3.75rem;
}

/* 反転 */
.feature-item-reverse {
  flex-direction: row-reverse;
}

/* 画像 */
.feature-item-image {
  border-radius: 1.25rem;
}

/* タイトル */
.feature-item-title {
  margin-bottom: .5rem;
  font-size: 1.5rem;
}


`,
},
malolij:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>前後の要素を選択する</title>
</head>
  <p id="text1">テキスト1</p>
  <p>テキスト2</p>
  <p>テキスト3</p>
  <p id="text4">テキスト4</p>
<body>

  <script src="https://code.jquery.com/jquery-3.1.0.js"></script>

</body>
</html>


`,
javascript:`
// テキスト1の次の要素（テキスト2）の文字色を赤色にする
\$('#text1').next().css('color', 'red');

// テキスト4の前の要素（テキスト3）の文字色を青色にする
\$('#text4').prev().css('color', 'blue');



`,
},
mapamun:{html:`
<p>
  このレッスンではWebアプリケーションを作成する上で必要な知識のうち、ブラウザに表示される内容を作成するための言語であるHTMLとCSSを学びます。
</p>
<p>
  Webブラウザとは、Webサイトを閲覧するためのアプリケーションです。通常は単にブラウザと呼ばれています。
</p>

`,
},
matuxul:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <img src="https://demo.techacademy.jp/html-css/images/icon-techacademy.png" class="icon-image" alt="アイコン画像" />
    </body>
</html>
`,
css:`
.icon-image {
  border-radius: 50%;
}
`,
},
medilen:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>無効なプロパティの確認用デモページ</title>
</head>
<body>
  
  <div class="container">
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>
  </div>

</body>
</html>
`,
css:`
.container {
  display: block;
  align-items: center;
}

.item {
  width: 100px;
  height: 100px;
}

.item:nth-child(1) {
  background: #ffe966;
}

.item:nth-child(2) {
  background: #72e8a7;
}

.item:nth-child(3) {
  background: #84ceef;
}


`,
},
mehaqaj:{html:`
<p class="gothic">ゴシック体</p>
<p class="mincho">明朝体</p>

`,
css:`
.gothic {
  font-family: "Helvetica Neue", "Helvetica", "Hiragino Sans", "Hiragino Kaku Gothic ProN", "Arial", "Yu Gothic", "Meiryo", sans-serif;
}

.mincho {
  font-family: "Times New Roman", "YuMincho", "Hiragino Mincho ProN", "Yu Mincho", "MS PMincho", serif;  
}
`,
},
melifiy:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <ul class="tabs-menu">
      <li
        v-bind:class="{active: activeTab === 'tabs-1'}"
        v-on:click="activeTab = 'tabs-1'"
      >
        タブ1
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-2'}"
        v-on:click="activeTab = 'tabs-2'"
      >
        タブ2
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-3'}"
        v-on:click="activeTab = 'tabs-3'"
      >
        タブ3
      </li>
    </ul>
    <section class="tabs-content">
      <section v-if="activeTab === 'tabs-1'">
        <p>タブ1の内容が入ります。</p>
      </section>
      <section v-else-if="activeTab === 'tabs-2'">
        <p>タブ2の内容が入ります。</p>
      </section>
      <section v-else-if="activeTab === 'tabs-3'">
        <p>タブ3の内容が入ります。</p>
      </section>
    </section>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* ulのデフォルトスタイルを消去 */
.tabs-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* タブの基本スタイル */
.tabs-menu li {
  display: block;
  float: left;
  margin-right: 8px;
  margin-bottom: -1px;
  padding: 10px 20px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  border-radius: 4px 4px 0 0;
  color: #557f95;
  text-decoration: none;

  /* 各プロパティをふわっと変える演出 */
  transition: all 0.15s;
}

/* タブにマウスを乗せたらカーソルの形を変える */
.tabs-menu li:hover {
  cursor: pointer;
}

/* 非選択のタブにマウスを乗せたら色を変える */
.tabs-menu li:not(.active):hover {
  border-color: #f0f0f0 #f0f0f0 #999;
  background-color: #f0f0f0;
}

/* 選択中のタブ */
.tabs-menu .active {
  border-color: #999 #999 transparent #999;
  background-color: #fff;
}
.tabs-menu .active {
  color: #3f4548;
}

/* タブコンテンツ表示エリア */
.tabs-content {
  clear: both;
  border: 1px solid #999;
  border-radius: 0 4px 4px 4px;
  padding: 10px;
}
`,
javascript:`
new Vue({
  el: '#example',
  data: {
    activeTab: 'tabs-1',
  },
});
`,
},
melulod:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>JS Bin</title>
  </head>
  <body>

    <div class="container">
      <div class="item">1</div>
      <div class="item">2</div>
      <div class="item">3</div>
      <div class="item">4</div>
    </div>

  </body>
</html>
`,
css:`
.container{
  display: flex;
  column-gap: 20px;
  row-gap: 20px;
  flex-wrap: wrap;
  padding: 20px;
  background: #CCCCCC;
}

.item{
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc((100% - 20px) / 2);
  height: 100px;
  background-color: #FFE966;
}

`,
},
mevekeq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>100%と100vwのテスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <!-- visual01.pngは幅800px,高さ300px -->
  <h2>幅が100パーセントの場合</h2>
  <div class="percentage"></div>
  
  <h2>幅が100vwの場合</h2>
  <div class="viewport_width"></div>

  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  margin: 0;
}

.percentage {
  background-color: pink;
  width: 100%;
  height: 60vh;
}

.viewport_width {
  background-color: skyblue;
  width: 100vw;
  height: 60vh;
}
`,
},
mexijev:{html:`
<p class="letter-spacing-normal">字間ノーマル（デフォルト）のテキスト</p>
<p class="letter-spacing-5">字間5pxのテキスト</p>
<p class="letter-spacing-10">字間10pxのテキスト</p>
<p class="letter-spacing-15">字間15pxのテキスト</p>
<p class="letter-spacing-minus-1">字間-1pxのテキスト</p>

`,
css:`
.letter-spacing-normal {
  letter-spacing: normal;
}

.letter-spacing-5 {
  letter-spacing: 5px;
}

.letter-spacing-10 {
  letter-spacing: 10px;
}

.letter-spacing-15 {
  letter-spacing: 15px;
}

.letter-spacing-minus-1 {
  letter-spacing: -1px;
}

`,
},
meyacok:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <form>
            <label for="name">名前</label>
            <input type="text" id="name" name="name" placeholder="例：田中　太郎">
            <br>

            <label for="email">メールアドレス</label>
            <input type="email" id="email" name="email" placeholder="info@example.jp">
        </form>
    </body>
</html>
`,
},
meyatad:{html:`
<img src="https://techacademy.jp/_nuxt/img/logo-blue.5e6bcca.svg" alt="テックアカデミー" width="300">

`,
},
mifugud:{html:`
<ul>
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
</ul>

<ul class="list-none">
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
</ul>

<ul class="list-circle">
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
</ul>

<ul class="list-square">
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
  <li>リスト</li>
</ul>
`,
css:`
.list-none {
  list-style: none;
}

.list-circle {
  list-style: circle;
}

.list-square {
  list-style: square;
}
`,
},
mikixet:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="parent">
    <button type="button" class="my-button">ボタン</button>
  </div>
  <div class="parent">
    <button type="button" class="my-button">ボタン</button>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.parent {
  height: 100px;
}
`,
javascript:`
\$('.my-button').on('click', (e) => {
  // .my-buttonがクリックされた時にここが実行される
  \$(e.target)
    .parent()
    .css({ 'background-color': '#ff6666' });
});

`,
},
mimuluk:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <h2>wrap未指定</h2>
        <div class="wrapper1">
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
        </div>
        <h2>wrap指定</h2>
        <div class="wrapper2">
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
            <div class="box1">子要素</div>
            <div class="box2">子要素</div>
            <div class="box3">子要素</div>
        </div>
    </body>
</html>
`,
css:`
.wrapper1 {
    display: flex;
    width: 220px;
    background-color: yellow;
}
.wrapper2 {
    display: flex;
    width: 220px;
    background-color: yellow;
    flex-wrap: wrap;
}
.box1 {
    width: 50px;
    background-color: skyblue;
}
.box2 {
    width: 50px;
    background-color: palegreen;
}
.box3 {
    width: 50px;
    background-color: pink;
}
`,
},
mirovek:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>
  <p>おはよう</p>
  <p id="pm">おはよう</p>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#pm').text('こんにちは！');
`,
},
miwihej:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
}
#main {
    float: left;
    width: 60%;
    background-color: #ddffdd;
}
aside {
    float: right;
    width: 30%;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
miwiyus:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ステップ</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- コンテナ -->
    <div class="container">

      <!-- ステップ -->
      <ul class="step-list-group">
        <li class="step-list-group-item done">
          <p class="step-list-group-item-number">ステップ 1</p>
          <p class="step-list-group-item-text">入力画面</p>
        </li>
        <li class="step-list-group-item done">
          <p class="step-list-group-item-number">ステップ 2</p>
          <p class="step-list-group-item-text">確認画面</p>
        </li>
        <li class="step-list-group-item">
          <p class="step-list-group-item-number">ステップ 3</p>
          <p class="step-list-group-item-text">完了画面</p>
        </li>
      </ul>

    </div>

  </body>
</html>
`,
css:`
/* リスト */
li {
  list-style: none;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* ステップ */
.step-list-group {
  display: flex;
  column-gap: 2rem;
}

.step-list-group-item {
  width: calc(100% / 3);
  padding: 1rem 1rem 2rem;
  font-size: 0.875rem;
  border-top-width: 3px;
  border-top-style: solid;
  border-top-color: #ccc;
}

.step-list-group-item-number {
  color: #999;
}

.step-list-group-item-text {
  font-size: 1.25rem;
  font-weight: bold;
}

/* 済み */
.step-list-group-item.done {
  border-top-color: #2f92dd;
}

.step-list-group-item.done .step-list-group-item-number {
  color: #2f92dd;
}

`,
},
mogeqiq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <buttons-sns></buttons-sns>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.component('button-preference', {
  template: \`
    <button>いいね！</button>
  \`,
});

Vue.component('button-empathy', {
  template: \`
    <button>そだねー</button>
  \`,
});

Vue.component('buttons-sns', {
  template: \`
    <div>
      <button-preference></button-preference>
      <button-empathy></button-empathy>
    </div>
  \`,
});

new Vue({
  el: '#example',
});
`,
},
mopixeg:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <ul>
            <li>飲料水</li>
            <li>パン</li>
            <li>牛乳</li>
            <li>鶏肉</li>
        </ul>
    </body>
</html>
`,
},
mowogab:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>普通の文章</p>
        <p class="important">importantな文章</p>
    </body>
</html>
`,
css:`
p.important {
  color: red;
}
`,
},
mowozap:{html:`
<form>
  <label for="name">名前</label>
  <input type="text" id="name" name="name" placeholder="例：田中　太郎">
  <br>

  <label for="email">メールアドレス</label>
  <input type="email" id="email" name="email" placeholder="info@example.jp">
</form>

`,
},
moyisoz:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <button class="btn">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
        </svg>
        ダウンロード
    </button>
</body>

</html>
`,
},
mubamu:{html:`
<p>上下左右に外側の余白を一括指定</p>
<div class="margin-same-size"></div>
<hr>
<p>上下左右に外側の余白を指定</p>
<div class="margin-different-size"></div>
<hr>
<p>上下と左右に外側の余白を一括指定</p>
<div class="margin-different-size-updown-rightleft"></div>
<hr>
<p>上に外側の余白を指定</p>
<div class="margin-top"></div>
<hr>
<p>右に外側の余白を指定</p>
<div class="margin-right"></div>
<hr>
<p>下に外側の余白を指定</p>
<div class="margin-bottom"></div>
<hr>
<p>左に外側の余白を指定</p>
<div class="margin-left"></div>

`,
css:`
div {
  width: 100px;
  height: 100px;
  border: 2px solid #000;
}

.margin-same-size {
  margin: 10px;  
}

.margin-different-size {
  margin: 10px 30px 10px 20px;    
}

.margin-different-size-updown-rightleft {
  margin: 10px 30px;      
}

.margin-top {
  margin-top: 20px;
}

.margin-right {
  margin-right: 20px;
}

.margin-bottom {
  margin-bottom: 20px;
}

.margin-left {
  margin-left: 20px;
}
`,
},
mucunad:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
document.getElementById('box').textContent = new Date().toLocaleString();
`,
},
nafoven:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div>
        <button class="btn btn-primary btn-block normal-case">Block level button 1</button>
    </div>
    <div class="mt-2">
        <button class="btn btn-secondary btn-block normal-case">Block level button 2</button>
    </div>

    <div class="flex mt-2">
        <div class="w-1/2 bg-gray-200">xxx</div>
        <div class="w-1/2 col-span-2">
            <div class="ml-2">
                <button class="btn btn-primary btn-block normal-case">Block level button 1</button>
            </div>
            <div class="ml-2 mt-2">
                <button class="btn btn-secondary btn-block normal-case">Block level button 2</button>
            </div>
        </div>
    </div>
</body>

</html>
`,
},
nawabuq:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div id="wrapper">
            <div id="inner">
                <div class="box">
                    1
                </div>
                <div class="box">
                    2
                </div>
                <div class="box">
                    3
                </div>
            </div>
        </div>
    </body>
</html>
`,
css:`
#wrapper {
    width: 200px;
    height: 150px;
    background-color: skyblue;
    margin: 0;
}
#inner {
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 10px;
    width: 150px;
    height: 150px;
    background-color: green;
    margin: auto;
}
.box {
    width: 30px;
    background-color: pink;
    text-align: center;
}
`,
},
nawofok:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-in">フェードイン</button>
  <button type="button" class="my-button-out">フェードアウト</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  display: none;
  width: 60px;
  height: 60px;
  background-color: #666;
}
`,
javascript:`
const \$box = \$('.box');

\$('.my-button-in').on('click', () => {
  \$box.fadeIn();
});

\$('.my-button-out').on('click', () => {
  \$box.fadeOut();
});
`,
},
nawogov:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>アコーディオン</title>
</head>
<body>
  
  <div class="accordion">
    <section>
      <h2 class="accordion-title">タイトル1</h2>
      <!-- コンテンツを最初から表示する場合はaccordion-content-activeクラスを付ける -->
      <div class="accordion-content accordion-content-active">コンテンツ1</div>
    </section>

    <section>
      <h2 class="accordion-title">タイトル2</h2>
      <div class="accordion-content">コンテンツ2</div>
    </section>

    <section>
      <h2 class="accordion-title">タイトル3</h2>
      <div class="accordion-content">コンテンツ3</div>
    </section>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  

</body>
</html>
`,
css:`
/* アコーディオンのタイトル部分 */
.accordion-title {
  padding: 6px;
  margin: 0;
  font-size: 1rem;
  border: 1px solid #ccc;
  background-color: #f0f0f0;
  cursor: pointer;
}

/* アコーディオンのコンテンツ部分 */
.accordion-content {
  display: none; /* 初期状態は非表示 */
  padding: 12px 6px;
  border: 1px solid #ccc;
}

/* 初期状態を表示するとき用のクラス */
.accordion-content-active {
  display: block;
}
`,
javascript:`
// アコーディオンのタイトルがクリックされたら
\$('.accordion-title').on('click', function(e) {

  // .accordion-contentを選択
  var content = \$(e.target).next();

  // .accordion-contentを表示・非表示
  content.slideToggle();
  
});
`,
},
nawuxeg:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div id="introduction">
            <p>これから〜〜の紹介をします。</p>
        </div>

        <div class="main">
            <p>これから〜〜の紹介をします。</p>
        </div>
    </body>
</html>
`,
css:`
#introduction {
    color: green;
}

.main {
    color: blue;
}
`,
},
nefucip:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <button type="button" class="my-button">表示切り替え</button>
  <div class="box">テキスト</div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.my-button').on('click', function() {
  \$('.box').toggle();
});
`,
},
neguyak:{html:`
<div class="box">ボックス</div>
<div class="box">ボックス</div>
<div class="box">ボックス</div>
`,
css:`
.box {
    display: none; /* この行を削除すると表示されます */
}
`,
},
nehecom:{html:`
<div class="gray">グレーの背景</div>
<hr>
<div class="yellow">黄色の背景</div>
<hr>
<div class="alpha">黒色透過60%の背景</div>

`,
css:`
div {
  width: 150px;
  height: 100px;
}

.gray {
  background-color: gray;  
}

.yellow {
  background-color: yellow;    
}

.alpha {
  background-color: rgba(0, 0, 0, .6);  
}
`,
},
nepofif:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
    background-repeat: no-repeat;
    background-size: cover;
}
`,
},
neruxov:{html:`
<p>背景画像を繰り返して表示（デフォルトの指定）</p>
<div></div>
<hr>
<p>背景画像を繰り返さない</p>
<div class="no-repeat"></div>
<hr>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/triangle.png");
}

.no-repeat {
  background-repeat: no-repeat;
}
`,
},
nevatuq:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>カバー - 中央配置</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- カバー -->
    <section class="cover">
      <h1 class="cover-catch">キャッチコピー</h1>
      <a href="./index.html" class="cover-button">ボタン</a>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #000;
  text-decoration: none;
}


/* カバー
------------------------------------------ */

.cover {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  height: 31.25rem;
  background-image: url("https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/cover.jpg");
  background-position: center;
  background-size: cover;
}

/* キャッチコピー */
.cover-catch {
  margin-bottom: 2.5rem;
  font-size: 3rem;
}

/* ボタン */
.cover-button {
  padding: .5rem 3.75rem;
  font-weight: 700;
  color: #fff;
  background-color: #26547c;
}

`,
},
niconem:{html:`
<form>
  <h2>性別</h2>
  <label for="male">男性</label>
  <input type="radio" id="male" name="gender" value="male">
  <br>
  <label for="female">女性</label>
  <input type="radio" id="female" name="gender" value="female">
  <br>
  <label for="none">未回答</label>
  <input type="radio" id="none" name="gender" value="none">

  <h2>好きなスポーツ</h2>
  <label for="baseball">野球</label>
  <input type="checkbox" id="baseball" name="sports" value="baseball">
  <br>
  <label for="soccer">サッカー</label>
  <input type="checkbox" id="soccer" name="sports" value="soccer">
  <br>
  <label for="basketball">バスケットボール</label>
  <input type="checkbox" id="basketball" name="sports" value="basketball">
  <br>
  <label for="golf">ゴルフ</label>
  <input type="checkbox" id="golf" name="sports" value="golf">
  <br>
  <h2>都道府県</h2>
  <select name="prefecture">
    <option value="tokyo">東京都</option>
    <option value="kanagawa">神奈川県</option>
    <option value="saitama">埼玉県</option>
    <option value="chiba">千葉県</option>
    <option value="etc">その他</option>
  </select>

  <h2>問い合わせ内容</h2>
  <textarea name="content"></textarea>
</form>

`,
},
nijirix:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-toggle">スライドダウン／アップ</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  display: none;
  width: 200px;
  height: 200px;
  background-color: #666;
}
`,
javascript:`
var box = \$('.box');

\$('.my-button-toggle').on('click', function() {
  box.slideToggle();
});
`,
},
nikecew:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    お名前 <input type="text" id="name">
    <button type="button" id="button-greeting">あいさつ</button>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('button-greeting');
const input = document.getElementById('name');
const box = document.getElementById('box');

button.addEventListener('click', () => {
  const name = input.value;
  const hour = new Date().getHours();
  let greeting;

  // 確認のため、コンソールに表示
  console.log(\`現在の時間：\${hour}時\`);

  if (hour >= 6 && hour < 12) {
    greeting = 'おはよう';
  } else if (hour >= 12 && hour < 18) {
    greeting = 'こんにちは';
  } else {
    greeting = 'こんばんは';
  }

  box.textContent = \`\${greeting}、\${name}さん\`;
});
`,
},
nilegaj:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    お名前 <input type="text" id="name">
    <div>
      <button type="button" id="button-greeting">あいさつ</button>
      <button type="button" id="button-cheerful">元気にあいさつ</button>
      <button type="button" id="button-late">遅れてあいさつ</button>
    </div>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const buttonGreeting = document.getElementById('button-greeting');
const buttonCheerful = document.getElementById('button-cheerful');
const buttonLate = document.getElementById('button-late');

const input = document.getElementById('name');
const box = document.getElementById('box');

const greet = () => {
  let greeting;
  const hour = new Date().getHours();

  if (hour >= 6 && hour < 12) {
    greeting = 'おはよう';
  } else if (hour >= 12 && hour < 18) {
    greeting = 'こんにちは';
  } else {
    greeting = 'こんばんは';
  }

  return greeting;
};

buttonGreeting.addEventListener('click', () => {
  const name = input.value;
  const greeting = greet();

  box.textContent = \`\${greeting}、\${name}さん\`;
});

buttonCheerful.addEventListener('click', () => {
  const name = input.value;
  const greeting = greet();

  box.textContent = \`\${greeting}！、\${name}さん！！！\`;
});

buttonLate.addEventListener('click', () => {
  const name = input.value;

  setTimeout(() => {
    // 1秒経過した後に実行される
    box.textContent = \`遅れてごめん、\${name}さん\`;
  }, 1000);
});
`,
},
nimayab:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>フッター - 横並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- フッター -->
    <footer class="footer">

      <!-- コンテナ -->
      <div class="footer-container">

        <!-- ナビゲーション -->
        <nav>
          <ul class="footer-nav-list">
            <li class="footer-nav-list-item"><a href="#">レシピ一覧</a></li>
            <li class="footer-nav-list-item"><a href="#">特集</a></li>
            <li class="footer-nav-list-item"><a href="#">ランキング</a></li>
            <li class="footer-nav-list-item"><a href="#">運営会社</a></li>
            <li class="footer-nav-list-item"><a href="#">お問い合わせ</a></li>
            <li class="footer-nav-list-item"><a href="#">利用規約</a></li>
            <li class="footer-nav-list-item"><a href="#">プライバシーポリシー</a></li>
          </ul>
        </nav>

        <!-- SNSリンク -->
        <ul class="footer-sns-list">
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-instagram"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-youtube"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-facebook"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-twitter"></i></a>
          </li>
        </ul>

      </div>

      <!-- コピーライト -->
      <small class="footer-copyright">copyright ©2022 ○○ All Rights Reserved.</small>

    </footer>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}


/* フッター
------------------------------------------ */

.footer {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  background-color: #040000;
}

.footer li {
  list-style: none;
}

/* コンテナ */
.footer-container {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  max-width: 70rem;
  margin: 0 auto 1rem;
}

/* ナビゲーション */
.footer-nav-list {
  display: flex;
  flex-wrap: wrap;
  max-width: 21.5rem;
}

.footer-nav-list-item {
  margin-right: 2.5rem;
  margin-bottom: 1.25rem;
}

.footer-nav-list-item a {
  color: #fff;
}

.footer-nav-list-item a:hover {
  text-decoration: underline;
}

/* SNSリンク */
.footer-sns-list {
  display: flex;
  margin-bottom: 2rem;
}

.footer-sns-list-item:not(:last-child) {
  margin-right: 1rem;
}

.footer-sns-list-item a {
  display: block;
  padding: 0.75rem;
  color: #040000;
  background-color: #ccc;
  border-radius: 50%;
  line-height: 0;
}

/* コピーライト */
.footer-copyright {
  display: flex;
  justify-content: center;
  color: #ccc;
}

`,
},
nitolof:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>タブ</title>
  
  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  <!-- CSS -->
  <link href="https://cdn.jsdelivr.net/npm/jquery-smarttab@4/dist/css/smart_tab_all.min.css" rel="stylesheet" type="text/css" />


</head>
<body>
  <div id="smarttab" class="tab">
  <ul class="nav">
    <li><a class="nav-link" href="#tab-1">タブ1</a></li>
    <li><a class="nav-link" href="#tab-2">タブ2</a></li>
    <li><a class="nav-link" href="#tab-3">タブ3</a></li>
    <li><a class="nav-link" href="#tab-4">タブ4</a></li>
  </ul>

  <div class="tab-content">
    <div id="tab-1" class="tab-pane" role="tabpanel">
      タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。
    </div>
    <div id="tab-2" class="tab-pane" role="tabpanel">
      タブ2の内容が入ります。
    </div>
    <div id="tab-3" class="tab-pane" role="tabpanel">
      タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。
    </div>
    <div id="tab-4" class="tab-pane" role="tabpanel">
      タブ4の内容が入ります。
    </div>
  </div>
</div>
  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- smartTabのJS -->
  <script src="https://cdn.jsdelivr.net/npm/jquery-smarttab@4/dist/js/jquery.smartTab.min.js" type="text/javascript"></script>
</body>
</html>
`,
css:`
/* タブ周りの線を削除 */
.st-theme-basic {
  border: none;
}

/* タブ1、タブ2...下のボックスシャドウを無効にする */
/*
.st-theme-basic>.nav {
box-shadow: none !important;
}
*/

/* タブ1、タブ2の文字色 */
.st-theme-basic>.nav .nav-link {
  color: #040000;
}

/* 選択中タブ */
.st-theme-basic>.nav .nav-link.active {
  color: #fff!important;
  background-color: #040000;
}

/* 選択中のタブの下線の色を変更 */
.st-theme-basic>.nav .nav-link.active::after {
  background: #040000!important;
}

/* タブの中身 */
.tab-content {
  border-right: 2px solid #040000;
  border-bottom: 2px solid #040000;
  border-left: 2px solid rgb(4, 0, 0);
}

`,
javascript:`
\$('#smarttab').smartTab({
  enableUrlHash: false
});
`,
},
nizuhuq:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p class="a">a</p>
        <p class="b">b</p>
        <p class="c">c</p>
        <p class="d">d</p>
        <p class="e">e</p>
        <p class="f">f</p>
    </body>
</html>
`,
css:`
.a {
  color: green; /* 緑色 */
}
.b {
  color: #ff0000; /* 赤:255, 緑:0, 青:0 */
}
.c {
  color: #f00; /* 赤:255, 緑:0, 青:0 */
}
.d {
  color: #ddd;  /* 灰色 */
}
.e {
  color: rgba(255, 0, 255, 1.0); /* 紫色 */
}
.f {
  color: rgba(255, 0, 255, 0.5); /* 透明度:0.5 */
}
`,
},
nofefoq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <ul id="example">
    <li
      v-for="character in characters"
      v-bind:key="character"
    >
      {{ character }}
    </li>
  </ul>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    characters: {
      hero: '桃太郎',
      friend: 'イヌ',
      enemy: '鬼',
    },
  },
});
`,
},
nowayad:{html:`
<p class="gray">グレーのテキスト</p>
<p class="red">赤色のテキスト</p>
<p class="yellow">黄色のテキスト</p>
<p class="blue">青色のテキスト</p>

`,
css:`
.gray {
  color: gray;
}

.red {
  color: red;
}

.yellow {
  color: yellow;
}

.blue {
  color: blue;
}
`,
},
noyemun:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ヘッダー - ロゴ中央配置</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <a href="#" class="header-logo"><img
                                           src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/logo-white.png"
                                           alt="Kiramekicafe">
      </a>
      <nav class="header-nav">
        <ul class="header-nav-list-group">
          <li>
            <a href="#">メニュー</a>
          </li>
          <li>
            <a href="#">メニュー</a>
          </li>
          <li>
            <a href="#">メニュー</a>
          </li>
        </ul>
      </nav>
      <ul class="header-button-group">
        <li>
          <a href="#" class="header-button"><i class="header-button-icon bi bi-bell"></i>ボタン</a>
        </li>
        <li>
          <a href="#" class="header-button"><i class="header-button-icon bi bi-person-circle"></i>ボタン</a>
        </li>
      </ul>
    </header>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* リスト */
li {
  list-style-type: none;
}


/* ヘッダー
------------------------------------------ */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 4.375rem;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  background-color: #84CEEF;
}

.header a {
  color: #fff;
}

.header-nav {
  order: -1;
}

/* ナビゲーション、ボタン */
.header-nav-list-group,
.header-button-group {
  display: flex;
}

.header-nav li:not(:last-child),
.header-button-group li:not(:last-child) {
  margin-right: 1rem;
}

.header-button-icon {
  padding-right: .25rem;
}

.header-button {
  padding: 0.75rem 1rem;
  background-color: #2f92dd;
  border-radius: .25rem;
}

`,
},
nudawem:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8">
  <title>セレクタを書いてみよう</title>
</head>
<body>

  <p id="text1">テキスト1</p>
  <p id="text2">テキスト2</p>
  <p id="text3">テキスト3</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="main.js"></script>

</body>
</html>
`,
javascript:`
// テキスト1の文字色を赤色にする
\$('#text1').css('color', 'red');

// テキスト2の文字色を青色にする
\$('#text2').css('color', 'blue');

// テキスト3の文字色を緑色にする
\$('#text3').css('color', 'green');
`,
},
nupuduc:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="outer">
    親要素
    <div id="inner">
      子要素
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#inner {
  margin: 20px;
}
`,
javascript:`
\$('#inner')
  .parent()
  .css({ 'background-color': 'skyblue' });
`,
},
paceled:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Animate.cssのテスト</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <h1 class="animate__animated animate__bounce animate__infinite">テスト</h1>
</body>

</html>
`,
},
padunoc:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きリスト縦並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Voice-->
    <section class="voice">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="76" height="76">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="76" height="76">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="76" height="76">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="76" height="76">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Voice
------------------------------------------ */

/* アイテム */
.voice-item {
  display: flex;
  align-items: center;
  column-gap: 1rem;
  padding: .75rem;
  background-color: #ffd166;
}

.voice-item:not(:last-child) {
  margin-bottom: 1.25rem;
}


/* タイトル */
.voice-item-title {
  margin-bottom: .5rem;
  font-size: 1.25rem;
}

/* テキスト */
.voice-item-description {
  font-size: .875rem;
}

`,
},
pebiroj:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <form id="my-form">
      <input type="text" id="input-word">
      <input type="submit" value="送信">
    </form>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const input = document.getElementById('input-word');
const form = document.getElementById('my-form');

form.addEventListener('submit', (e) => {
  e.preventDefault();
  console.log('value: ', input.value);
});
`,
},
pebizej:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>重要な文章</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('p').css('color', 'red');
`,
},
penuhuz:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <form id="my-form">
      <input type="text" id="num1">
      <input type="text" id="num2">
      <button type="button" id="button-add">+</button>
    </form>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const buttonAdd = document.getElementById('button-add');
const box = document.getElementById('box');
const num1 = document.getElementById('num1');
const num2 = document.getElementById('num2');

buttonAdd.addEventListener('click', () => {
  const numberNum1 = Number.parseFloat(num1.value);
  const numberNum2 = Number.parseFloat(num2.value);
  const result = numberNum1 + numberNum2;

  box.textContent = result;
});
`,
},
peyoxaf:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="accordion">
    <section>
      <h2 class="accordion-title"><a href="#">タイトル1</a></h2>
      <!-- コンテンツを最初から表示する場合はaccordion-content-activeクラスを付ける -->
      <div class="accordion-content accordion-content-active">コンテンツ1</div>
    </section>

    <section>
      <h2 class="accordion-title"><a href="#">タイトル2</a></h2>
      <div class="accordion-content">コンテンツ2</div>
    </section>

    <section>
      <h2 class="accordion-title"><a href="#">タイトル3</a></h2>
      <div class="accordion-content">コンテンツ3</div>
    </section>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* アコーディオンのタイトル部分 */
.accordion-title {
  margin: 0;
  border: 1px solid #ccc;
  background-color: #f0f0f0;
  font-size: 1rem;
}
.accordion-title a {
  display: block;
  padding: 6px;
  color: #3f4548;
  text-decoration: none;
}

/* アコーディオンのコンテンツ部分 */
.accordion-content {
  /* 初期状態では非表示 */
  display: none;

  height: 60px;
  padding: 12px 6px;
  border: 1px solid #ccc;
}
/* accordion-content-activeクラスが付いているものは初期状態で表示しておく */
.accordion-content.accordion-content-active {
  display: block;
}
`,
javascript:`
// アコーディオンのタイトルがクリックされたら
\$('.accordion-title a').on('click', (e) => {
  // hrefにページ遷移しない
  e.preventDefault();

  // 同じsection内の.accordion-contentを選択
  const content = \$(e.target)
    .closest('section')
    .find('.accordion-content');

  // .accordion-contentが非表示の場合は
  if (!content.is(':visible')) {
    // 表示中のコンテンツを閉じる
    \$('.accordion-content:visible').slideUp();

    // クリックされたコンテンツを表示
    content.slideDown();
  }
});
`,
},
pificis:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
      <p>普通の文章</p>
      <p id="important">id属性が指定されたp要素</p>
    </body>
</html>
`,
css:`
#important {
  color : red;
}
`,
},
pilisij:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <select id="my-select">
      <option value="1">Item 1</option>
      <option value="2">Item 2</option>
      <option value="3">Item 3</option>
    </select>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const select = document.getElementById('my-select');

select.addEventListener('change', (e) => {
  console.log('value: ', e.target.value);
});
`,
},
pixonur:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <p>折り返し無し※初期値</p>
  <div class="container-one">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
  
  <p>折り返し有り</p>
  <div class="container-two">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
  
</body>
</html>
`,
css:`
.item {
  width: 40%;
  height: 50px;
  padding: 10px;
  margin: 10px;
  background: #FFE966;
  box-sizing: border-box;
}

.container-one {
  display: flex;
  flex-wrap: nowrap;
  border: 1px solid #000;
}

.container-two {
  display: flex;
  flex-wrap: wrap;
  border: 1px solid #000;
}
`,
},
pizafat:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS Sample</title>
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <a href="#" class="inline-block bg-gray-700 text-gray-50 px-4 py-2 rounded hover:bg-gray-800">Test</a>
</body>

</html>
`,
},
pomapap:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="r">div1</div>
        <div class="g">div2</div>
        <div class="b">div3</div>

        <span class="r">span1</span>
        <span class="g">span2</span>
        <span class="b">span3</span>
    </body>
</html>
`,
css:`
.r { background-color: pink; }
.g { background-color: palegreen; }
.b { background-color: skyblue; }

div.r {
    display: inline;
}
div.g {
    display: inline;
}
`,
},
ponedej:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <ul class="tabs">
        <li class="tab tab-lifted tab-active"><a href="#">収入</a></li>
        <li class="tab tab-lifted"><a href="#">支出</a></li>
        <li class="tab tab-lifted"><a href="#">合計</a></li>
    </ul>
</body>

</html>
`,
},
popamaf:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="parent">
    <p class="child">もともとの要素</p>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.child {
  cursor: pointer;
}
`,
javascript:`
\$('.child').on('click', () => {
  console.log('.childのイベントハンドラ');
});

\$('#parent').append('<p class="child">追加した要素</p>');
`,
},
pufakub:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg") center center/cover;
}
`,
},
pufapip:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div>置き換える前</div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('div').html('<a href="test.html">置き換えた後</a>');
`,
},
pugifay:{html:`
<img src="https://demo.techacademy.jp/html-css/images/logo-techacademy.png" alt="ロゴ画像" />

`,
},
pukolup:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <p>
    <a class="lnk" href="#">a要素</a>
  </p>
  <p>
    <button class="btn">button要素</button>
  </p>

</body>

</html>
`,
css:`
.lnk {
  display: inline-block;
  color: #fff;
  background-color: #198754;
  text-decoration: none;
  padding: 10px;
  border-radius: 5px;
  font-size: 16px;
}

.btn {
  color: #fff;
  background-color: #198754;
  padding: 10px;
  border-radius: 5px;
  border: 0;
  font-size: 16px;
  cursor: pointer;
}
`,
},
qacapuv:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <button type="button" id="my-button">押して！</button>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('my-button');

// ボタンをクリックすると、イベントリスナーが実行される
button.addEventListener('click', () => {
  alert('押された！');
});
`,
},
qazifum:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>

  <img src="https://techacademy.s3.amazonaws.com/bootcamp/webdesign/mobile-design/img_work_site.png" alt="" class="responsive-images">
  
</body>
</html>
`,
css:`
.responsive-images {
  max-width: 100%;
  height: auto;
}
`,
},
qemeban:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>WaypointsとAnimate.cssのテスト</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="boxes">
    <div class="box animate__animated">box0</div>
    <div class="box animate__animated">box1</div>
    <div class="box animate__animated">box2</div>
    <div class="box animate__animated">box3</div>
    <div class="box animate__animated">box4</div>
    <div class="box animate__animated">box5</div>
    <div class="box animate__animated">box6</div>
    <div class="box animate__animated">box7</div>
    <div class="box animate__animated">box8</div>
    <div class="box animate__animated">box9</div>
  </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="https://code.jquery.com/jquery-migrate-3.3.2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/3.0.0/jquery.waypoints.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  background: repeating-linear-gradient(0deg,
    #ffffff,
    #ffffff 40px,
    #dedede 40px,
    #dedede 80px);
 }

 .boxes {
   margin: 80vh auto;
 }

 .box {
   border: 1px solid #000;
   width: 10em;
   padding: 10px;
   margin: 2em auto;
   text-align: center;
 }

.animate__animated {
   /* 最初から非表示 */
   opacity: 0;
}
`,
javascript:`
// animate__animatedクラスの付いた要素にwaypointを登録
\$('.animate__animated').waypoint({
  handler: function(direction) {
    // 要素が画面中央に来るとここが実行される
    if (direction === 'down') {
      /**
       * 下方向のスクロール
       * イベント発生元の要素に
       * fadeOutUpを削除して
       * fadeInUpアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element)
        .removeClass('animate__fadeOutUp')
        .addClass('animate__fadeInUp');
    } else if (direction === 'up') {
      /**
       * 上方向のスクロール
       * イベント発生元の要素に
       * fadeInUpを削除して
       * fadeOutUpアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element)
        .removeClass('animate__fadeInUp')
        .addClass('animate__fadeOutUp');
    }
  },

  // 要素が画面中央に来たらhandlerを実行
  offset: '50%',
});
`,
},
qeqisec:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <input type="text" id="my-input">

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
var value = 'こんにちは';

// #my-inputに値をセット
\$('#my-input').val(value);
`,
},
qezeduy:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference></button-preference>
    <button-preference>すごいね！</button-preference>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  data() {
    return { count: 0 }
  },
  methods: {
    countUp() {
      this.count += 1
    },
  },
  template: \`
    <button v-on:click="countUp">
      {{ count }} <slot>いいね！</slot>
    </button>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'button-preference': ButtonPreference,
  },
})
`,
},
qibomi:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <ul id="example">
    <li
      v-for="member in members"
      v-bind:key="member"
    >
      {{ member }}
    </li>
  </ul>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    members: ['桃太郎', 'イヌ', 'サル', 'キジ'],
  },
});
`,
},
qiloyiv:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>ヘッダー - ヘッダー内側にコンテナ</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ヘッダー -->
    <header class="header">
      <div class="header-container">

        <!-- ロゴ -->
        <a href="#"><img
                         src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/logo-white.png"
                         alt="Kiramekicafe"></a>

        <!-- ナビゲーション -->
        <nav class="header-nav">
          <ul class="header-nav-list">
            <li><a href="#">メニュー</a></li>
            <li><a href="#">メニュー</a></li>
            <li><a href="#">メニュー</a></li>
            <li><a href="#" class="header-nav-list-button">ボタン</a></li>
          </ul>
        </nav>
      </div>
    </header>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* リスト */
li {
  list-style: none;
}


/* ヘッダー
------------------------------------------ */

.header {
  height: 3.75rem;
  background-color: #040000;
}

.header-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: 67.5rem;
  height: 100%;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  margin: auto;
}

/* ナビゲーション */
.header-nav a {
  color: #fff;
}

.header-nav-list {
  display: flex;
  align-items: center;
  column-gap: 2.5rem;
}

/* ボタン */
.header-nav-list-button {
  display: inline-block;
  padding: .5rem 3.75rem;
  text-align: center;
  color: #fff;
  background-color: #26547c;
  border-radius: .5rem;
}

.header-nav-list-button:hover {
  color: #040000;
  background-color: #fff;
  transition: all 0.3s ease;
}
`,
},
qofehig:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>パンくずリスト - 矢印区切り</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- コンテナ -->
    <div class="container">

      <!-- パンくずリスト -->
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">TOP</a></li>
          <li class="breadcrumb-item"><a href="#">ABOUT</a></li>
          <li class="breadcrumb-item"><a href="#">NEWS</a></li>
          <li class="breadcrumb-item"><a href="#">CONTACT</a></li>
        </ol>
      </nav>

    </div>


  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #2f92dd;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* パンくずリスト */
.breadcrumb {
  display: flex;
  column-gap: .75rem;
  list-style: none;
}

.breadcrumb-item + .breadcrumb-item::before {
  padding-right: .75rem;
  font-family: "bootstrap-icons";
  font-size: .75rem;
  content: "\F285";
}

`,
},
qokamil:{html:`
<div class="container">
  <p>上に重ねる指定</p>
  <div class="box box1">初期値autoの要素</div>
  <div class="box box2">1を指定した要素</div>    
</div>
<hr>
<div class="container">
  <p>下に重ねる指定</p>
  <div class="box box3">初期値autoの要素</div>
  <div class="box box4">-1を指定した要素</div>    
</div>

`,
css:`
.container {
  height: 250px;
}

.box {
  width: 100px;
  height: 100px;
  padding: 10px;
  color: #fff;  
}

.box1 {
  position: relative;
  background-color: #000;
}

.box2 {
  position: absolute;
  top: 100px;
  left: 100px;
  z-index: 1;
  background-color: gray;
}

.box3 {
  position: relative;
  background-color: #000;
}

.box4 {
  position: absolute;
  top: 400px;
  left: 100px;
  z-index: -1;
  height: 70px;
  padding-top: 50px;
  padding-bottom: 0;
  background-color: gray;
}

`,
},
qowofi:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <ul class="tabs-menu">
      <li
        v-bind:class="{active: activeTab === 'tabs-1'}"
        v-on:click="activeTab = 'tabs-1'"
      >
        タブ1
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-2'}"
        v-on:click="activeTab = 'tabs-2'"
      >
        タブ2
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-3'}"
        v-on:click="activeTab = 'tabs-3'"
        >
        タブ3
      </li>
    </ul>
    <section class="tabs-content">
      <section v-if="activeTab === 'tabs-1'">
        <p>タブ1の内容が入ります。</p>
      </section>
      <section v-else-if="activeTab === 'tabs-2'">
        <p>タブ2の内容が入ります。</p>
      </section>
      <section v-else-if="activeTab === 'tabs-3'">
        <p>タブ3の内容が入ります。</p>
      </section>
      <section v-else>
        <p>タブを選択してください。</p>
      </section>
    </section>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* ulのデフォルトスタイルを消去 */
.tabs-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* タブの基本スタイル */
.tabs-menu li {
  display: block;
  float: left;
  margin-right: 8px;
  margin-bottom: -1px;
  padding: 10px 20px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  border-radius: 4px 4px 0 0;
  color: #557f95;
  text-decoration: none;

  /* 各プロパティをふわっと変える演出 */
  transition: all 0.15s;
}

/* タブにマウスを乗せたらカーソルの形を変える */
.tabs-menu li:hover {
  cursor: pointer;
}

/* 非選択のタブにマウスを乗せたら色を変える */
.tabs-menu li:not(.active):hover {
  border-color: #f0f0f0 #f0f0f0 #999;
  background-color: #f0f0f0;
}

/* 選択中のタブ */
.tabs-menu .active {
  border-color: #999 #999 transparent #999;
  background-color: #fff;
}
.tabs-menu .active {
  color: #3f4548;
}

/* タブコンテンツ表示エリア */
.tabs-content {
  clear: both;
  border: 1px solid #999;
  border-radius: 0 4px 4px 4px;
  padding: 10px;
}
`,
javascript:`
new Vue({
  el: '#example',
  data: {
    activeTab: '',
  },
});
`,
},
quqilul:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <button class="btn btn-primary">受信トレイ <span class="badge badge-ghost ml-1">7</span></div>
</body>

</html>
`,
},
racuqud:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <div class="container">
    <div class="item item-one">1</div>
    <div class="item item-two">2</div>
    <div class="item item-three">3</div>
  </div>
    
</body>
</html>
`,
css:`
.container {
    display: flex;
}

.item {
  width: 25%;
  height: 100px;
  padding: 10px;
  margin: 10px;
  background: #FFE966;
  box-sizing: border-box;
}

.item-one {
  order: 1;
}

.item-two {
  /* 何も指定していない場合は初期値のorder: 0;となる */
}

.item-three {
  order: -1;
}


`,
},
rasucic:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>おはよう</p>
  <p>おはよう</p>
  <p id="pm">おはよう</p>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#pm').text('こんにちは！');
`,
},
rejosaf:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>リスト - バッジ付き</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ニュース -->
    <section class="news">

      <!-- コンテナ -->
      <div class="container">

        <!-- リスト -->
        <ul class="list-group">
          <li class="list-group-item">
            リストが入ります<span class="badge badge-gray">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-pink">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-yellow">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-orange">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-green">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-light-blue">バッジ</span>
          </li>
          <li class="list-group-item">
            リストが入ります<span class="badge badge-blue">バッジ</span>
          </li>
        </ul>
      </div>

    </section>

  </body>
</html>
`,
css:`
/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* ニュース 
------------------------------------------ */

.list-group-item {
  display: flex;
  justify-content: space-between;
  padding-top: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #ccc;
}

/* バッジ */
.badge {
  padding: .25rem 1rem;
  color: #fff;
  font-size: .625rem;
  font-weight: 700;
  text-align: center;
  border-radius: 1.5rem;
}

.badge-gray {
  background-color: #ccc;
}

.badge-pink {
  background-color: #ef476f;
}

.badge-yellow {
  background-color: #ffe966;
}

.badge-orange {
  background-color: #ffd166;
}

.badge-green {
  background-color: #06d6a0;
}

.badge-light-blue {
  background-color: #83dcff;
}

.badge-blue {
  background-color: #2f92dd;
}

`,
},
repenib:{html:`
<div class="box1">relativeを指定した要素</div>
<div class="box2">absoluteを指定した要素</div>
<hr>
<div class="box3">relativeを指定した親要素A
  <div class="box3-inner">absoluteを指定した子要素B</div>
</div>

`,
css:`
.box1 {
    position: relative;
    width: 100px;
    height: 100px;
    color: #fff;
    background-color: #000;
}
.box2 {
    position: absolute;
    top: 50px;
    left: 100px;
    width: 100px;
    height: 100px;
    color: #fff;
    background-color: gray;
}
.box3 {
    position: relative;
    top: 50px;
    left: 100px;
    width: 200px;
    height: 200px;
    color: #fff;
    background-color: #000;
}

.box3-inner {
    position: absolute;
    top: 50px;
    left: 50px;
    width: 100px;
    height: 100px;
    color: #fff;
    background-color: gray;
}
`,
},
revakim:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div>置き換える前</div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('div').html('<a href="test.html">置き換えた後</a>');
`,
},
rexires:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>テスト</title>
</head>

<body>
  名前：<input type="text" name="username" placeholder="名前を入力">

</body>

</html>
`,
},
rezazux:{html:`
<p>背景の位置を%で指定</p>
<div class="background-position-percent"></div>
<hr>
<p>背景の位置をpxで指定</p>
<div class="background-position-pixel"></div>

`,
css:`
div {
  width: 400px;
  height: 200px;
  background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
  background-size: cover;
  background-position: 50% 20%; 
}

.background-position-percent {
  background-position: 50% 50%; 
}

.background-position-pixel {
  background-position: 400px 400px;
}
`,
},
riminuf:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <p>本日は<br>晴天なり</p>
  <p>本日は<br class="no-br">晴天なり</p>

</body>

</html>
`,
css:`
.no-br {
  display: none;
}
`,
},
rimozir:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="carousel">
    <ul class="slides">
      <li>
        <div class="box img1"></div>
      </li>
      <li>
        <div class="box img2"></div>
      </li>
      <li>
        <div class="box img3"></div>
      </li>
      <li>
        <div class="box img4"></div>
      </li>
    </ul>
    <a href="#" class="carousel-control carousel-control-prev inactive">&lt;</a>
    <a href="#" class="carousel-control carousel-control-next inactive">&gt;</a>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  width: 300px;
  height: 300px;
}
.img1 {
  background-color: tomato;
}
.img2 {
  background-color: skyblue;
}
.img3 {
  background-color: violet;
}
.img4 {
  background-color: lime;
}

.carousel {
  /* 子要素でposition:absoluteを使うために必要 */
  position: relative;

  /* 300x300の領域からはみ出た部分は非表示 */
  overflow: hidden;
  width: 300px;
  height: 300px;

  /* 左右中央寄せ */
  margin: 0 auto;
}

/* 矢印の基本スタイル */
.carousel-control {
  display: block;
  height: 50px;
  width: 30px;
  background-color: #f0f0f0;
  color: #333;
  line-height: 45px;
  text-align: center;
  text-decoration: none;
  font-size: 2rem;
  opacity: 0.5;

  /* 透明度をふわっと変える演出 */
  transition: opacity 0.15s;
}
/* マウスが乗ったら濃くする */
.carousel-control:hover {
  opacity: 0.8;
}

/* 左矢印 */
.carousel-control-prev {
  position: absolute;
  left: 0;
  top: 125px;
  text-indent: -2px;
}

/* 右矢印 */
.carousel-control-next {
  position: absolute;
  right: 0;
  top: 125px;
  text-indent: 2px;
}

/* スライドのul */
.slides {
  /* .carouselの左上隅に表示 */
  position: absolute;
  top: 0;
  left: 0;

  /* 横に長いひと続きの写真にする */
  width: 99999px;

  /* ulのデフォルトスタイルを消去 */
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* 各スライドを横につなげる */
.slides li {
  float: left;
  width: 300px;
  height: 300px;
}
`,
javascript:`
// スライド1枚あたりの幅（px）
const slideWidth = 300;

// 現在表示中のスライドが何番目か（0から数え始める）
let currentSlide = 0;

// スライドの全枚数
let numSlides;

// index（0から始まる）番目のスライドを表示する関数
const showSlide = (index) => {
  // 1番目のスライドでは左矢印を非表示
  if (index === 0) {
    \$('.carousel-control-prev').hide();
  } else {
    \$('.carousel-control-prev').show();
  }

  // 最後のスライドでは右矢印を非表示
  if (index === numSlides - 1) {
    \$('.carousel-control-next').hide();
  } else {
    \$('.carousel-control-next').show();
  }

  // 実行中のアニメーションがあればキャンセルした後、
  // leftを変化させるアニメーションを開始
  \$('.slides')
    .stop()
    .animate(
      {
        left: \`\${-slideWidth * currentSlide}px\`,
      },
      600,
    );
};

// 左矢印がクリックされたら1つ前のスライドを表示
\$('.carousel-control-prev').on('click', (e) => {
  e.preventDefault();

  currentSlide -= 1;
  showSlide(currentSlide);
});

// 右矢印がクリックされたら1つ後のスライドを表示
\$('.carousel-control-next').on('click', (e) => {
  e.preventDefault();

  currentSlide += 1;
  showSlide(currentSlide);
});

// スライドが全部で何枚あるか取得
numSlides = \$('.slides > li').length;

// 最初のスライドを表示
showSlide(currentSlide);
`,
},
riwezim:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div class="card card-bordered w-1/2">
        <figure class="bg-sky-100 p-2">
            <img src="https://demo.techacademy.jp/assets/logo-blue.svg">
        </figure>
        <div class="card-body">
            <div class="card-title">新着情報</div>
            <ul>
                <li><a href="#" class="link link-primary">友達リクエストが1件あります</a></li>
                <li><a href="#" class="link link-primary">メッセージが3件届いています</a></li>
                <li><a href="#" class="link link-primary">今日開催のイベントがあります</a></li>
            </ul>
        </div>
    </div>
</body>

</html>
`,
},
rocofiy:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
            div要素内
        </div>
    </body>
</html>
`,
css:`
.box {
    margin: 50px;
    border: 5px solid pink;
    padding: 50px;
    background-color: skyblue;
}
`,
},
roxilif:{html:`
<!DOCTYPE html>
<html lang="ja">
      
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body>
    <nav class="navbar bg-base-200">
        <!-- ホームへ戻るリンク。ブランドロゴなどを置く。 -->
        <a class="btn btn-ghost normal-case text-xl">P&amp;K</a>

        <!-- メニュー項目 -->
        <ul class="menu menu-horizontal p-0">
            <li><a href="#" class="active">子犬</a></li>
            <li><a href="#">子猫</a></li>
            <li tabindex="0">
                <a href="#">
                    会社情報
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                        <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                    </svg>
                </a>
                <ul class="p-2 bg-base-100 shadow">
                    <li><a href="#">ビジョン</a></li>
                    <li><a href="#">会社概要</a></li>
                    <li><a href="#">地図</a></li>
                    <li><a href="#">沿革</a></li>
                </ul>
            </li>
            <li><a href="#">お問い合わせ</a></li>
        </ul>
    </nav>
</body>

</html>
`,
},
ruborol:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
    </svg>
    ダウンロード
</body>

</html>
`,
},
rugedej:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <input type="text" class="my-input">
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.my-input').on('input', function(e) {
  var value = \$(e.target).val();
  \$('.box').text(value);
});
`,
},
ruzakif:{html:`
<ul>
    <li>飲料水</li>
    <li>パン</li>
    <li>牛乳</li>
    <li>鶏肉</li>
</ul>
`,
css:`
ul {
    color: blue;
}
`,
},
sadunez:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
            <div class="box-inner">
                内部のbox
            </div>
        </div>
    </body>
</html>
`,
css:`
.box {
    margin: 50px;
    border: 5px solid pink;
    width: 300px;
    height: 300px;
    background-color: skyblue;
}

.box-inner {
    margin: 20px;
    border: 3px solid green;
    padding: 20px;
    width: 100px;
    height: 100px;
    background-color: orange;
}
`,
},
safexix:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>ハンバーガーメニュー</title>

  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
</head>
<body>

  <!-- ヘッダー -->
  <header class="header">
    <a href="#">ロゴ</a>

    <!-- ハンバーガーボタン -->
    <button type="button" class="hamburger-button">
      <i class="bi bi-list"></i>
    </button>

    <!-- ハンバーガーメニュー -->
    <nav class="hamburger-menu">
      <ul class="hamburger-menu-list">
        <li><a href="#">メニュー</a></li>
        <li><a href="#">メニュー</a></li>
        <li><a href="#">メニュー</a></li>
        <li><a href="#">メニュー</a></li>
      </ul>
    </nav>
  </header>

  <main class="main"></main>

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</body>
</html>

`,
css:`
/**
* ハンバーガーメニュー用のCSS
*/

/* ハンバーガーボタン */
.hamburger-button {
  position: fixed;
  right: 0;
  z-index: 999;
  width: 3.125rem;
  height: 3.125rem;
  font-size: 1.75rem;
  color: #fff;
}

/* ハンバーガーメニュー */
.hamburger-menu {
  position: fixed;
  top: 0;
  left: 100%;
  width: 100vw;
  height: 100vh;
  background-color: rgba(4, 0, 0, 0.9);
  transition: all 0.6s;
  visibility: hidden;
}

/* スライドイン後の位置の指定 */
.hamburger-menu-active {
  left: 0;
  visibility: visible;
}

.hamburger-menu-list {
  padding: 5rem 1.25rem;
  list-style: none;
}


/**
* ヘッダー用のCSS
*/

.header {
  position: sticky;
  top: 0;
  z-index: 100;
  display: flex;
  align-items: center;
  width: 100%;
  height: 3.125rem;
  padding-left: 1.25rem;
  background-color: #040000;
}

/**
* main用のCSS
*/

.main {
  height: 2000px;
  /* ヘッダー上部固定確認用に高さを指定しています */
}


/**
* aタグ用のCSS
*/

a {
  color: #fff;
  text-decoration: none;
}

`,
javascript:`
var hamburger = \$('.hamburger-menu');

// OPEN/CLOSEボタンをクリックしたら
\$('.hamburger-button').on('click', function() {
  // console.log('click');

  // .hamburgerの表示・非表示を繰り返す
  hamburger.toggleClass('hamburger-menu-active');

});

// 画面幅のサイズが変わったら
\$(window).on('resize', function() {
  // console.log('resize');

  // ハンバーガーメニューを閉じる
  hamburger.removeClass('hamburger-menu-active');
});

`,
},
sahazaz:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <button type="button" id="my-button">押して！</button>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('my-button');
const box = document.getElementById('box');

button.addEventListener('click', () => {
  box.innerHTML += 'どん！<br>';
});
`,
},
salobub:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>HTML文書の中身を大きく分けるとhead要素とbody要素に分かれます。<br>それぞれheadタグとbodyタグで囲います。</p>
        <p>HTML文書の中身を大きく分けるとhead要素とbody要素に分かれます。





        それぞれheadタグとbodyタグで囲います。</p>
    </body>
</html>
`,
},
sanetib:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference></button-preference>
    <button-preference></button-preference>
    <button-preference></button-preference>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.component('button-preference', {
  template: '<button>いいね！</button>',
});

new Vue({
  el: '#example',
});
`,
},
segukeh:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <input type="text" id="my-input">

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const value = 'こんにちは';

// #my-inputに値をセット
\$('#my-input').val(value);
`,
},
sepuhed:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <h1 class="important">importantな見出し</h1>
        <p>普通の文章</p>
        <div class="important">
          importantなdiv要素内
          <p>importantではないp要素だが、importantなdiv要素の中にあるので文字色は赤になる</p>
        </div>
    </body>
</html>
`,
css:`
.important {
  color: red;
}
`,
},
sepupup:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <title>HTML/CSS</title>
</head>

<body>
  <div class="box1">
    div要素1
  </div>
  <div class="box2">
    div要素2
  </div>
</body>

</html>
`,
css:`
body {
  margin: 0;
  background-color: skyblue;
}

.box1 {
  width: 80vw;
  max-width: 150px;
  height: 150px;
  background-color: pink;
}

.box2 {
  width: 80vw;
  min-width: 150px;
  height: 150px;
  background-color: palegreen;
}
`,
},
seqixom:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <p v-change-color="'red'">クリックすると赤に</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.directive('change-color', {
  bind(el, binding) {
    el.addEventListener('click', () => {
      el.style.color = binding.value;
    });
  },
});

new Vue({
  el: '#example',
});
`,
},
seramam:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="my-click child">クリックしてください</div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.child {
  cursor: pointer;
}
`,
javascript:`
\$('.my-click').on('click', { test: 'テストデータ' }, (e) => {
  console.log('追加したデータ：', e.data.test);
});
`,
},
sesetir:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>Lesson4課題デモページ</title>

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet">
  </head>
  <body>

    <main>
      <a href="#" class="button">ボタン</a>
      <p class="text">テキスト</p>
    </main>

  </body>
</html>
`,
css:`
a {
  text-decoration: none;
  color: #fff;
}

.button {
  padding: 10px 40px;
  background-color: #84ceef;
}

.button:hover {
  background-color: #72e8a7;
}

.text {
  font-family: 'Noto Sans JP', sans-serif;
}
`,
},
setoroy:{html:`
<p>外側にボックスシャドウを指定する</p>
<div class="box-shadow"></div>
<hr>
<p>内側にボックスシャドウを指定する</p>
<div class="box-shadow-inset"></div>

`,
css:`
div {
  width: 100px;
  height: 100px;
}

.box-shadow {
  box-shadow: 10px 10px 14px 10px rgba(0, 0, 0, 0.25);  
}

.box-shadow-inset {
  box-shadow: 10px 10px 14px 10px rgba(0,0,0,0.25) inset;  
}

`,
},
siboxaf:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <img src="http://static.techacademy.jp/magazine/wp-content/themes/ta-magazine/images/logo-magazine.png" alt="techacademy magazineのロゴ">
    </body>
</html>
`,
},
sicajip:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
}
#main {
    background-color: #ddffdd;
}
aside {
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
sidajuc:{html:`
<ul>
  <li><a href="#">TOP</a></li>
  <li><a href="#">ABOUT</a></li>
  <li><a href="#">MAP</a></li>
  <li><a href="#">BLOG</a></li>
  <li><a href="#">CONTACT</a></li>
</ul>

<ul class="inline-block">
  <li><a href="#">TOP</a></li>
  <li><a href="#">ABOUT</a></li>
  <li><a href="#">MAP</a></li>
  <li><a href="#">BLOG</a></li>
  <li><a href="#">CONTACT</a></li>
</ul>

`,
css:`
.inline-block li {
  display: inline-block;
}
`,
},
sijower:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  width: 200px;
  height: 200px;
  background-color: #ddd;
}
`,
javascript:`
const onMouseenter = (e) => {
  // マウスが乗った時の処理
  \$(e.target).css({
    'background-color': '#ff9999',
  });
};
const onMouseleave = (e) => {
  // マウスが外れた時の処理
  \$(e.target).css({
    'background-color': '#dddddd',
  });
};

\$('.box')
  .on('mouseenter', onMouseenter)
  .on('mouseleave', onMouseleave);
`,
},
silafaw:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>タブ</title>

  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
  
  <!-- smartTabのCSS -->
  <link href="https://cdn.jsdelivr.net/npm/jquery-smarttab@3.1.1/dist/css/smart_tab_all.min.css" rel="stylesheet" type="text/css" />
</head>
<body>

  <div id="smarttab" class="tab">
    <ul class="nav">
      <li><a class="nav-link" href="#tab-1">タブ1</a></li>
      <li><a class="nav-link" href="#tab-2">タブ2</a></li>
      <li><a class="nav-link" href="#tab-3">タブ3</a></li>
      <li><a class="nav-link" href="#tab-4">タブ4</a></li>
    </ul>
 
    <div class="tab-content">
      <div id="tab-1" class="tab-pane" role="tabpanel">
        タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。
      </div>
      <div id="tab-2" class="tab-pane" role="tabpanel">
        タブ2の内容が入ります。
      </div>
      <div id="tab-3" class="tab-pane" role="tabpanel">
        タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。
      </div>
      <div id="tab-4" class="tab-pane" role="tabpanel">
        タブ4の内容が入ります。
      </div>
    </div>
  </div>
  
  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- smartTabのJS -->
  <script src="https://cdn.jsdelivr.net/npm/jquery-smarttab@3.1.1/dist/js/jquery.smartTab.min.js" type="text/javascript"></script>
</body>
</html>
`,
css:`
/* タブ周りの線を削除 */
.st-theme-default {
  border: none;
}

/* タブ1、タブ2...下のボックスシャドウを無効にする */
/*
.st-theme-default>.nav {
box-shadow: none !important;
}
*/

/* 選択中タブ */
.st-theme-default>.nav .nav-link.active {
  color: #fff!important;
  background-color: #040000;
}

/* 選択中のタブの下線の色を変更 */
.st-theme-default>.nav .nav-link.active::after {
  background: #040000!important;
}

/* タブの中身 */
.tab-content {
  border-right: 2px solid #040000;
  border-bottom: 2px solid #040000;
  border-left: 2px solid rgb(4, 0, 0);  
}

`,
javascript:`
\$('#smarttab').smartTab({
  enableURLhash: false
});
`,
},
soguwe:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <button type="button" class="my-button">表示切り替え</button>
  <div class="box">テキスト</div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.my-button').on('click', () => {
  \$('.box').toggle();
});
`,
},
soqoqun:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>slick テスト</title>
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.css">
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="slider">
    <div id="slider-area">
      <div class="slider-item bg1">1番目の項目</div>
      <div class="slider-item bg2">2番目の項目</div>
      <div class="slider-item bg3">3番目の項目</div>
      <div class="slider-item bg4">4番目の項目</div>
      <div class="slider-item bg5">5番目の項目</div>
      <div class="slider-item bg6">6番目の項目</div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="https://code.jquery.com/jquery-migrate-3.3.2.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#slider {
  padding: 0 20px
}

#slider-area {
  max-width: 500px;
  margin: 0 auto;
}

.slider-item {
  height: 100px;
  max-width: 500px;
  margin: 0 auto;
}

.slick-prev:before,
.slick-next:before {
    color: #000;
}

.bg1 {
  background-color: #f00;
}

.bg2 {
  background-color: #0f0;
}

.bg3 {
  background-color: #00f;
}

.bg4 {
  background-color: #ff0;
}

.bg5 {
  background-color: #0ff;
}

.bg6 {
  background-color: #f0f;
}
`,
javascript:`
\$('#slider-area').slick({
  autoplay: true,
  autoplaySpeed: 5000,
  dots: true,
  arrows: true
});
`,
},
sozopen:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a href="am.html">おはよう</a>
  <a href="am.html">おはよう</a>
  <a href="pm.html">おはよう</a>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('[href="pm.html"]').text('こんにちは！');
`,
},
sukeqax:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div class="dropdown">
        <button class="btn">操作 ▼</button>
        <!-- 選択肢 -->
        <ul class="dropdown-content menu p-2 bg-base-100 w-52">
            <li><a href="#">返信</a></li>
            <li><a href="#">転送</a></li>
            <li>
                <div class="divider"></div>
            </li>
            <li><a href="#">削除</a></li>
        </ul>
    </div>
</body>

</html>
`,
},
suqupe:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/triangle.png");
}
`,
},
suwecux:{html:`
<ul>
    <li>飲料水</li>
    <li>パン</li>
    <li>牛乳</li>
    <li>鶏肉</li>
</ul>
`,
css:`
ul {
    color: blue;
}

li {
    display: inline-block;
    margin: 20px;
}
`,
},
tajayos:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <div class="container"><!-- ←これがflex コンテナ -->
    <div class="item">1</div><!-- ←これがflex アイテム -->
    <div class="item">2</div><!-- ←これがflex アイテム -->
    <div class="item">3</div><!-- ←これがflex アイテム -->
    <div class="item">4</div><!-- ←これがflex アイテム -->
  </div>


</body>
</html>
`,
css:`
.container {
    display: flex;
}
.item {
  width: 20%;
  height: 80px;
  padding: 10px;
  margin: 10px;
  background: #FFE966;
}
`,
},
takaxos:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p class="bg-image"></p>
    </body>
</html>
`,
css:`
.bg-image {
    width: 300px;
    height: 300px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
}
`,
},
tameqaj:{html:`
<p class="important">詳細なセレクタほど優先</p>
`,
css:`
p.important {
    color: red;
}

p {
    color: green;
}

`,
},
tawugik:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
    <div id="example">
      <template v-if="tabs !== null">
        <ul class="tabs-menu">
          <li
            v-for="tab in tabs"
            v-bind:key="tab.id"
            v-bind:class="{active: activeTab.id === tab.id}"
            v-on:click="activeTab = tab"
          >
            {{ tab.title }}
          </li>
        </ul>
        <section class="tabs-content">
          <section>
            <p>{{ activeTab.content }}</p>
          </section>
        </section>
      </template>
      <template v-else>
        <p>データを取得中です。</p>
      </template>
    </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* ulのデフォルトスタイルを消去 */
.tabs-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* タブの基本スタイル */
.tabs-menu li {
  display: block;
  float: left;
  margin-right: 8px;
  margin-bottom: -1px;
  padding: 10px 20px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  border-radius: 4px 4px 0 0;
  color: #557f95;
  text-decoration: none;

  /* 各プロパティをふわっと変える演出 */
  transition: all 0.15s;
}

/* タブにマウスを乗せたらカーソルの形を変える */
.tabs-menu li:hover {
  cursor: pointer;
}

/* 非選択のタブにマウスを乗せたら色を変える */
.tabs-menu li:not(.active):hover {
  border-color: #f0f0f0 #f0f0f0 #999;
  background-color: #f0f0f0;
}

/* 選択中のタブ */
.tabs-menu .active {
  border-color: #999 #999 transparent #999;
  background-color: #fff;
}
.tabs-menu .active {
  color: #3f4548;
}

/* タブコンテンツ表示エリア */
.tabs-content {
  clear: both;
  border: 1px solid #999;
  border-radius: 0 4px 4px 4px;
  padding: 10px;
}
`,
javascript:`
new Vue({
  el: '#example',
  data: {
    tabs: null,
    activeTab: null,
  },
  created() {
    setTimeout(() => {
      const fetchedData = [
        {
          id: 'tabs-1',
          title: 'タブ１',
          content: 'タブ１の内容が入ります。',
        },
        {
          id: 'tabs-2',
          title: 'タブ２',
          content: 'タブ２の内容が入ります。',
        },
        {
          id: 'tabs-3',
          title: 'タブ３',
          content: 'タブ３の内容が入ります。',
        },
      ];
      this.tabs = fetchedData;
      this.activeTab = fetchedData[0];
    }, 2000);
  },
});
`,
},
taxaduy:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>Test</title>
</head>
<body>
  
  <p class="dots"><span>こ</span><span>ん</span><span>に</span><span>ち</span><span>は</span></p>

</body>
</html>
`,
css:`
.dots span {
  position: relative;
}

.dots span::before {
  content: "・";
  position: absolute;
  top: -1em;
  left: 0;
}
`,
},
tayiwal:{html:`
<ul class="not">
  <li>リスト1</li>
  <li>リスト2</li>
  <li>リスト3</li>
  <li>リスト4</li>
</ul>
`,
css:`
li:not(:last-child) {
  border-bottom: 1px solid #000;
}
`,
},
telifok:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="outer">
    親要素
    <div id="inner">
      子要素
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#inner {
  margin: 20px;
}
`,
javascript:`
\$('#outer')
  .children()
  .css({ 'background-color': 'skyblue' });
`,
},
telivap:{html:`
<form>
  <label for="name">名前</label>
  <input type="text" id="name" name="name">
  <br>

  <label for="email">メールアドレス</label>
  <input type="email" id="email" name="email">
  <br>

  <label for="password">パスワード</label>
  <input type="password" id="password" name="password">
  <br>

  <label for="confirm">確認パスワード</label>
  <input type="password" id="confirm" name="confirm">
  <br>

  <input type="submit" value="登録する">
</form>

`,
},
tenuxox:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>slick テスト</title>
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.css">
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.css">
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="slider">
    <div id="slider-area">
      <div class="slider-item bg1">1番目の項目</div>
      <div class="slider-item bg2">2番目の項目</div>
      <div class="slider-item bg3">3番目の項目</div>
      <div class="slider-item bg4">4番目の項目</div>
      <div class="slider-item bg5">5番目の項目</div>
      <div class="slider-item bg6">6番目の項目</div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="https://code.jquery.com/jquery-migrate-3.3.2.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#slider {
  padding: 0 20px
}

#slider-area {
  max-width: 500px;
  margin: 0 auto;
}

.slider-item {
  height: 100px;
  max-width: 500px;
  margin: 0 auto;
}

.slick-prev:before,
.slick-next:before {
    color: #000;
}

.bg1 {
  background-color: #f00;
}

.bg2 {
  background-color: #0f0;
}

.bg3 {
  background-color: #00f;
}

.bg4 {
  background-color: #ff0;
}

.bg5 {
  background-color: #0ff;
}

.bg6 {
  background-color: #f0f;
}
`,
javascript:`
\$('#slider-area').slick();
`,
},
terizil:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box">重要な文章</div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').css({
  'color': '#ffffff',
  'background-color': '#000000',
});
`,
},
texefa:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
    display: flex;
    justify-content: space-between;
}
#main {
    width: 60%;
    background-color: #ddffdd;
}
aside {
    width: 30%;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
tijakag:{html:`
<div class="container">
  <div class="box">ボックス</div>
  <div class="box">ボックス</div>
  <div class="box">ボックス</div>
</div>


`,
css:`
.container {
    display: flex;
}
.box {
    width: 50px;
    height: 50px;
    padding: 5px;
    border: 2px solid #000;
}
`,
},
tijiwon:{html:`
<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スクロールに付随して左方向からフェードイン</title>

  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">

  <!-- Animate.css -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

</head>

<body>

  <main class="main">
    <section class="section">
      <p>ページを下方向にスクロールするとアニメーションが確認できます</p>
    </section>
    <section class="section">
      <div class="box animate__animated js-fadein-left"></div>
    </section>
    <section class="section">
      <div class="box animate__animated js-fadein-left"></div>
    </section>
    <section class="section">
      <div class="box animate__animated js-fadein-left"></div>
    </section>
  </main>

  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- waypoints -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/jquery.waypoints.min.js" integrity="sha512-CEiA+78TpP9KAIPzqBvxUv8hy41jyI3f2uHi7DGp/Y/Ka973qgSdybNegWFciqh6GrN2UePx2KkflnQUbUhNIA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

</body>

</html>

`,
css:`
/* セクションのCSS */
.section {
  height: 100vh;
  border-top: 1px solid #040000;
}

/* ボックスのCSS */
.box {
  width: 25rem;
  height: 12.5rem;
  background-color: #040000;
}

/* ページ読み込み直後にフェードイン要素を非表示にする */
.js-fadein-left {
  opacity: 0;
}

`,
javascript:`
\$('.js-fadein-left').waypoint({
  handler: function(direction) {
    // 要素が画面中央に来るとここが実行される
    if (direction === 'down') {
      /**
       * 下方向のスクロール
       * イベント発生元の要素に
       * fadeInLeftアニメーションを付けることで
       * アニメーションを開始
       */
      \$(this.element)
        .addClass('animate__fadeInLeft');
    }
  },
  
  // 要素が画面中央に来たらhandlerを実行
  offset: '50%',
});

`,
},
timukux:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>フッター - 縦並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- フッター -->
    <footer class="footer">

      <!-- コンテナ -->
      <div class="footer-container">

        <!-- ナビゲーション -->
        <nav>
          <ul class="footer-nav-list">
            <li class="footer-nav-list-item"><a href="#">レシピ一覧</a></li>
            <li class="footer-nav-list-item"><a href="#">特集</a></li>
            <li class="footer-nav-list-item"><a href="#">ランキング</a></li>
            <li class="footer-nav-list-item"><a href="#">運営会社</a></li>
            <li class="footer-nav-list-item"><a href="#">お問い合わせ</a></li>
            <li class="footer-nav-list-item"><a href="#">利用規約</a></li>
            <li class="footer-nav-list-item"><a href="#">プライバシーポリシー</a></li>
          </ul>
        </nav>

        <!-- SNSリンク -->
        <ul class="footer-sns-list">
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-instagram"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-youtube"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-facebook"></i></a>
          </li>
          <li class="footer-sns-list-item">
            <a href="#"><i class="bi bi-twitter"></i></a>
          </li>
        </ul>

      </div>

      <!-- コピーライト -->
      <small class="footer-copyright">copyright ©2022 ○○ All Rights Reserved.</small>

    </footer>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}


/* フッター
------------------------------------------ */

.footer {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  background-color: #040000;
}

.footer li {
  list-style: none;
}

/* コンテナ */
.footer-container {
  display: flex;
  flex-direction: column;
  max-width: 70rem;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  margin: 0 auto 1rem;
}

/* ナビゲーション */
.footer-nav-list {
  display: flex;
  flex-wrap: wrap;
}

.footer-nav-list-item {
  margin-right: 2.5rem;
  margin-bottom: 1.25rem;
}

.footer-nav-list-item a {
  color: #fff;
}

.footer-nav-list-item a:hover {
  text-decoration: underline;
}

/* SNSリンク */
.footer-sns-list {
  display: flex;
  margin-bottom: 2rem;
}

.footer-sns-list-item:not(:last-child) {
  margin-right: 1rem;
}

.footer-sns-list-item a {
  display: block;
  padding: 0.75rem;
  color: #040000;
  background-color: #ccc;
  border-radius: 50%;
  line-height: 0;
}

/* コピーライト */
.footer-copyright {
  display: flex;
  justify-content: center;
  color: #ccc;
}

`,
},
tiqaxav:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <a v-bind:href="url">テックアカデミー</a>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    url: 'https://techacademy.jp/',
  },
});
`,
},
tiruzoq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div class="item">こんにちは</div>
  <div class="item">こんにちは</div>
  <div class="item">こんにちは</div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.item').text('Hello');
`,
},
tixupit:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>HTML文書の中身を大きく分けるとhead要素とbody要素に分かれます。それぞれheadタグとbodyタグで囲います。</p>
        <p>head要素内には文書に関する「メタ情報」を記述し、body要素には「コンテンツ」を記述します。メタ情報(head)には閲覧者に表示されない設定やページ情報などを記述し、コンテンツ(body)には閲覧者に見てもらうためのWebページの文書を記述します。</p>
        <p>headタグ内に記述するメタ情報には、ページタイトル、外部スタイルシートの場所、外部JavaScriptファイルの場所、文字エンコーディング情報、ページの概要、などが含まれます。ブラウザで表示した際に、これらの内容は表示されません。</p>
    </body>
</html>
`,
},
tocopoy:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <input type="text" class="my-input">
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('.my-input').on('input', (e) => {
  const value = \$(e.target).val();
  \$('.box').text(value);
});
`,
},
todunoc:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <nav>
            <ul>
                <li><a href="#">TOP</a></li>
                <li><a href="#">ABOUT</a></li>
                <li><a href="#">MAP</a></li>
                <li><a href="#">BLOG</a></li>
                <li><a href="#">CONTACT</a></li>
            </ul>
        </nav>
        <div class="long-content">
            長い要素
        </div>
    </body>
</html>
`,
css:`
body {
    margin: 0;   /* ブラウザのデフォルト値の打ち消し */
}

nav ul {
    position: fixed;
    top: 10px;
    left: 10px;
    margin: 0;   /* ブラウザのデフォルト値の打ち消し */
    padding: 0;  /* ブラウザのデフォルト値の打ち消し */
}

nav ul li {
    display: inline-block;
    width: 100px;
    background-color: #dddddd;
    text-align: center;
    padding: 5px;
}

.long-content {
    height: 2000px;
    background-color: skyblue;
}
`,
},
toxasoz:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <form>
            <label for="name">名前</label>
            <input type="text" id="name" name="name">
            <br>

            <label for="email">メールアドレス</label>
            <input type="email" id="email" name="email">
            <br>

            <label for="password">パスワード</label>
            <input type="password" id="password" name="password">
            <br>

            <label for="confirm">確認パスワード</label>
            <input type="password" id="confirm" name="confirm">
            <br>

            <input type="submit" value="登録する">
        </form>
    </body>
</html>
`,
},
toyuxis:{html:`
<p>ボックスの幅にpadding（余白）とborder（ボーダー）の幅を含まない指定</p>
<div class="box-1"></div>
<hr>
<p>ボックスの幅にpadding（余白）とborder（ボーダー）の幅を含む指定</p>
<div class="box-2"></div>

`,
css:`
div {
  width: 100px;
  padding: 20px;
  border: 10px solid #000;
}

.box-1 {
  box-sizing: content-box;      
}

.box-2 {
  box-sizing: border-box;    
}
`,
},
tupezor:{html:`
<p class="pseudo">こんにちは！</p>
`,
css:`
.pseudo:before {
    content: "おはよう！";
}

.pseudo:after {
    content: "おやすみ！";
}
`,
},
tupuhut:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <div>
      <p>身長： <input v-model="height" type="text"> cm</p>
      <p>体重： <input v-model="weight" type="text"> kg</p>
    </div>
    <div>
      BMI: {{ getBmi() }}
    </div>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    height: '',
    weight: '',
  },
  methods: {
    getBmi() {
      if (this.height && this.weight) {
        // センチメートルをメートルに変換する
        const meterHeight = this.height / 100;

        // BMIを計算する
        const bmi = this.weight / (meterHeight * meterHeight);

        // 小数点以下の桁数を、２桁にして返す
        return bmi.toFixed(2);
      }

      return '';
    },
  },
});
`,
},
tusufow:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>マウスクリックで処理を実行</title>
</head>
<body>
  <button type="button" class="my-button">ボタン</button>
  <div class="background"></div>
  <button type="button" class="my-button">ボタン</button>
  <div class="background"></div>
  
  <script src="https://code.jquery.com/jquery-3.1.0.js"></script>

</body>
</html>
`,
css:`
.background {
  height: 100px;
}
`,
javascript:`
\$('.my-button').on('click', function(e) {
  // .my-buttonがクリックされると実行される
  \$(e.target)
    .next()
    .css({ 'background-color': '#ff6666' });
});

`,
},
vabemuy:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スライダー（カルーセル）</title>
  
  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
  
  <!-- SlickのCSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css">
  
</head>
<body>
  
  <!-- カルーセル -->
  <div class="carousel">
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_1.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_2.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_3.png" alt=""></div>
  </div>  

  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- SlickのJS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

</body>
</html>
`,
css:`
img {
  max-width: 100%;
  height: auto;
}
`,
javascript:`
// Slickリファレンス
// https://kenwheeler.github.io/slick/

\$('.carousel').slick({  
  autoplay: true, // 自動再生
  autoplaySpeed: 2000, // 自動再生の速さ、単位はミリ秒
  arrows: false, // 左右のナビゲーションを無効
  // dots: true, // ドットを表示
  fade: true, // フェードで切り替え
});
`,
},
vegoper:{html:`
<table>
  <thead>
    <tr>
      <th>#</th>
      <th>名前</th>
      <th>メールアドレス</th>
      <th>電話番号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>煌木 太郎</td>
      <td>taro.kirameki@example.com</td>
      <td>09011112222</td>
    </tr>
    <tr>
      <th>2</th>
      <td>煌木 次郎</td>
      <td>jiro.kirameki@example.com</td>
      <td>09033334444</td>
    </tr>
    <tr>
      <th>3</th>
      <td>煌木 花子</td>
      <td>hanako.kirameki@example.com</td>
      <td>09055556666</td>
    </tr>
  </tbody>
</table>

`,
},
verereb:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="parent">
    <p class="child">もともとの要素</p>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.child {
  cursor: pointer;
}
`,
javascript:`
// もともとの要素にイベントハンドラを登録する
\$('.child').on('click', () => {
  console.log('.childのイベントハンドラ');
});

// DOM要素を生成する
const \$newElement = \$('<p>', {
  class: 'child',
  text: '追加した要素',
});

// 生成したDOM要素にイベントハンドラを登録する
\$newElement.on('click', () => {
  console.log('追加した.childのイベントハンドラ');
});

\$('#parent').append(\$newElement);
`,
},
vetinus:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div class="my-2"><a href="#" class="btn">ボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-primary normal-case">primaryボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-secondary normal-case">secondaryボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-accent normal-case">accentボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-info normal-case">infoボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-success normal-case">successボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-warning normal-case">warningボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-error normal-case">errorボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-ghost normal-case">ghostボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-link normal-case">linkボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-outline normal-case">outlineボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-active normal-case">activeボタン</a></div>
    <div class="my-2"><a href="#" class="btn btn-disabled normal-case">disabledボタン</a></div>
</body>

</html>
`,
},
vexadij:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference>すごいね！</button-preference>
  </div>
  <!--<script src="main.js"></script>-->
  <!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const ButtonPreference = {
  data() {
    return { count: 0 }
  },
  methods: {
    countUp() {
      this.count += 1
    },
  },
  template: \`
    <button v-on:click="countUp">
      {{ count }} <slot></slot>
    </button>
  \`,
}

new Vue({
  el: '#example',
  components: {
    'button-preference': ButtonPreference,
  },
})
`,
},
vikebox:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div class="my-click">クリックしてください</div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.my-click {
  cursor: pointer;
}
`,
javascript:`
\$('.my-click').on('click', { test: 'テストデータ' }, function(e) {
  console.log('追加したデータ：', e.data.test);
});
`,
},
vikuvit:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <button type="button" id="my-button">押して！</button>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('my-button');

function onClick() {
  alert('押された！');
}

// ボタンをクリックすると、イベントリスナーが実行される
button.addEventListener('click', onClick);
`,
},
vixicir:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
css:`
#box {
  width: 200px;
  height: 200px;
  line-height: 200px;
  background-color: #ccc;
  text-align: center;
}
`,
javascript:`
const box = document.getElementById('box');

// マウスが乗った時
box.addEventListener(
  'mouseenter',
  // e.targetはイベント発生元の要素（<div id="box">）を表す
  (e) => {
    e.target.textContent = 'マウスが乗った！';
  }
);

// マウスが離れた時
box.addEventListener(
  'mouseleave',
  (e) => {
    e.target.textContent = 'マウスが離れた！';
  }
);
`,
},
vizataf:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <ul class="tabs-menu">
      <li
        v-bind:class="{active: activeTab === 'tabs-1'}"
        v-on:click="activeTab = 'tabs-1'"
      >
        タブ1
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-2'}"
        v-on:click="activeTab = 'tabs-2'"
      >
        タブ2
      </li>
      <li
        v-bind:class="{active: activeTab === 'tabs-3'}"
        v-on:click="activeTab = 'tabs-3'"
      >
        タブ3
      </li>
    </ul>
    <section class="tabs-content">
      <section v-show="activeTab === 'tabs-1'">
        <p>タブ1の内容が入ります。</p>
      </section>
      <section v-show="activeTab === 'tabs-2'">
        <p>タブ2の内容が入ります。</p>
      </section>
      <section v-show="activeTab === 'tabs-3'">
        <p>タブ3の内容が入ります。</p>
      </section>
    </section>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
body {
  color: #3f4548;
}

/* ulのデフォルトスタイルを消去 */
.tabs-menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* タブの基本スタイル */
.tabs-menu li {
  display: block;
  float: left;
  margin-right: 8px;
  margin-bottom: -1px;
  padding: 10px 20px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  border-radius: 4px 4px 0 0;
  color: #557f95;
  text-decoration: none;

  /* 各プロパティをふわっと変える演出 */
  transition: all 0.15s;
}

/* タブにマウスを乗せたらカーソルの形を変える */
.tabs-menu li:hover {
  cursor: pointer;
}

/* 非選択のタブにマウスを乗せたら色を変える */
.tabs-menu li:not(.active):hover {
  border-color: #f0f0f0 #f0f0f0 #999;
  background-color: #f0f0f0;
}

/* 選択中のタブ */
.tabs-menu .active {
  border-color: #999 #999 transparent #999;
  background-color: #fff;
  color: #3f4548;
}

/* タブコンテンツ表示エリア */
.tabs-content {
  clear: both;
  border: 1px solid #999;
  border-radius: 0 4px 4px 4px;
  padding: 10px;
}
`,
javascript:`
new Vue({
  el: '#example',
  data: {
    activeTab: 'tabs-1',
  },
});
`,
},
voliner:{html:`
<div></div>
`,
css:`
div {
 width: 300px;
    height: 300px;
    background-color: #ffffff;
}
`,
},
vomanoz:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <dl>
            <dt>HTML</dt>
            <dd>Webページにおける文書（情報のまとめ役）を担当します。</dd>
            
            <dt>CSS</dt>
            <dd>Webページにおけるデザイン（見た目を整える役）を担当します。</dd>
            
            <dt>JavaScript</dt>
            <dd>HTMLやCSSへ動的な操作をするために使います。</dd>
        </dl>
    </body>
</html>
`,
},
votafis:{html:`
<div></div>
`,
css:`
div {
    width: 200px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
    background-position: 50% 20%;
}
`,
},
vovetup:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>JS Bin</title>
</head>
<body>
  
  <p>始端寄せ（左寄せ）※初期値</p>
  <div class="container-one">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
    
  <p>終端寄せ（右寄せ）</p>
  <div class="container-two">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>

  <p>中央寄せ</p>
  <div class="container-three">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>

  <p>両端揃えの均等配置</p>
  <div class="container-four">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>

  <p>余白を均等配置（両端の余白はボックス同士の余白の半分）</p>
  <div class="container-five">
    <div class="item">1</div>
    <div class="item">2</div>
    <div class="item">3</div>
    <div class="item">4</div>
  </div>
    
    
</body>
</html>
`,
css:`
.item {
  width: 10%;
  height: 50px;
  padding: 10px;
  margin: 10px;
  background: #FFE966;
  box-sizing: border-box;
}

.container-one {
  display: flex;
  justify-content: flex-start;
}

.container-two {
  display: flex;
  justify-content: flex-end;
}

.container-three {
  display: flex;
  justify-content: center;
}

.container-four {
  display: flex;
  justify-content: space-between;
}

.container-five {
  display: flex;
  justify-content: space-around;
}
`,
},
vozanel:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>デベロッパーツールレンダリングフォント操作用デモページ</title>
</head>
<body>
  
  <p>1行目のテキストです。</p>
  <p class="noto-sans">2行目のテキストです。</p>

</body>
</html>
`,
css:`

/* Google fontsの読み込み */
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap');


.noto-sans {
  font-family: 'Noto Sans JP', sans-serif;  
}
`,
},
vujukod:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <button-preference></button-preference>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.component('button-preference', {
  template: '<button>いいね！</button>',
});

new Vue({
  el: '#example',
});
`,
},
vuripux:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <table border="1">
            <thead>
                <tr>
                    <th>#</th>
                    <th>名前</th>
                    <th>メールアドレス</th>
                    <th>電話番号</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>1</th>
                    <td>煌木 太郎</td>
                    <td>taro.kirameki@example.com</td>
                    <td>09011112222</td>
                </tr>
                <tr>
                    <th>2</th>
                    <td>煌木 次郎</td>
                    <td>jiro.kirameki@example.com</td>
                    <td>09033334444</td>
                </tr>
                <tr>
                    <th>3</th>
                    <td>煌木 花子</td>
                    <td>hanako.kirameki@example.com</td>
                    <td>09055556666</td>
                </tr>
            </tbody>
        </table>
    </body>
</html>
`,
},
vutibih:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
    background-repeat: no-repeat;
    background-size: contain;
}
`,
},
vuyobun:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>aspect-ratio テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <!-- visual01.pngは幅800px,高さ300px -->
  <div id="logo"></div>

  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#logo {
  background-image: url("https://demo.techacademy.jp/website-creation/gakko/images/visual01.png");
  aspect-ratio: 800 / 300;
  background-size: cover;
}
`,
},
wacekes:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/triangle.png");
    background-repeat: no-repeat;
    background-size: 100% 100%;
}
`,
},
wafaruq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="outer">
    親要素
    <div id="inner">
      子要素
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#inner {
  margin: 20px;
}
`,
javascript:`
\$('#inner')
  .parent()
  .css({ 'background-color': 'skyblue' });
`,
},
webelej:{html:`
<ol>
  <li>順序ありリスト1</li>
  <li>順序ありリスト2</li>
  <li>順序ありリスト3</li>
  <li>順序ありリスト4</li>
</ol>

`,
},
wejelok:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="outer">
    親要素
    <div id="inner">
      子要素
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#inner {
  margin: 20px;
}
`,
javascript:`
\$('#outer')
  .children()
  .css({ 'background-color': 'skyblue' });
`,
},
wekesub:{html:`
<p class="font-size-16">16pxの文字サイズ</p>
<p class="font-size-20">20pxの文字サイズ</p>
<p class="font-size-24">24pxの文字サイズ</p>
<p class="font-size-28">28pxの文字サイズ</p>
<p class="font-size-32">32pxの文字サイズ</p>

`,
css:`
.font-size-16 {
  font-size: 16px;
  /* font-size: 1rem; */ /* 16pxと同じフォントサイズ */
}

.font-size-20 {
  font-size: 20px;
  /* font-size: 1.25rem; */　/* 20pxと同じフォントサイズ */
}

.font-size-24 {
  font-size: 24px;
  /* font-size: 1.5rem; */　/* 24pxと同じフォントサイズ */
}

.font-size-28 {
  font-size: 28px;
  /* font-size: 1.75rem; */　/* 28pxと同じフォントサイズ */ 
}

.font-size-32 {
  font-size: 32px;
  /* font-size: 2rem; */　/* 32pxと同じフォントサイズ */   
}
`,
},
weropov:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body>
    <nav class="navbar bg-base-200">
        <!-- ホームへ戻るリンク。ブランドロゴなどを置く。 -->
        <a class="btn btn-ghost normal-case text-xl">P&amp;K</a>

        <!-- メニュー項目 -->
        <ul class="menu menu-horizontal p-0">
            <li><a href="#" class="active">子犬</a></li>
            <li><a href="#">子猫</a></li>
            <li><a href="#">お問い合わせ</a></li>
        </ul>
    </nav>
</body>

</html>
`,
},
wifuzop:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <ul id="example">
    <li
      v-for="(character, key) in characters"
      v-bind:key="key"
    >
      {{ key }}：{{ character }}
    </li>
  </ul>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
const app = new Vue({
  el: '#example',
  data: {
    characters: {
      hero: '桃太郎',
      friend: 'イヌ',
      enemy: '鬼',
    },
  },
});
`,
},
wigisos:{html:`
<p>下に書かれたものほど優先</p>
`,
css:`
p {
    color: red;
}

p {
    color: green;
}

`,
},
wigowem:{html:`
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スライダー（カルーセル）</title>
  
  <!-- SlickのCSS -->
  <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css">
  
</head>
<body>
  
  <!-- カルーセル -->
  <div class="carousel">
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_1.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_2.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_3.png" alt=""></div>
  </div>  

  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- SlickのJS -->
  <script src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script> 

</body>
</html>
`,
css:`
img {
  max-width: 100%;
  height: auto;
}
`,
javascript:`
\$('.carousel').slick({
  autoplay: true, // 自動再生
  autoplaySpeed: 5000, // 自動再生の速さ、単位はミリ秒
  arrows: false, // 左右のナビゲーションを無効にする
});
`,
},
wimusoc:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>2カラムレイアウト（Flexbox）</title>
</head>
<body>

    <header>ヘッダー</header>
    
    <main>
        <article>記事コンテンツ</article>
        <aside>サイドバー</aside>
    </main>
    
    <footer>フッター</footer>
    
</body>
</html>
`,
css:`
header {
  padding-bottom: 40px;
  background-color: #f4769a;
  border: 2px solid #000;
}

main {
  display: flex;
  padding: 20px;
  background-color: #eaeaea;
  border: 2px solid #000;
}

article {
  width: 70%;
  padding-bottom: 40px;
  background-color: #ffe966;
  border: 2px solid #000;
}

aside {
  width: 30%;
  background-color: #6df2c9;
  border: 2px solid #000;
}

footer {
  padding-bottom: 40px;
  background-color: #2f92dd;
  border: 2px solid #000;
}
`,
},
wipurif:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>通常の文章</p>
      
        <p class="important">importantな文章</p>

        <div class="normal">
          normalなdivの文章
          <p>normalなdivの中のp要素の文章</p>
        </div>
    </body>
</html>
`,
css:`
p {
  font-size: 10px;
}

p.important {
  font-size: 20px;
}

div.normal {
  font-size: 10px;
}

div.normal p {
  font-size: 200%;
}


`,
},
wocevap:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きリスト横並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Voice-->
    <section class="voice">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="100" height="100">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="100" height="100">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="100" height="100">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
               alt="ラップトップ" width="100" height="100">
          <div>
            <h2 class="voice-item-title">タイトルが入ります</h2>
            <p class="voice-item-description">テキストが入ります</p>
          </div>
        </a>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* コンテナ */
.container {
  display: flex;
  flex-wrap: wrap;
  column-gap: 2.5rem;
  row-gap: 2.5rem;
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Voice
------------------------------------------ */

/* アイテム */
.voice-item {
  display: flex;
  align-items: center;
  column-gap: 1rem;
  width: calc((100% - 2.5rem) / 2);
  padding: .75rem;
  background-color: #ffd166;
}

/* タイトル */
.voice-item-title {
  margin-bottom: .5rem;
  font-size: 1.25rem;
}

/* テキスト */
.voice-item-description {
  font-size: .875rem;
}

`,
},
wohunet:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <h1>見出しの文章</h1>
        <p>通常の文章</p>
    </body>
</html>
`,
css:`
html {
    font-size: 62.5%;
}

h1 {
    font-size: 2.4rem;
}

`,
},
wokorex:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>ハンバーガーメニュー</title>
</head>
<body>
  
  <div class="hamburger">
    <button type="button" class="hamburger-button">MENU</button>
    <div class="hamburger-content">
      <a href="#">メニュー1</a><br>
      <a href="#">メニュー2</a><br>
      <a href="#">メニュー3</a>
    </div>
  </div>
  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  

</body>
</html>
`,
css:`
/* ハンバーガーメニュー */
.hamburger {
  margin: 0;
  border: 1px solid #ccc;
  padding: 12px 6px;
}

/* ハンバーガーメニューのコンテンツ部分 */
.hamburger-content {
  display: none; /* 初期状態では非表示 */
  margin-top: 10px;
}
`,
javascript:`
// MENUボタンをクリックしたら
\$('.hamburger-button').on('click', function(){
  
  // .hamburger-contentを取得
  var content = \$('.hamburger-content');
  
  // .hamburger-contentを表示・非表示を繰り返す
  content.slideToggle();

});
`,
},
wowehid:{html:`
<p>50%と10pxを足した横幅を指定</p>
<div class="box-1"></div>
<hr>
<p>100%から100pxを引いた横幅を指定</p>
<div class="box-2"></div>
<hr>
<p>100%から10pxを引いた横幅の半分を指定</p>
<div class="box-3"></div>
<hr>

`,
css:`
div {
  border: 2px solid #000;
}

.box-1 {
  width: calc(50% + 10px);
  height: 50px;
}

.box-2 {
  width: calc(100% - 100px);
  height: 50px;  
}

.box-3 {
  width: calc((100% - 10px) / 2);
  height: 50px;
}
`,
},
wupusev:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>文章</p>
        <div>
          <article>
            <p>div > article > pの文章</p>
          </article>
        </div>
    </body>
</html>
`,
css:`
div article p {
  color: red;
}
`,
},
wurajac:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>リスト - ニュース</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- ニュース -->
    <section class="news">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="news-item">
          <div class="news-item-header">
            <span class="news-item-header-date">2022.12.31</span>
            <span class="news-item-header-badge">カテゴリ</span>
          </div>
          <a href="#" class="news-item-text">ニューステキストが入りますニューステキストが入りますニューステキストが入ります</a>
          <p class="news-item-text"></p>
        </div>
        <!-- アイテム -->
        <div class="news-item">
          <div class="news-item-header">
            <span class="news-item-header-date">2022.12.31</span>
            <span class="news-item-header-badge">カテゴリ</span>
          </div>
          <a href="#" class="news-item-text">ニューステキストが入りますニューステキストが入りますニューステキストが入ります</a>
          <p class="news-item-text"></p>
        </div>
        <!-- アイテム -->
        <div class="news-item">
          <div class="news-item-header">
            <span class="news-item-header-date">2022.12.31</span>
            <span class="news-item-header-badge">カテゴリ</span>
          </div>
          <a href="#" class="news-item-text">ニューステキストが入りますニューステキストが入りますニューステキストが入ります</a>
          <p class="news-item-text"></p>
        </div>
        <!-- アイテム -->
        <div class="news-item">
          <div class="news-item-header">
            <span class="news-item-header-date">2022.12.31</span>
            <span class="news-item-header-badge">カテゴリ</span>
          </div>
          <a href="#" class="news-item-text">ニューステキストが入りますニューステキストが入りますニューステキストが入ります</a>
          <p class="news-item-text"></p>
        </div>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #000;
  text-decoration: none;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* ニュース 
------------------------------------------ */

.news-item {
  padding-bottom: .75rem;
  border-bottom: 1px solid #ccc;
}

.news-item:not(:last-child) {
  margin-bottom: .75rem;
}

.news-item-header {
  margin-bottom: .75rem;
}

/* バッジ */
.news-item-header-badge {
  padding: .25rem .5rem;
  margin-left: 1rem;
  font-size: .875rem;
  color: #fff;
  background-color: #040000;
}

`,
},
wurulun:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box">重要な文章</div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').css({
  'color': '#ffffff',
  'background-color': '#000000',
});
`,
},
xavarap:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きリストピル型縦並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Voice-->
    <section class="voice">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>
        <!-- アイテム -->
        <a href="#" class="voice-item">
          <div class="voice-item-body">
            <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/laptop.jpg"
                 alt="ラップトップ" width="80" height="80" class="img-circle">
            <div class="voice-item-body-text">
              <h2 class="voice-item-title">タイトル</h2>
              <p class="voice-item-description">テキストが入ります</p>
            </div>
          </div>
          <i class="voice-item-icon bi bi-arrow-right"></i>
        </a>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #040000;
  text-decoration: none;
}

/* 画像の円形 */
.img-circle {
  border-radius: 50%;;
}

/* コンテナ */
.container {
  display: flex;
  row-gap: 1.25rem;
  flex-direction: column;
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Voice
------------------------------------------ */

/* アイテム */
.voice-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: .75rem 1.25rem .75rem 1rem;
  color: #fff;
  background-color: #54bbef;
  border-radius: 3.75rem;
}

.voice-item:hover {
  background-color: #26547c;
  transition: all 0.3s ease;
}


/* ボディ */
.voice-item-body {
  display: flex;
  align-items: center;
}

/* テキスト */
.voice-item-body-text {
  margin-left: 1rem;
}

/* タイトル */
.voice-item-title {
  margin-bottom: .5rem;
  font-size: 1.25rem;
}

/* 説明文 */
.voice-item-description {
  font-size: .875rem;
}

/* 矢印アイコン */
.voice-item-icon {
  font-size: 1.75rem;
}

`,
},
xebeqis:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウトパターン - ネガティブマージン</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- About -->
    <section class="about">
      <div class="about-image"></div>
      <div class="about-body">
        <h2 class="about-body-title">タイトルが入ります</h2>
        <p class="about-body-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
      </div>
    </section>

  </body>
</html>
`,
css:`
/* About
------------------------------------------ */

/* 背景画像 */
.about-image {
  height: 18.75rem;
  background-image: url("https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg");
  background-size: cover;
}

.about-body {
  max-width: 60rem;
  padding: 5rem;
  margin-top: -5rem;
  margin-right:  auto;
  margin-left:  auto;
  background-color: #fff;
  box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%);
}

.about-body-title {
  margin-bottom: 3.75rem;
  font-size: 2rem;
  text-align: center;
}

.about-body-text {
  font-size: 1.5rem;
}

`,
},
xemajok:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a href="am.html">おはよう</a>
  <a href="am.html">おはよう</a>
  <a href="pm.html">おはよう</a>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('[href="pm.html"]').text('こんにちは！');
`,
},
xequyib:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きカード縦並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Feature -->
    <section class="feature">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* 画像 */
img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

/* コンテナ */
.container {
  display: flex;
  flex-direction: column;
  row-gap: 1.75rem;
  max-width: 67.5rem;
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  margin: 5rem auto;
}


/* Feature
------------------------------------------ */

/* アイテム */
.feature-item {
  text-align: center;
  border: 1px solid #ccc;
  border-radius: .5rem;
}

/* 画像 */
.feature-item-image {
  border-top-right-radius: .5rem;
  border-top-left-radius: .5rem;
}

/* ボディ */
.feature-item-body {
  padding: 1.5rem;
}

/* タイトル */
.feature-item-title {
  margin-bottom: .75rem;
  font-size: 1.25rem;
}

/* テキスト */
.feature-item-text {
  margin-bottom: 1.5rem;
  font-size: .875rem;
  text-align: left;
}

/* ボタン */
.feature-item-button {
  display: inline-block;
  min-width: 10rem;
  padding: .5rem 2.5rem;
  font-weight: 700;
  color: #040000;
  border: 1px solid #ccc;
  border-radius: 1.5rem;
}

.feature-item-button:hover {
  color: #fff;
  background-color: #e47292;
  border: 1px solid #e47292;
}

`,
},
xerukat:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <p>
    <input type="radio" name="country" value="日本">日本
    <input type="radio" name="country" value="海外">海外
  </p>
  <p>
    <select name="prefecture">
      <option value="">県名を選択</option>
      <option value="茨城県">茨城県</option>
      <option value="栃木県">栃木県</option>
      <option value="群馬県">群馬県</option>
      <option value="埼玉県">埼玉県</option>
      <option value="千葉県">千葉県</option>
      <option value="東京都">東京都</option>
      <option value="神奈川県">神奈川県</option>
    </select>
  </p>
  <p>
    <input type="checkbox" name="sports" value="野球">野球
    <input type="checkbox" name="sports" value="サッカー">サッカー
    <input type="checkbox" name="sports" value="バスケットボール">バスケットボール
    <input type="checkbox" name="sports" value="ゴルフ">ゴルフ
  </p>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
// countryのラジオボタンで選択された要素を表示
\$('input[name="country"]').on('change', function(e) {
  var value = \$(e.target).val();
  \$('.box').text(value);
});

// prefectureのセレクトボックスで選択された要素を表示
\$('select[name="prefecture"]').on('change', function(e) {
  var value = \$(e.target).val();
  \$('.box').text(value);
});

// sportsのチェックボックスでチェックされた要素を表示
\$('input[name="sports"]').on('change', function(e) {
  // 空の配列を用意
  var check_sports = [];
  
  // チェックされている要素ごとに、check_sportsへ値を追加
  \$('input[name="sports"]:checked').each(function(index, element) {
    check_sports[index] = \$(element).val();
  });
  
  // check_sportを表示
  \$('.box').text(check_sports);
 
});
`,
},
xiluwim:{html:`
<div class="box">ボックス</div>
<div class="box">ボックス</div>
<div class="box">ボックス</div>
`,
css:`
.box {
    display: inline;
    width: 50px;
    height: 50px;
    padding: 5px;
    border: 2px solid #000;
}
`,
},
xinalaz:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>テスト</title>
</head>

<body>
  <form>
    名前：<input type="text" name="username" required><br>
    <button type="submit">送信</button>
  </form>

</body>

</html>
`,
},
xiniziq:{html:`
<p>:first-child, :last-child</p>
<ul class="first-last">
  <li>リスト1</li>
  <li>リスト2</li>
  <li>リスト3</li>
</ul>

<p>:nth-child、○番目の要素</p>
<ul class="nth-child">
  <li>リスト1</li>
  <li>リスト2</li>
  <li>リスト3</li>
  <li>リスト4</li>
  <li>リスト5</li>
  <li>リスト6</li>
  <li>リスト7</li>
</ul>

<p>:nth-child、奇数、偶数の要素</p>
<ul class="odd-even">
  <li>リスト1</li>
  <li>リスト2</li>
  <li>リスト3</li>
  <li>リスト4</li>
  <li>リスト5</li>
</ul>


`,
css:`
/* 一番最初の要素 */
.first-last li:first-child{
  color: red;
}

/* 一番最後の要素 */
.first-last li:last-child{
  color: orange;
}

/* 2番目の要素 */
.nth-child li:nth-child(2){
  color:blue;
}

/* 3倍の整数に該当する順番の要素 */
.nth-child li:nth-child(3n){
  color: gray;
}

/* 奇数の要素、oddの代わりに2n+1と入れても同じ */
.odd-even li:nth-child(odd){
  background: yellow;
}

/* 偶数の要素、evenの代わりに2nと入れても同じ */
.odd-even li:nth-child(even){
  background: skyblue;
}

`,
},
xirezoy:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <div id="box"></div>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('#box').text('Hello jQuery!');
\$('#box').text('こんにちは、jQueryの世界へ！');
\$('#box').text('Web制作は楽しい！！');
`,
},
xivelak:{html:`
<div class="container">
  <div class="fixed">fixedで固定した要素</div>    
  <p class="text">下方向にスクロールしたときにfixedで固定した要素が上部固定になります。</p>
</div>

`,
css:`
.container {
  height: 1000px;  
}

.fixed {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 80px;
  color: #fff;
  background-color: #000;
}

.text {
  margin-top: 150px;
}
`,
},
xiyelin:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>スライダー（カルーセル）</title>
  
  <!-- CSSリセット -->
  <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
  
  <!-- SlickのCSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css">
  
</head>
<body>
  
  <!-- カルーセル -->
  <div class="carousel">
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_1.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_2.png" alt=""></div>
    <div><img src="https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/jquery/carousel_3.png" alt=""></div>
  </div>  

  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- SlickのJS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

</body>
</html>
`,
css:`
img {
  max-width: 100%;
  height: auto;
}
`,
javascript:`
// Slickリファレンス
// https://kenwheeler.github.io/slick/

\$('.carousel').slick({  
  autoplay: true, // 自動再生
  autoplaySpeed: 2000, // 自動再生の速さ、単位はミリ秒
  arrows: false, // 左右のナビゲーションを無効
  // dots: true, // ドットを表示
  fade: true, // フェードで切り替え
});
`,
},
xohaden:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <carousel>
      <slide><span class="label">スライド１の内容</span></slide>
      <slide><span class="label">スライド２の内容</span></slide>
      <slide><span class="label">スライド３の内容</span></slide>
      <slide><span class="label">スライド４の内容</span></slide>
    </carousel>
  </div>
  <script src="https://ssense.github.io/vue-carousel/js/vue-carousel.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.VueCarousel-slide {
  position: relative;
  min-height: 300px;
  text-align: center;
  font-size: 24px;
  background-color: skyblue;
  color: #fff;
}

.label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
`,
javascript:`
new Vue({
  el: '#example',
  components: {
    carousel: VueCarousel.Carousel,
    slide: VueCarousel.Slide,
  },
});
`,
},
xojipiw:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>横並びのテスト（CSS Grid）</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="box">
    <div class="box-item bg1">1番目</div>
    <div class="box-item bg2">2番目</div>
    <div class="box-item bg3">3番目</div>
    <div class="box-item bg4">4番目</div>
    <div class="box-item bg5">5番目</div>
    <div class="box-item bg6">6番目</div>
  </div>

  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#box {
  display: grid;
  align-items: center;
  grid-template-columns: repeat(auto-fit, minmax(100px, auto));
  grid-gap: 10px;
}

.bg1 {
  background-color: #f00;
  height: 30px;
}

.bg2 {
  background-color: #0f0;
  height: 50px;
}

.bg3 {
  background-color: #00f;
  height: 150px;
}

.bg4 {
  background-color: #ff0;
  height: 100px;
}

.bg5 {
  background-color: #0ff;
  height: 50px;
}

.bg6 {
  background-color: #f0f;
  height: 100px;
}
`,
},
xotoson:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <nav>
            <ul>
                <li><a href="#">TOP</a></li>
                <li><a href="#">ABOUT</a></li>
                <li><a href="#">MAP</a></li>
                <li><a href="#">BLOG</a></li>
                <li><a href="#">CONTACT</a></li>
            </ul>
        </nav>
    </body>
</html>
`,
},
xuxukoq:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="r">div1</div>
        <div class="g">div2</div>
        <div class="b">div3</div>

        <span class="r">span1</span>
        <span class="g">span2</span>
        <span class="b">span3</span>
    </body>
</html>
`,
css:`
.r { background-color: pink; }
.g { background-color: palegreen; }
.b { background-color: skyblue; }
`,
},
yaqoqum:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-in">フェードイン</button>
  <button type="button" class="my-button-out">フェードアウト</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  display: none;
  width: 60px;
  height: 60px;
  background-color: #666;
}
`,
javascript:`
var box = \$('.box');

\$('.my-button-in').on('click', function() {
  box.fadeIn();
});

\$('.my-button-out').on('click', function() {
  box.fadeOut();
});
`,
},
yayimub:{html:`
<div class="wrapper">
  <div class="normal box">normal</div>
  <div class="radius box">radius<br>10px</div>
  <div class="circle box">radius<br>50%</div>
</div>
`,
css:`
.wrapper {
  display: table;
  border-spacing: 15px 0;
  border-collapse: separate;
}
.wrapper .box {
  display: table-cell;
  width: 80px;
  height: 80px;
  vertical-align: middle;
  text-align: center;
}
.normal {
  background-color: #bce2e8;
}
.radius {
  background-color: #f8e58c;
  border-radius: 10px;
}
.circle {
  background-color: #f6bfbc;
  border-radius: 50%;
}
`,
},
yecomop:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <div id="wrapper">
    wrapper-header
    <div id="box">
      box-header
      <div id="inner">
        inner-header
        <div id="inside">inside</div>
        inner-footer
      </div>
      box-footer
    </div>
    wrarpper-footer
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
#box,
#inner,
#inside {
  margin: 20px;
}
`,
javascript:`
\$('#inside').css({
  'background-color': 'yellow',
});

\$('#inside')
  .parent()
  .css({
    'background-color': 'purple',
  });

\$('#inside')
  .parent()
  .parent()
  .css({
    'background-color': 'tomato',
  });

\$('#inside')
  .parent()
  .parent()
  .parent()
  .css({
    'background-color': 'skyblue',
  });
`,
},
yedelan:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <p>
      <button type="button" id="my-button">くじを引く</button>
    </p>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const button = document.getElementById('my-button');
const box = document.getElementById('box');

button.addEventListener('click', () => {
  // 0以上1未満のランダムな数値をnum変数に代入する
  const num = Math.random();

  if (num >= 0.5) {
    // numが0.5以上の場合
    box.innerHTML = \`\${num}<br>当たり！\`;
  } else {
    // numが0.5未満の場合
    box.innerHTML = \`\${num}<br>ハズレ…\`;
  }
});
`,
},
yigipah:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box">
            div要素内
        </div>
    </body>
</html>
`,
css:`
.box {
    margin-top: 50px;
    border-left: 5px solid pink;
    padding: 10px 20px 30px 40px;
    width: 100px;
    height: 100px;
    background-color: skyblue;
}
`,
},
yiruduy:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
      <p>普通の文章</p>
      <p id="important">id属性が指定されたp要素</p>
    </body>
</html>
`,
css:`
#important {
  color : blue;
}
`,
},
yisomec:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>タブ</title>
  
  <!-- smartTabのCSS -->
  <link href="https://cdn.jsdelivr.net/npm/jquery-smarttab@3.1.1/dist/css/smart_tab_all.min.css" rel="stylesheet" type="text/css" />
</head>
<body>

  <div id="smarttab" class="tab">
    <ul class="nav">
      <li><a class="nav-link" href="#tab-1">タブ1</a></li>
      <li><a class="nav-link" href="#tab-2">タブ2</a></li>
      <li><a class="nav-link" href="#tab-3">タブ3</a></li>
      <li><a class="nav-link" href="#tab-4">タブ4</a></li>
    </ul>
 
    <div class="tab-content">
      <div id="tab-1" class="tab-pane" role="tabpanel">
        タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。タブ1の内容が入ります。
      </div>
      <div id="tab-2" class="tab-pane" role="tabpanel">
        タブ2の内容が入ります。
      </div>
      <div id="tab-3" class="tab-pane" role="tabpanel">
        タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。タブ3の内容が入ります。
      </div>
      <div id="tab-4" class="tab-pane" role="tabpanel">
        タブ4の内容が入ります。
      </div>
    </div>
  </div>
  
  <!-- jQuery -->  
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- smartTabのJS -->
  <script src="https://cdn.jsdelivr.net/npm/jquery-smarttab@3.1.1/dist/js/jquery.smartTab.min.js" type="text/javascript"></script>
</body>
</html>
`,
css:`
/* タブ1、タブ2...下のボックスシャドウを無効にする */
/*
.st-theme-default>.nav {
  box-shadow: none !important;
}
*/

/* 選択中のタブの文字色を変更 */
.st-theme-default>.nav .nav-link.active {
  color: #000!important;
}

/* 選択中のタブの下線の色を変更 */
.st-theme-default>.nav .nav-link.active::after {
  background: #000!important;
}
`,
javascript:`
\$('#smarttab').smartTab();
`,
},
yituxiy:{html:`
<p>線を指定する</p>
<div class="border"></div>
<hr>
<p>上の線を指定する</p>
<div class="border-top"></div>
<hr>
<p>右の線を指定する</p>
<div class="border-right"></div>
<hr>
<p>下の線を指定する</p>
<div class="border-bottom"></div>
<hr>
<p>左の線を指定する</p>  
<div class="border-left"></div>

`,
css:`
div {
  width: 100px;
  height: 100px;
  background-color: #f1f1f1;
}

.border {
  border: 2px solid #000000;  
}

.border-top {
  border-top: #000000 solid 2px;  
}

.border-right {
  border-right: #000000 solid 2px;    
}

.border-bottom {
  border-bottom: #000000 solid 2px;    
}

.border-left {
  border-left: #000000 solid 2px;    
}
`,
},
yogisit:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>リスト - SNSアイコン</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- コンテナ -->
    <div class="container">

      <!-- SNSリスト -->
      <ul class="sns-list">
        <li>
          <a href="https://www.instagram.com/?hl=en" target="_blank" class="sns-list-item"><i
                                                                                              class="bi bi-instagram"></i></a>
        </li>
        <li>
          <a href="https://www.youtube.com/" target="_blank" class="sns-list-item"><i class="bi bi-youtube"></i></a>
        </li>
        <li>
          <a href="https://www.facebook.com/" target="_blank" class="sns-list-item"><i class="bi bi-facebook"></i></a>
        </li>
        <li>
          <a href="https://twitter.com/?lang=en" target="_blank" class="sns-list-item"><i class="bi bi-twitter"></i></a>
        </li>
      </ul>

    </div>

  </body>
</html>
`,
css:`
/* リンク */
a {
  color: #000;
}

a:hover {
  color: #fff;
}

/* リスト */
li {
  list-style: none;
}

/* コンテナ */
.container {
  max-width: 67.5rem;
  margin: 5rem auto;
}

/* SNSリスト */
.sns-list {
  display: flex;
  column-gap: 2rem;
  font-size: 1.25rem;
}

.sns-list-item {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  background-color: #ccc;
  border-radius: 50%;
}

.sns-list-item:hover {
  background-color: #040000;
  transition: all 0.3s ease;
}
`,
},
yomoje:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <header>
            ヘッダー
        </header>
        <div id="wrapper">
            <div id="main">
                メイン
            </div>
            <aside>
                サイドバー
            </aside>
        </div>
        <footer>
            フッター
        </footer>
    </body>
</html>
`,
css:`
header {
    height: 50px;
    background-color: #ffdddd;
}
#wrapper {
    height: 100px;
}
#main {
    width: 60%;
    background-color: #ddffdd;
}
aside {
    width: 30%;
    background-color: #ffddff;
}
footer {
    height: 50px;
    background-color: #ddddff;
}
`,
},
yufakil:{html:`
<a href="https://techacademy.jp/"><img src="https://techacademy.jp/_nuxt/img/logo-blue.5e6bcca.svg" alt="テックアカデミー" width="300"></a>

`,
},
yuqokim:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <p>こんにちは！</p>
    </body>
</html>
`,
css:`
p:before {
    content: "おはよう！"
}

p:after {
    content: "おやすみ！"
}
`,
},
yurigiv:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-anim">アニメーション</button>
  <button type="button" class="my-button-re">元に戻す</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  position: relative;
  top: 0;
  left: 0;
  width: 60px;
  height: 60px;
  background-color: #f66;
}
`,
javascript:`
const \$box = \$('.box');
const duration = 1000;

\$('.my-button-anim').on('click', () => {
  \$box.animate(
    {
      width: '200px',
      left: '200px',
    },
    duration,
  );
});

\$('.my-button-re').on('click', () => {
  \$box.animate(
    {
      width: '60px',
      left: '0px',
    },
    duration,
  );
});
`,
},
yuyeli:{html:`
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>デベロッパーツール打ち消し線確認用デモページ</title>
</head>
<body>

  <p class="text">テキスト</p>

</body>
</html>
`,
css:`
.text {
  color: #2f92dd; /* 青色 */
}

.text {
  color: #72e8a7; /* 緑色 */
}


`,
},
zapovux:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
document.getElementById('box').textContent = 'abc' + 'def';
`,
},
zaqikah:{html:`
<div></div>
`,
css:`
div {
    width: 300px;
    height: 300px;
    background-color: rgb(255, 255, 255);
}
`,
},
zatoxor:{html:`
<div></div>
`,
css:`
div {
    width: 200px;
    height: 100px;
    background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
    background-position: 200px 300px;
}
`,
},
zawiwov:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div id="wrapper">
            親要素
            <div class="box1">
                子要素1
            </div>
            <div class="box2">
                子要素2
            </div>
            <div class="box3">
                子要素3
            </div>
        </div>
    </body>
</html>
`,
css:`
#wrapper {
    display: flex;
    align-items: center;
}
.box1 {
    height: 100px;
    background-color: skyblue;
}
.box2 {
    height: 200px;
    background-color: palegreen;
}
.box3 {
    height: 50px;
    background-color: pink;
}
`,
},
zedapac:{html:`
<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>HTML/CSS</title>
    </head>
    <body>
        <div class="box1">
            div要素内1
        </div>
        <div class="box2">
            div要素内2
        </div>
    </body>
</html>
`,
css:`
.box1 {
    margin-top: 50px;
    margin-bottom: 50px;
    background-color: skyblue;
}
.box2 {
    margin-top: 30px;
    margin-bottom: 30px;
    background-color: pink;
}
`,
},
zedetej:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <button type="button" class="my-button-in">スライドダウン</button>
  <button type="button" class="my-button-out">スライドアップ</button>
  <div class="box"></div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.box {
  display: none;
  width: 200px;
  height: 200px;
  background-color: #666;
}
`,
javascript:`
const \$box = \$('.box');

\$('.my-button-in').on('click', () => {
  \$box.slideDown();
});

\$('.my-button-out').on('click', () => {
  \$box.slideUp();
});
`,
},
zedomug:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>カバー - 中央配置</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- カバー -->
    <section class="cover">
      <div class="cover-title">
        <h1 class="cover-catch">キャッチコピー</h1>
        <a href="./index.html" class="cover-button">ボタン</a>
      </div>
      <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/cover.jpg" alt="">
    </section>

  </body>
</html>
`,
css:`
img {
  max-width: 100%;
}

/* リンク */
a {
  color: #000;
  text-decoration: none;
}


/* カバー
------------------------------------------ */

.cover {
  position: relative;
}

.cover-title {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
  text-align: center;
}

.cover-catch {
  margin-bottom: 2.5rem;
  font-size: 3rem;
}

.cover-button {
  padding: .5rem 3.75rem;
  font-weight: 700;
  color: #fff;
  background-color: #26547c;
}
`,
},
zexatis:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
css:`
.bordered {
  border: 1px solid #e00;
}
`,
javascript:`
const box = document.getElementById('box');

for (let i = 0; i < 5; i++) {
  const p = document.createElement('p');

  p.textContent = 'こんにちは';
  p.setAttribute('class', 'bordered');
  box.appendChild(p);
}
`,
},
ziduwep:{html:`
<p>背景画像の大きさを数値で指定</p>
<div class="background-size-number"></div>
<hr>
<p>縦横比が保たれ、表示領域に収まる最大サイズで表示</p>
<div class="background-size-contain"></div>
<hr>
<p>縦横比が保たれ、表示領域を完全に覆う最小サイズで表示</p>
<div class="background-size-cover"></div>

`,
css:`
div {
  width: 300px;
  height: 100px;
}

.background-size-number {
  background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/triangle.png");
  background-repeat: no-repeat;
  background-size: 100% 100%;  
}

.background-size-contain {
  background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
  background-repeat: no-repeat;
  background-size: contain;
}

.background-size-cover {
  background-image: url("https://techacademy.s3-ap-northeast-1.amazonaws.com/bootcamp/webdesign/3/html-css/bg.jpg");
  background-size: cover;  
}
`,
},
zihiroz:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>1カラムレイアウト</title>
  </head>
  <body>

    <header>ヘッダー</header>

    <main>コンテンツ</main>

    <footer>フッター</footer>

  </body>
</html>
`,
css:`
header {
  padding-bottom: 40px;
  background-color: #F4769A;
  border: 2px solid #000;
}

main {
  padding-bottom: 40px;
  background-color: #FFE966;    
  border: 2px solid #000;
}

footer {
  padding-bottom: 40px;
  background-color: #2F92DD;
  border: 2px solid #000;
}
`,
},
zikidu:{html:`
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./style.css">
</head>

<body>

    <p>上揃え</p>
    <div class="container-one">
        <div class="item">短い要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">少し<br>長い<br>要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">短い要素です</div>
    </div>

    <p>下揃え</p>
    <div class="container-two">
        <div class="item">短い要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">少し<br>長い<br>要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">短い要素です</div>
    </div>

    <p>中央揃え</p>
    <div class="container-three">
        <div class="item">短い要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">少し<br>長い<br>要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">短い要素です</div>
    </div>

    <p>ベースライン揃え</p>
    <div class="container-four">
        <div class="item baseline">ベースラインの要素です</div>
        <div class="item baseline">ベースラインの要素です</div>
        <div class="item baseline">ベースラインの要素です</div>
        <div class="item baseline">ベースラインの要素です</div>
        <div class="item baseline">ベースラインの要素です</div>
    </div>

    <p>高さ揃え※初期値</p>
    <div class="container-five">
        <div class="item">短い要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">少し<br>長い<br>要素です</div>
        <div class="item">中くらいの<br>要素です</div>
        <div class="item">短い要素です</div>
    </div>

</body>

</html>
`,
css:`
.item {
  width: 20%;
  padding: 10px;
  margin: 0 10px;
  background: #FFD580;
  box-sizing: border-box;
}

.container-one {
  display: flex;
  align-items: flex-start;
  border: 1px solid #000;
}

.container-two {
  display: flex;
  align-items: flex-end;
  border: 1px solid #000;    
}

.container-three {
  display: flex;
  align-items: center;
  border: 1px solid #000;    
}

.container-four {
  display: flex;
  align-items: baseline;
  border: 1px solid #000;    
}

.container-five {
  display: flex;
  align-items: stretch;
  border: 1px solid #000;    
}

.item:nth-child(2),
.item:nth-child(4) {
  background: #FFEE99;
}

.item:nth-child(3) {
  background: #FFFCD1;
}

.baseline:nth-child(2) {
    font-size: 20px
}

.baseline:nth-child(3) {
    font-size: 32px
}

.baseline:nth-child(4) {
    font-size: 24px
}

.baseline:nth-child(5) {
    font-size: 12px
}
`,
},
zikugop:{html:`
<div class="box">ボックス</div>
<div class="box">ボックス</div>
<div class="box">ボックス</div>
`,
css:`
.box {
    display: block;
    width: 50px;
    height: 50px;
    padding: 5px;
    border: 2px solid #000;
}
`,
},
ziqisuk:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <form>
        <!-- ラジオボタン -->
        <div>性別</div>
        <div class="flex gap-2 mb-4">
            <div class="form-control items-center">
                <label for="m" class="label cursor-pointer">
                    <input type="radio" name="test1" id="m" value="m" class="radio" checked>
                    <span class="label-text">男性</span>
                </label>
            </div>
            <div class="form-control items-center">
                <label for="f" class="label cursor-pointer">
                    <input type="radio" name="test1" id="f" value="f" class="radio">
                    <span class="label-text">女性</span>
                </label>
            </div>
            <div class="form-control items-center">
                <label for="e" class="label cursor-pointer">
                    <input type="radio" name="test1" id="e" value="e" class="radio">
                    <span class="label-text">その他</span>
                </label>
            </div>
        </div>

        <!-- チェックボックス -->
        <div>好きなスポーツ</div>
        <div class="flex gap-2 mb-4">
            <div class="form-control items-center">
                <label for="baseball" class="label cursor-pointer">
                    <input type="checkbox" name="test2" id="baseball" value="baseball" class="checkbox">
                    <span class="label-text">野球</span>
                </label>
            </div>
            <div class="form-control items-center">
                <label for="football" class="label cursor-pointer">
                    <input type="checkbox" name="test2" id="football" value="football" class="checkbox">
                    <span class="label-text">サッカー</span>
                </label>
            </div>
            <div class="form-control items-center">
                <label for="basketball" class="label cursor-pointer">
                    <input type="checkbox" name="test2" id="basketball" value="basketball" class="checkbox">
                    <span class="label-text">バスケットボール</span>
                </label>
            </div>
            <div class="form-control items-center">
                <label for="golf" class="label cursor-pointer">
                    <input type="checkbox" name="test2" id="golf" value="golf" class="checkbox">
                    <span class="label-text">ゴルフ</span>
                </label>
            </div>
        </div>

        <!-- セレクトボックス -->
        <div>好きなフルーツ</div>
        <div class="form-control w-1/2 mb-4">
            <select name="test3" class="select select-bordered">
                <option disabled selected>選択してください</option>
                <option value="a">りんご</option>
                <option value="b">バナナ</option>
                <option value="g">ぶどう</option>
                <option value="k">キウイ</option>
                <option value="s">いちご</option>
            </select>
        </div>

        <!-- テキストエリア -->
        <div>ご意見</div>
        <div class="form-control w-1/2 mb-4">
            <textarea class="textarea textarea-bordered" placeholder="ご意見をご記入ください"></textarea>
        </div>
    </form>
</body>

</html>
`,
},
zisozom:{html:`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <title>レイアウト - 画像付きカード横並び</title>

    <!-- CSSリセット -->
    <link rel="stylesheet" href="https://unpkg.com/ress@4.0.0/dist/ress.min.css">
    <!-- CSS -->
    <link rel="stylesheet" href="./style.css">

  </head>
  <body>

    <!-- Feature -->
    <section class="feature">

      <!-- コンテナ -->
      <div class="container">

        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>
        <!-- アイテム -->
        <div class="feature-item">
          <img src="https://techacademy.s3.ap-northeast-1.amazonaws.com/bootcamp/first-sidejob-2/parts/drink.jpg"
               alt="ドリンク" class="feature-item-image">
          <div class="feature-item-body">
            <h2 class="feature-item-title">タイトルが入ります</h2>
            <p class="feature-item-text">テキストが入りますテキストが入りますテキストが入りますテキストが入りますテキストが入ります</p>
            <a href="#" class="feature-item-button">ボタン</a>
          </div>
        </div>

      </div>
    </section>

  </body>
</html>
`,
css:`
/* リンク */
a {
  text-decoration: none;
}

/* 画像 */
img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

/* コンテナ */
.container {
  display: flex;
  column-gap: 2.5rem;
  max-width: 67.5rem;
  margin: 5rem auto;
}


/* Feature
------------------------------------------ */

/* アイテム */
.feature-item {
  text-align: center;
  border: 1px solid #ccc;
  border-radius: .5rem;
}

/* 画像 */
.feature-item-image {
  border-top-right-radius: .5rem;
  border-top-left-radius: .5rem;
}

/* ボディ */
.feature-item-body {
  padding: 1.5rem;
}

/* タイトル */
.feature-item-title {
  margin-bottom: .75rem;
  font-size: 1.5rem;
}

/* テキスト */
.feature-item-text {
  margin-bottom: 1.5rem;
  text-align: left;
}

/* ボタン */
.feature-item-button {
  display: inline-block;
  min-width: 10rem;
  padding: .5rem 2.5rem;
  font-weight: 700;
  color: #040000;
  border: 1px solid #ccc;
  border-radius: 1.5rem;
}

.feature-item-button:hover {
  color: #fff;
  background-color: #e47292;
  border: 1px solid #e47292;
}

`,
},
zixohub:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>Vue.js Test</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
  <div id="example">
    <p v-hide-async="2000">２秒後に非表示</p>
  </div>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
Vue.directive('hide-async', {
  bind(el, binding) {
    setTimeout(() => {
      el.style.display = 'none';
    }, binding.value);
  },
});

new Vue({
  el: '#example',
});
`,
},
zobapoq:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
</head>

<body>
  <a href="one.html">ワン</a>
  <a href="two.html">ツー</a>
  <a href="three.html">スリー</a>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
javascript:`
\$('a').attr('href', 'new.html');
`,
},
zomutul:{html:`
<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title>JavaScript Test</title>
  </head>
  <body>
    <div id="box"></div>
    <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
  </body>
</html>
`,
javascript:`
const box = document.getElementById('box');

// 10回繰り返す
for (let i = 1; i <= 10; i++) {
  box.innerHTML += \`\${i}<br>\`;
}
`,
},
zosipil:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS + daisyUI Sample</title>
    <link href="https://cdn.jsdelivr.net/npm/daisyui@2.24.0/dist/full.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <table class="table table-zebra w-full">
        <thead>
            <tr>
                <th class="text-center normal-case">No.</th>
                <th>都道府県</th>
                <th class="text-right">人口（人）</th>
                <th class="text-right normal-case">面積（km<sup>2</sup>）</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th class="text-center">1</th>
                <td>東京都</td>
                <td class="text-right">14,011,487</td>
                <td class="text-right">2,194.05</td>
            </tr>
            <tr>
                <th class="text-center">2</th>
                <td>神奈川県</td>
                <td class="text-right">9,236,428</td>
                <td class="text-right">2,416.11</td>
            </tr>
            <tr>
                <th class="text-center">3</th>
                <td>大阪府</td>
                <td class="text-right">8,807,279</td>
                <td class="text-right">1,905.34</td>
            </tr>
        </tbody>
    </table>
</body>

</html>
`,
},
zulequc:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="utf-8">
  <title>jQuery テスト</title>
  <!--<link rel="stylesheet" href="main.css">--><!-- JS Bin上では省略 -->
</head>

<body>
  <form class="my-form" action="" method="post">
    同じテキストを入力してください。
    <p>
      <input type="text" name="text1" class="text1">
    </p>
    <p>
      <input type="text" name="text2" class="text2">
    </p>
    <p>
      <input type="submit" value="送信">
    </p>
    <p class="error"></p>
  </form>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!--<script src="main.js"></script>--><!-- JS Bin上では省略 -->
</body>

</html>
`,
css:`
.error {
  color: #f00;
}
`,
javascript:`
\$('.my-form').on('submit', function(e) {
  // フォームが送信された時に実行される
  var text1 = \$('.text1').val();
  var text2 = \$('.text2').val();

  if (text1 !== text2) {
    // ページ遷移を止める
    e.preventDefault();

    \$('.error').html('テキストが一致しません');
  }else{
    // ページ遷移を止める
    e.preventDefault();

    \$('.error').html('テキストが一致しました');
  }
});
`,
},
zupusir:{html:`
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TailwindCSS Sample</title>
    <script src="https://cdn.tailwindcss.com/3.1.8"></script>
</head>

<body class="m-4">
    <div class="md:grid md:grid-cols-12 md:gap-4">
        <!-- 1行目 -->
        <div class="col-span-6 text-center bg-gray-200">01</div>
        <div class="col-span-6 text-center bg-gray-200">02</div>
        <!-- 2行目 -->
        <div class="col-span-5 text-center bg-gray-200">03</div>
        <div class="col-start-8 col-span-5 text-center bg-gray-200">04</div>
    </div>
</body>

</html>
`,
}}

